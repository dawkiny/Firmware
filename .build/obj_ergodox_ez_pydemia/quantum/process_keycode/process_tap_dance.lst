   1               		.file	"process_tap_dance.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.process_tap_dance_action_on_dance_finished.part.0,"ax",@progbits
  12               	process_tap_dance_action_on_dance_finished.part.0:
  13               	.LVL0:
  14               	.LFB125:
  15               		.file 1 "quantum/process_keycode/process_tap_dance.c"
   1:quantum/process_keycode/process_tap_dance.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_tap_dance.c ****  *
   3:quantum/process_keycode/process_tap_dance.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_tap_dance.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_tap_dance.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_tap_dance.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_tap_dance.c ****  *
   8:quantum/process_keycode/process_tap_dance.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_tap_dance.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_tap_dance.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_tap_dance.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_tap_dance.c ****  *
  13:quantum/process_keycode/process_tap_dance.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_tap_dance.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_tap_dance.c ****  */
  16:quantum/process_keycode/process_tap_dance.c **** #include "quantum.h"
  17:quantum/process_keycode/process_tap_dance.c **** #include "action_tapping.h"
  18:quantum/process_keycode/process_tap_dance.c **** 
  19:quantum/process_keycode/process_tap_dance.c **** #ifndef TAPPING_TERM
  20:quantum/process_keycode/process_tap_dance.c **** #define TAPPING_TERM 200
  21:quantum/process_keycode/process_tap_dance.c **** #endif
  22:quantum/process_keycode/process_tap_dance.c **** 
  23:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
  24:quantum/process_keycode/process_tap_dance.c **** uint8_t get_oneshot_mods(void);
  25:quantum/process_keycode/process_tap_dance.c **** #endif
  26:quantum/process_keycode/process_tap_dance.c **** 
  27:quantum/process_keycode/process_tap_dance.c **** static uint16_t last_td;
  28:quantum/process_keycode/process_tap_dance.c **** static int8_t highest_td = -1;
  29:quantum/process_keycode/process_tap_dance.c **** 
  30:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  31:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  32:quantum/process_keycode/process_tap_dance.c **** 
  33:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  34:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  35:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  36:quantum/process_keycode/process_tap_dance.c ****   }
  37:quantum/process_keycode/process_tap_dance.c **** }
  38:quantum/process_keycode/process_tap_dance.c **** 
  39:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_finished (qk_tap_dance_state_t *state, void *user_data) {
  40:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  41:quantum/process_keycode/process_tap_dance.c **** 
  42:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  43:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
  44:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  45:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  46:quantum/process_keycode/process_tap_dance.c ****   }
  47:quantum/process_keycode/process_tap_dance.c **** }
  48:quantum/process_keycode/process_tap_dance.c **** 
  49:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_reset (qk_tap_dance_state_t *state, void *user_data) {
  50:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  51:quantum/process_keycode/process_tap_dance.c **** 
  52:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  53:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
  54:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  55:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
  56:quantum/process_keycode/process_tap_dance.c ****   }
  57:quantum/process_keycode/process_tap_dance.c **** }
  58:quantum/process_keycode/process_tap_dance.c **** 
  59:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  60:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  61:quantum/process_keycode/process_tap_dance.c **** 
  62:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  63:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  64:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  65:quantum/process_keycode/process_tap_dance.c ****   }
  66:quantum/process_keycode/process_tap_dance.c **** }
  67:quantum/process_keycode/process_tap_dance.c **** 
  68:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_finished (qk_tap_dance_state_t *state, void *user_data) {
  69:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  70:quantum/process_keycode/process_tap_dance.c **** 
  71:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  72:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
  73:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  74:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  75:quantum/process_keycode/process_tap_dance.c ****   }
  76:quantum/process_keycode/process_tap_dance.c **** }
  77:quantum/process_keycode/process_tap_dance.c **** 
  78:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_reset (qk_tap_dance_state_t *state, void *user_data) {
  79:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  80:quantum/process_keycode/process_tap_dance.c **** 
  81:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  82:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
  83:quantum/process_keycode/process_tap_dance.c ****   }
  84:quantum/process_keycode/process_tap_dance.c **** }
  85:quantum/process_keycode/process_tap_dance.c **** 
  86:quantum/process_keycode/process_tap_dance.c **** static inline void _process_tap_dance_action_fn (qk_tap_dance_state_t *state,
  87:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  88:quantum/process_keycode/process_tap_dance.c ****                                                  qk_tap_dance_user_fn_t fn)
  89:quantum/process_keycode/process_tap_dance.c **** {
  90:quantum/process_keycode/process_tap_dance.c ****   if (fn) {
  91:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  92:quantum/process_keycode/process_tap_dance.c ****   }
  93:quantum/process_keycode/process_tap_dance.c **** }
  94:quantum/process_keycode/process_tap_dance.c **** 
  95:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_each_tap (qk_tap_dance_action_t *action)
  96:quantum/process_keycode/process_tap_dance.c **** {
  97:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_each_tap);
  98:quantum/process_keycode/process_tap_dance.c **** }
  99:quantum/process_keycode/process_tap_dance.c **** 
 100:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_dance_finished (qk_tap_dance_action_t *action)
  16               		.loc 1 100 20 view -0
  17               		.cfi_startproc
  18               		.loc 1 100 20 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
 101:quantum/process_keycode/process_tap_dance.c **** {
 102:quantum/process_keycode/process_tap_dance.c ****   if (action->state.finished)
 103:quantum/process_keycode/process_tap_dance.c ****     return;
 104:quantum/process_keycode/process_tap_dance.c ****   action->state.finished = true;
  32               		.loc 1 104 3 is_stmt 1 view .LVU2
  33               		.loc 1 104 26 is_stmt 0 view .LVU3
  34 0006 81E0      		ldi r24,lo8(1)
  35               	.LVL1:
  36               		.loc 1 104 26 view .LVU4
  37 0008 898B      		std Y+17,r24
 105:quantum/process_keycode/process_tap_dance.c ****   add_mods(action->state.oneshot_mods);
  38               		.loc 1 105 3 is_stmt 1 view .LVU5
  39 000a 8F81      		ldd r24,Y+7
  40 000c 0E94 0000 		call add_mods
  41               	.LVL2:
 106:quantum/process_keycode/process_tap_dance.c ****   add_weak_mods(action->state.weak_mods);
  42               		.loc 1 106 3 view .LVU6
  43 0010 8885      		ldd r24,Y+8
  44 0012 0E94 0000 		call add_weak_mods
  45               	.LVL3:
 107:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
  46               		.loc 1 107 3 view .LVU7
  47 0016 0E94 0000 		call send_keyboard_report
  48               	.LVL4:
 108:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_dance_finished);
  49               		.loc 1 108 3 view .LVU8
  50 001a EA81      		ldd r30,Y+2
  51 001c FB81      		ldd r31,Y+3
  52               	.LVL5:
  53               	.LBB4:
  54               	.LBI4:
  86:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  55               		.loc 1 86 20 view .LVU9
  56               	.LBB5:
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  57               		.loc 1 90 3 view .LVU10
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  58               		.loc 1 90 6 is_stmt 0 view .LVU11
  59 001e 3097      		sbiw r30,0
  60 0020 01F0      		breq .L1
  91:quantum/process_keycode/process_tap_dance.c ****   }
  61               		.loc 1 91 5 is_stmt 1 view .LVU12
  62 0022 6C89      		ldd r22,Y+20
  63 0024 7D89      		ldd r23,Y+21
  64 0026 CE01      		movw r24,r28
  65 0028 0696      		adiw r24,6
  66               	.LVL6:
  67               	/* epilogue start */
  91:quantum/process_keycode/process_tap_dance.c ****   }
  68               		.loc 1 91 5 is_stmt 0 view .LVU13
  69               	.LBE5:
  70               	.LBE4:
 109:quantum/process_keycode/process_tap_dance.c **** }
  71               		.loc 1 109 1 view .LVU14
  72 002a DF91      		pop r29
  73 002c CF91      		pop r28
  74               	.LVL7:
  75               	.LBB7:
  76               	.LBB6:
  91:quantum/process_keycode/process_tap_dance.c ****   }
  77               		.loc 1 91 5 view .LVU15
  78 002e 0994      		ijmp
  79               	.LVL8:
  80               	.L1:
  81               	/* epilogue start */
  91:quantum/process_keycode/process_tap_dance.c ****   }
  82               		.loc 1 91 5 view .LVU16
  83               	.LBE6:
  84               	.LBE7:
  85               		.loc 1 109 1 view .LVU17
  86 0030 DF91      		pop r29
  87 0032 CF91      		pop r28
  88               	.LVL9:
  89               		.loc 1 109 1 view .LVU18
  90 0034 0895      		ret
  91               		.cfi_endproc
  92               	.LFE125:
  94               		.section	.text.qk_tap_dance_pair_on_each_tap,"ax",@progbits
  95               	.global	qk_tap_dance_pair_on_each_tap
  97               	qk_tap_dance_pair_on_each_tap:
  98               	.LVL10:
  99               	.LFB111:
  30:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 100               		.loc 1 30 83 is_stmt 1 view -0
 101               		.cfi_startproc
  30:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 102               		.loc 1 30 83 is_stmt 0 view .LVU20
 103 0000 CF93      		push r28
 104               	.LCFI2:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 28, -2
 107 0002 DF93      		push r29
 108               	.LCFI3:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 29, -3
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 2 */
 114               	.L__stack_usage = 2
 115 0004 EC01      		movw r28,r24
  31:quantum/process_keycode/process_tap_dance.c **** 
 116               		.loc 1 31 3 is_stmt 1 view .LVU21
 117               	.LVL11:
  33:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 118               		.loc 1 33 3 view .LVU22
  33:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 119               		.loc 1 33 6 is_stmt 0 view .LVU23
 120 0006 8881      		ld r24,Y
 121               	.LVL12:
  33:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 122               		.loc 1 33 6 view .LVU24
 123 0008 8230      		cpi r24,lo8(2)
 124 000a 01F4      		brne .L3
  34:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 125               		.loc 1 34 5 is_stmt 1 view .LVU25
 126 000c FB01      		movw r30,r22
 127 000e 8281      		ldd r24,Z+2
 128 0010 9381      		ldd r25,Z+3
 129 0012 0E94 0000 		call register_code16
 130               	.LVL13:
  35:quantum/process_keycode/process_tap_dance.c ****   }
 131               		.loc 1 35 5 view .LVU26
  35:quantum/process_keycode/process_tap_dance.c ****   }
 132               		.loc 1 35 21 is_stmt 0 view .LVU27
 133 0016 81E0      		ldi r24,lo8(1)
 134 0018 8B87      		std Y+11,r24
 135               	.L3:
 136               	/* epilogue start */
  37:quantum/process_keycode/process_tap_dance.c **** 
 137               		.loc 1 37 1 view .LVU28
 138 001a DF91      		pop r29
 139 001c CF91      		pop r28
 140               	.LVL14:
  37:quantum/process_keycode/process_tap_dance.c **** 
 141               		.loc 1 37 1 view .LVU29
 142 001e 0895      		ret
 143               		.cfi_endproc
 144               	.LFE111:
 146               		.section	.text.qk_tap_dance_pair_finished,"ax",@progbits
 147               	.global	qk_tap_dance_pair_finished
 149               	qk_tap_dance_pair_finished:
 150               	.LVL15:
 151               	.LFB112:
  39:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 152               		.loc 1 39 80 is_stmt 1 view -0
 153               		.cfi_startproc
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
  40:quantum/process_keycode/process_tap_dance.c **** 
 158               		.loc 1 40 3 view .LVU31
  42:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 159               		.loc 1 42 3 view .LVU32
  42:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 160               		.loc 1 42 12 is_stmt 0 view .LVU33
 161 0000 FC01      		movw r30,r24
 162 0002 8081      		ld r24,Z
 163               	.LVL16:
  42:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 164               		.loc 1 42 6 view .LVU34
 165 0004 8130      		cpi r24,lo8(1)
 166 0006 01F4      		brne .L6
  43:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 167               		.loc 1 43 5 is_stmt 1 view .LVU35
 168 0008 FB01      		movw r30,r22
 169               	.LVL17:
  43:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 170               		.loc 1 43 5 is_stmt 0 view .LVU36
 171 000a 8081      		ld r24,Z
 172 000c 9181      		ldd r25,Z+1
 173               	.L8:
  45:quantum/process_keycode/process_tap_dance.c ****   }
 174               		.loc 1 45 5 view .LVU37
 175 000e 0C94 0000 		jmp register_code16
 176               	.LVL18:
 177               	.L6:
  44:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 178               		.loc 1 44 10 is_stmt 1 view .LVU38
  44:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 179               		.loc 1 44 13 is_stmt 0 view .LVU39
 180 0012 8230      		cpi r24,lo8(2)
 181 0014 01F4      		brne .L5
  45:quantum/process_keycode/process_tap_dance.c ****   }
 182               		.loc 1 45 5 is_stmt 1 view .LVU40
 183 0016 FB01      		movw r30,r22
 184               	.LVL19:
  45:quantum/process_keycode/process_tap_dance.c ****   }
 185               		.loc 1 45 5 is_stmt 0 view .LVU41
 186 0018 8281      		ldd r24,Z+2
 187 001a 9381      		ldd r25,Z+3
 188 001c 00C0      		rjmp .L8
 189               	.LVL20:
 190               	.L5:
 191               	/* epilogue start */
  47:quantum/process_keycode/process_tap_dance.c **** 
 192               		.loc 1 47 1 view .LVU42
 193 001e 0895      		ret
 194               		.cfi_endproc
 195               	.LFE112:
 197               		.section	.text.qk_tap_dance_pair_reset,"ax",@progbits
 198               	.global	qk_tap_dance_pair_reset
 200               	qk_tap_dance_pair_reset:
 201               	.LVL21:
 202               	.LFB113:
  49:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 203               		.loc 1 49 77 is_stmt 1 view -0
 204               		.cfi_startproc
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 0 */
 208               	.L__stack_usage = 0
  50:quantum/process_keycode/process_tap_dance.c **** 
 209               		.loc 1 50 3 view .LVU44
  52:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 210               		.loc 1 52 3 view .LVU45
  52:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 211               		.loc 1 52 12 is_stmt 0 view .LVU46
 212 0000 FC01      		movw r30,r24
 213 0002 8081      		ld r24,Z
 214               	.LVL22:
  52:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 215               		.loc 1 52 6 view .LVU47
 216 0004 8130      		cpi r24,lo8(1)
 217 0006 01F4      		brne .L10
  53:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 218               		.loc 1 53 5 is_stmt 1 view .LVU48
 219 0008 FB01      		movw r30,r22
 220               	.LVL23:
  53:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 221               		.loc 1 53 5 is_stmt 0 view .LVU49
 222 000a 8081      		ld r24,Z
 223 000c 9181      		ldd r25,Z+1
 224               	.L12:
  55:quantum/process_keycode/process_tap_dance.c ****   }
 225               		.loc 1 55 5 view .LVU50
 226 000e 0C94 0000 		jmp unregister_code16
 227               	.LVL24:
 228               	.L10:
  54:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 229               		.loc 1 54 10 is_stmt 1 view .LVU51
  54:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 230               		.loc 1 54 13 is_stmt 0 view .LVU52
 231 0012 8230      		cpi r24,lo8(2)
 232 0014 01F4      		brne .L9
  55:quantum/process_keycode/process_tap_dance.c ****   }
 233               		.loc 1 55 5 is_stmt 1 view .LVU53
 234 0016 FB01      		movw r30,r22
 235               	.LVL25:
  55:quantum/process_keycode/process_tap_dance.c ****   }
 236               		.loc 1 55 5 is_stmt 0 view .LVU54
 237 0018 8281      		ldd r24,Z+2
 238 001a 9381      		ldd r25,Z+3
 239 001c 00C0      		rjmp .L12
 240               	.LVL26:
 241               	.L9:
 242               	/* epilogue start */
  57:quantum/process_keycode/process_tap_dance.c **** 
 243               		.loc 1 57 1 view .LVU55
 244 001e 0895      		ret
 245               		.cfi_endproc
 246               	.LFE113:
 248               		.section	.text.qk_tap_dance_dual_role_on_each_tap,"ax",@progbits
 249               	.global	qk_tap_dance_dual_role_on_each_tap
 251               	qk_tap_dance_dual_role_on_each_tap:
 252               	.LVL27:
 253               	.LFB114:
  59:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 254               		.loc 1 59 88 is_stmt 1 view -0
 255               		.cfi_startproc
  59:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 256               		.loc 1 59 88 is_stmt 0 view .LVU57
 257 0000 CF93      		push r28
 258               	.LCFI4:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI5:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 2 */
 268               	.L__stack_usage = 2
 269 0004 EC01      		movw r28,r24
  60:quantum/process_keycode/process_tap_dance.c **** 
 270               		.loc 1 60 3 is_stmt 1 view .LVU58
 271               	.LVL28:
  62:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 272               		.loc 1 62 3 view .LVU59
  62:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 273               		.loc 1 62 6 is_stmt 0 view .LVU60
 274 0006 8881      		ld r24,Y
 275               	.LVL29:
  62:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 276               		.loc 1 62 6 view .LVU61
 277 0008 8230      		cpi r24,lo8(2)
 278 000a 01F4      		brne .L13
  63:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 279               		.loc 1 63 5 is_stmt 1 view .LVU62
 280 000c FB01      		movw r30,r22
 281 000e 8281      		ldd r24,Z+2
 282 0010 0E94 0000 		call layer_move
 283               	.LVL30:
  64:quantum/process_keycode/process_tap_dance.c ****   }
 284               		.loc 1 64 5 view .LVU63
  64:quantum/process_keycode/process_tap_dance.c ****   }
 285               		.loc 1 64 21 is_stmt 0 view .LVU64
 286 0014 81E0      		ldi r24,lo8(1)
 287 0016 8B87      		std Y+11,r24
 288               	.L13:
 289               	/* epilogue start */
  66:quantum/process_keycode/process_tap_dance.c **** 
 290               		.loc 1 66 1 view .LVU65
 291 0018 DF91      		pop r29
 292 001a CF91      		pop r28
 293               	.LVL31:
  66:quantum/process_keycode/process_tap_dance.c **** 
 294               		.loc 1 66 1 view .LVU66
 295 001c 0895      		ret
 296               		.cfi_endproc
 297               	.LFE114:
 299               		.section	.text.qk_tap_dance_dual_role_finished,"ax",@progbits
 300               	.global	qk_tap_dance_dual_role_finished
 302               	qk_tap_dance_dual_role_finished:
 303               	.LVL32:
 304               	.LFB115:
  68:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 305               		.loc 1 68 85 is_stmt 1 view -0
 306               		.cfi_startproc
 307               	/* prologue: function */
 308               	/* frame size = 0 */
 309               	/* stack size = 0 */
 310               	.L__stack_usage = 0
  69:quantum/process_keycode/process_tap_dance.c **** 
 311               		.loc 1 69 3 view .LVU68
  71:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 312               		.loc 1 71 3 view .LVU69
  71:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 313               		.loc 1 71 12 is_stmt 0 view .LVU70
 314 0000 FC01      		movw r30,r24
 315 0002 8081      		ld r24,Z
 316               	.LVL33:
  71:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 317               		.loc 1 71 6 view .LVU71
 318 0004 8130      		cpi r24,lo8(1)
 319 0006 01F4      		brne .L16
  72:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 320               		.loc 1 72 5 is_stmt 1 view .LVU72
 321 0008 FB01      		movw r30,r22
 322               	.LVL34:
  72:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 323               		.loc 1 72 5 is_stmt 0 view .LVU73
 324 000a 8081      		ld r24,Z
 325 000c 9181      		ldd r25,Z+1
 326 000e 0C94 0000 		jmp register_code16
 327               	.LVL35:
 328               	.L16:
  73:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 329               		.loc 1 73 10 is_stmt 1 view .LVU74
  73:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 330               		.loc 1 73 13 is_stmt 0 view .LVU75
 331 0012 8230      		cpi r24,lo8(2)
 332 0014 01F4      		brne .L15
  74:quantum/process_keycode/process_tap_dance.c ****   }
 333               		.loc 1 74 5 is_stmt 1 view .LVU76
 334 0016 FB01      		movw r30,r22
 335               	.LVL36:
  74:quantum/process_keycode/process_tap_dance.c ****   }
 336               		.loc 1 74 5 is_stmt 0 view .LVU77
 337 0018 8281      		ldd r24,Z+2
 338 001a 0C94 0000 		jmp layer_move
 339               	.LVL37:
 340               	.L15:
 341               	/* epilogue start */
  76:quantum/process_keycode/process_tap_dance.c **** 
 342               		.loc 1 76 1 view .LVU78
 343 001e 0895      		ret
 344               		.cfi_endproc
 345               	.LFE115:
 347               		.section	.text.qk_tap_dance_dual_role_reset,"ax",@progbits
 348               	.global	qk_tap_dance_dual_role_reset
 350               	qk_tap_dance_dual_role_reset:
 351               	.LVL38:
 352               	.LFB116:
  78:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 353               		.loc 1 78 82 is_stmt 1 view -0
 354               		.cfi_startproc
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
  79:quantum/process_keycode/process_tap_dance.c **** 
 359               		.loc 1 79 3 view .LVU80
  81:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 360               		.loc 1 81 3 view .LVU81
  81:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 361               		.loc 1 81 6 is_stmt 0 view .LVU82
 362 0000 FC01      		movw r30,r24
 363 0002 8081      		ld r24,Z
 364               	.LVL39:
  81:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 365               		.loc 1 81 6 view .LVU83
 366 0004 8130      		cpi r24,lo8(1)
 367 0006 01F4      		brne .L18
  82:quantum/process_keycode/process_tap_dance.c ****   }
 368               		.loc 1 82 5 is_stmt 1 view .LVU84
 369 0008 FB01      		movw r30,r22
 370               	.LVL40:
  82:quantum/process_keycode/process_tap_dance.c ****   }
 371               		.loc 1 82 5 is_stmt 0 view .LVU85
 372 000a 8081      		ld r24,Z
 373 000c 9181      		ldd r25,Z+1
 374 000e 0C94 0000 		jmp unregister_code16
 375               	.LVL41:
 376               	.L18:
 377               	/* epilogue start */
  84:quantum/process_keycode/process_tap_dance.c **** 
 378               		.loc 1 84 1 view .LVU86
 379 0012 0895      		ret
 380               		.cfi_endproc
 381               	.LFE116:
 383               		.section	.text.reset_tap_dance,"ax",@progbits
 384               	.global	reset_tap_dance
 386               	reset_tap_dance:
 387               	.LVL42:
 388               	.LFB124:
 110:quantum/process_keycode/process_tap_dance.c **** 
 111:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_reset (qk_tap_dance_action_t *action)
 112:quantum/process_keycode/process_tap_dance.c **** {
 113:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_reset);
 114:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 115:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 116:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 117:quantum/process_keycode/process_tap_dance.c **** }
 118:quantum/process_keycode/process_tap_dance.c **** 
 119:quantum/process_keycode/process_tap_dance.c **** void preprocess_tap_dance(uint16_t keycode, keyrecord_t *record) {
 120:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 121:quantum/process_keycode/process_tap_dance.c **** 
 122:quantum/process_keycode/process_tap_dance.c ****   if (!record->event.pressed)
 123:quantum/process_keycode/process_tap_dance.c ****     return;
 124:quantum/process_keycode/process_tap_dance.c **** 
 125:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 126:quantum/process_keycode/process_tap_dance.c ****     return;
 127:quantum/process_keycode/process_tap_dance.c **** 
 128:quantum/process_keycode/process_tap_dance.c ****   for (int i = 0; i <= highest_td; i++) {
 129:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 130:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 131:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 132:quantum/process_keycode/process_tap_dance.c ****         continue;
 133:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupted = true;
 134:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupting_keycode = keycode;
 135:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 136:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 137:quantum/process_keycode/process_tap_dance.c ****     }
 138:quantum/process_keycode/process_tap_dance.c ****   }
 139:quantum/process_keycode/process_tap_dance.c **** }
 140:quantum/process_keycode/process_tap_dance.c **** 
 141:quantum/process_keycode/process_tap_dance.c **** bool process_tap_dance(uint16_t keycode, keyrecord_t *record) {
 142:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 143:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 144:quantum/process_keycode/process_tap_dance.c **** 
 145:quantum/process_keycode/process_tap_dance.c ****   switch(keycode) {
 146:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 147:quantum/process_keycode/process_tap_dance.c ****     if ((int16_t)idx > highest_td)
 148:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 149:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 150:quantum/process_keycode/process_tap_dance.c **** 
 151:quantum/process_keycode/process_tap_dance.c ****     action->state.pressed = record->event.pressed;
 152:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 153:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 154:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 155:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 156:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 157:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 158:quantum/process_keycode/process_tap_dance.c **** #else
 159:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = 0;
 160:quantum/process_keycode/process_tap_dance.c **** #endif
 161:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 162:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 163:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 164:quantum/process_keycode/process_tap_dance.c **** 
 165:quantum/process_keycode/process_tap_dance.c ****       last_td = keycode;
 166:quantum/process_keycode/process_tap_dance.c ****     } else {
 167:quantum/process_keycode/process_tap_dance.c ****       if (action->state.count && action->state.finished) {
 168:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 169:quantum/process_keycode/process_tap_dance.c ****       }
 170:quantum/process_keycode/process_tap_dance.c ****     }
 171:quantum/process_keycode/process_tap_dance.c **** 
 172:quantum/process_keycode/process_tap_dance.c ****     break;
 173:quantum/process_keycode/process_tap_dance.c ****   }
 174:quantum/process_keycode/process_tap_dance.c **** 
 175:quantum/process_keycode/process_tap_dance.c ****   return true;
 176:quantum/process_keycode/process_tap_dance.c **** }
 177:quantum/process_keycode/process_tap_dance.c **** 
 178:quantum/process_keycode/process_tap_dance.c **** 
 179:quantum/process_keycode/process_tap_dance.c **** 
 180:quantum/process_keycode/process_tap_dance.c **** void matrix_scan_tap_dance () {
 181:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 182:quantum/process_keycode/process_tap_dance.c ****     return;
 183:quantum/process_keycode/process_tap_dance.c ****   uint16_t tap_user_defined;
 184:quantum/process_keycode/process_tap_dance.c **** 
 185:quantum/process_keycode/process_tap_dance.c ****   for (uint8_t i = 0; i <= highest_td; i++) {
 186:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 187:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 188:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 189:quantum/process_keycode/process_tap_dance.c ****     }
 190:quantum/process_keycode/process_tap_dance.c ****     else{
 191:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = TAPPING_TERM;
 192:quantum/process_keycode/process_tap_dance.c ****     }
 193:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count && timer_elapsed (action->state.timer) > tap_user_defined) {
 194:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 195:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 196:quantum/process_keycode/process_tap_dance.c ****     }
 197:quantum/process_keycode/process_tap_dance.c ****   }
 198:quantum/process_keycode/process_tap_dance.c **** }
 199:quantum/process_keycode/process_tap_dance.c **** 
 200:quantum/process_keycode/process_tap_dance.c **** void reset_tap_dance (qk_tap_dance_state_t *state) {
 389               		.loc 1 200 52 is_stmt 1 view -0
 390               		.cfi_startproc
 391               		.loc 1 200 52 is_stmt 0 view .LVU88
 392 0000 EF92      		push r14
 393               	.LCFI6:
 394               		.cfi_def_cfa_offset 3
 395               		.cfi_offset 14, -2
 396 0002 FF92      		push r15
 397               	.LCFI7:
 398               		.cfi_def_cfa_offset 4
 399               		.cfi_offset 15, -3
 400 0004 0F93      		push r16
 401               	.LCFI8:
 402               		.cfi_def_cfa_offset 5
 403               		.cfi_offset 16, -4
 404 0006 1F93      		push r17
 405               	.LCFI9:
 406               		.cfi_def_cfa_offset 6
 407               		.cfi_offset 17, -5
 408 0008 CF93      		push r28
 409               	.LCFI10:
 410               		.cfi_def_cfa_offset 7
 411               		.cfi_offset 28, -6
 412 000a DF93      		push r29
 413               	.LCFI11:
 414               		.cfi_def_cfa_offset 8
 415               		.cfi_offset 29, -7
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 6 */
 419               	.L__stack_usage = 6
 420 000c EC01      		movw r28,r24
 201:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 421               		.loc 1 201 3 is_stmt 1 view .LVU89
 202:quantum/process_keycode/process_tap_dance.c **** 
 203:quantum/process_keycode/process_tap_dance.c ****   if (state->pressed)
 422               		.loc 1 203 3 view .LVU90
 423               		.loc 1 203 6 is_stmt 0 view .LVU91
 424 000e 8A85      		ldd r24,Y+10
 425               	.LVL43:
 426               		.loc 1 203 6 view .LVU92
 427 0010 8111      		cpse r24,__zero_reg__
 428 0012 00C0      		rjmp .L20
 204:quantum/process_keycode/process_tap_dance.c ****     return;
 205:quantum/process_keycode/process_tap_dance.c **** 
 206:quantum/process_keycode/process_tap_dance.c ****   action = &tap_dance_actions[state->keycode - QK_TAP_DANCE];
 429               		.loc 1 206 3 is_stmt 1 view .LVU93
 430               		.loc 1 206 46 is_stmt 0 view .LVU94
 431 0014 EB80      		ldd r14,Y+3
 432 0016 FC80      		ldd r15,Y+4
 433 0018 87E5      		ldi r24,87
 434 001a F81A      		sub r15,r24
 435               	.LVL44:
 207:quantum/process_keycode/process_tap_dance.c **** 
 208:quantum/process_keycode/process_tap_dance.c ****   process_tap_dance_action_on_reset (action);
 436               		.loc 1 208 3 is_stmt 1 view .LVU95
 437               	.LBB12:
 438               	.LBI12:
 111:quantum/process_keycode/process_tap_dance.c **** {
 439               		.loc 1 111 20 view .LVU96
 440               	.LBB13:
 113:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 441               		.loc 1 113 3 view .LVU97
 442 001c 26E1      		ldi r18,lo8(22)
 443 001e 2E9D      		mul r18,r14
 444 0020 C001      		movw r24,r0
 445 0022 2F9D      		mul r18,r15
 446 0024 900D      		add r25,r0
 447 0026 1124      		clr __zero_reg__
 448 0028 DC01      		movw r26,r24
 449 002a A050      		subi r26,lo8(-(tap_dance_actions))
 450 002c B040      		sbci r27,hi8(-(tap_dance_actions))
 451 002e 1496      		adiw r26,4
 452 0030 ED91      		ld r30,X+
 453 0032 FC91      		ld r31,X
 454 0034 1597      		sbiw r26,4+1
 455               	.LVL45:
 456               	.LBB14:
 457               	.LBI14:
  86:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 458               		.loc 1 86 20 view .LVU98
 459               	.LBB15:
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 460               		.loc 1 90 3 view .LVU99
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 461               		.loc 1 90 6 is_stmt 0 view .LVU100
 462 0036 3097      		sbiw r30,0
 463 0038 01F0      		breq .L22
  91:quantum/process_keycode/process_tap_dance.c ****   }
 464               		.loc 1 91 5 is_stmt 1 view .LVU101
 465 003a 5496      		adiw r26,20
 466 003c 6D91      		ld r22,X+
 467 003e 7C91      		ld r23,X
 468 0040 8050      		subi r24,lo8(-(tap_dance_actions+6))
 469 0042 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 470 0044 0995      		icall
 471               	.LVL46:
 472               	.L22:
  91:quantum/process_keycode/process_tap_dance.c ****   }
 473               		.loc 1 91 5 is_stmt 0 view .LVU102
 474               	.LBE15:
 475               	.LBE14:
 114:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 476               		.loc 1 114 3 is_stmt 1 view .LVU103
 477 0046 86E1      		ldi r24,lo8(22)
 478 0048 8E9D      		mul r24,r14
 479 004a 8001      		movw r16,r0
 480 004c 8F9D      		mul r24,r15
 481 004e 100D      		add r17,r0
 482 0050 1124      		clr __zero_reg__
 483 0052 0050      		subi r16,lo8(-(tap_dance_actions))
 484 0054 1040      		sbci r17,hi8(-(tap_dance_actions))
 485 0056 F801      		movw r30,r16
 486 0058 8781      		ldd r24,Z+7
 487 005a 0E94 0000 		call del_mods
 488               	.LVL47:
 115:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 489               		.loc 1 115 3 view .LVU104
 490 005e F801      		movw r30,r16
 491 0060 8085      		ldd r24,Z+8
 492 0062 0E94 0000 		call del_weak_mods
 493               	.LVL48:
 116:quantum/process_keycode/process_tap_dance.c **** }
 494               		.loc 1 116 3 view .LVU105
 495 0066 0E94 0000 		call send_keyboard_report
 496               	.LVL49:
 116:quantum/process_keycode/process_tap_dance.c **** }
 497               		.loc 1 116 3 is_stmt 0 view .LVU106
 498               	.LBE13:
 499               	.LBE12:
 209:quantum/process_keycode/process_tap_dance.c **** 
 210:quantum/process_keycode/process_tap_dance.c ****   state->count = 0;
 500               		.loc 1 210 3 is_stmt 1 view .LVU107
 501               		.loc 1 210 16 is_stmt 0 view .LVU108
 502 006a 1882      		st Y,__zero_reg__
 211:quantum/process_keycode/process_tap_dance.c ****   state->interrupted = false;
 503               		.loc 1 211 3 is_stmt 1 view .LVU109
 504               		.loc 1 211 22 is_stmt 0 view .LVU110
 505 006c 1986      		std Y+9,__zero_reg__
 212:quantum/process_keycode/process_tap_dance.c ****   state->finished = false;
 506               		.loc 1 212 3 is_stmt 1 view .LVU111
 507               		.loc 1 212 19 is_stmt 0 view .LVU112
 508 006e 1B86      		std Y+11,__zero_reg__
 213:quantum/process_keycode/process_tap_dance.c ****   state->interrupting_keycode = 0;
 509               		.loc 1 213 3 is_stmt 1 view .LVU113
 510               		.loc 1 213 31 is_stmt 0 view .LVU114
 511 0070 1E82      		std Y+6,__zero_reg__
 512 0072 1D82      		std Y+5,__zero_reg__
 214:quantum/process_keycode/process_tap_dance.c ****   last_td = 0;
 513               		.loc 1 214 3 is_stmt 1 view .LVU115
 514               		.loc 1 214 11 is_stmt 0 view .LVU116
 515 0074 1092 0000 		sts last_td+1,__zero_reg__
 516 0078 1092 0000 		sts last_td,__zero_reg__
 517               	.LVL50:
 518               	.L20:
 519               	/* epilogue start */
 215:quantum/process_keycode/process_tap_dance.c **** }
 520               		.loc 1 215 1 view .LVU117
 521 007c DF91      		pop r29
 522 007e CF91      		pop r28
 523               	.LVL51:
 524               		.loc 1 215 1 view .LVU118
 525 0080 1F91      		pop r17
 526 0082 0F91      		pop r16
 527 0084 FF90      		pop r15
 528 0086 EF90      		pop r14
 529 0088 0895      		ret
 530               		.cfi_endproc
 531               	.LFE124:
 533               		.section	.text.preprocess_tap_dance,"ax",@progbits
 534               	.global	preprocess_tap_dance
 536               	preprocess_tap_dance:
 537               	.LVL52:
 538               	.LFB121:
 119:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 539               		.loc 1 119 66 is_stmt 1 view -0
 540               		.cfi_startproc
 119:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 541               		.loc 1 119 66 is_stmt 0 view .LVU120
 542 0000 DF92      		push r13
 543               	.LCFI12:
 544               		.cfi_def_cfa_offset 3
 545               		.cfi_offset 13, -2
 546 0002 EF92      		push r14
 547               	.LCFI13:
 548               		.cfi_def_cfa_offset 4
 549               		.cfi_offset 14, -3
 550 0004 FF92      		push r15
 551               	.LCFI14:
 552               		.cfi_def_cfa_offset 5
 553               		.cfi_offset 15, -4
 554 0006 0F93      		push r16
 555               	.LCFI15:
 556               		.cfi_def_cfa_offset 6
 557               		.cfi_offset 16, -5
 558 0008 1F93      		push r17
 559               	.LCFI16:
 560               		.cfi_def_cfa_offset 7
 561               		.cfi_offset 17, -6
 562 000a CF93      		push r28
 563               	.LCFI17:
 564               		.cfi_def_cfa_offset 8
 565               		.cfi_offset 28, -7
 566 000c DF93      		push r29
 567               	.LCFI18:
 568               		.cfi_def_cfa_offset 9
 569               		.cfi_offset 29, -8
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 7 */
 573               	.L__stack_usage = 7
 574 000e 7C01      		movw r14,r24
 120:quantum/process_keycode/process_tap_dance.c **** 
 575               		.loc 1 120 3 is_stmt 1 view .LVU121
 122:quantum/process_keycode/process_tap_dance.c ****     return;
 576               		.loc 1 122 3 view .LVU122
 122:quantum/process_keycode/process_tap_dance.c ****     return;
 577               		.loc 1 122 6 is_stmt 0 view .LVU123
 578 0010 FB01      		movw r30,r22
 579 0012 8281      		ldd r24,Z+2
 580               	.LVL53:
 122:quantum/process_keycode/process_tap_dance.c ****     return;
 581               		.loc 1 122 6 view .LVU124
 582 0014 8823      		tst r24
 583 0016 01F0      		breq .L26
 125:quantum/process_keycode/process_tap_dance.c ****     return;
 584               		.loc 1 125 3 is_stmt 1 view .LVU125
 125:quantum/process_keycode/process_tap_dance.c ****     return;
 585               		.loc 1 125 6 is_stmt 0 view .LVU126
 586 0018 8091 0000 		lds r24,highest_td
 587 001c 8F3F      		cpi r24,lo8(-1)
 588 001e 01F0      		breq .L26
 589 0020 C0E0      		ldi r28,lo8(tap_dance_actions)
 590 0022 D0E0      		ldi r29,hi8(tap_dance_actions)
 591               	.LBB19:
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 592               		.loc 1 128 12 view .LVU127
 593 0024 10E0      		ldi r17,0
 594 0026 00E0      		ldi r16,0
 133:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupting_keycode = keycode;
 595               		.loc 1 133 33 view .LVU128
 596 0028 DD24      		clr r13
 597 002a D394      		inc r13
 598               	.LVL54:
 599               	.L29:
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 600               		.loc 1 128 21 discriminator 1 view .LVU129
 601 002c 8091 0000 		lds r24,highest_td
 602 0030 082E      		mov __tmp_reg__,r24
 603 0032 000C      		lsl r0
 604 0034 990B      		sbc r25,r25
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 605               		.loc 1 128 3 discriminator 1 view .LVU130
 606 0036 8017      		cp r24,r16
 607 0038 9107      		cpc r25,r17
 608 003a 04F4      		brge .L33
 609               	.LVL55:
 610               	.L26:
 611               	/* epilogue start */
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 612               		.loc 1 128 3 discriminator 1 view .LVU131
 613               	.LBE19:
 139:quantum/process_keycode/process_tap_dance.c **** 
 614               		.loc 1 139 1 view .LVU132
 615 003c DF91      		pop r29
 616 003e CF91      		pop r28
 617 0040 1F91      		pop r17
 618 0042 0F91      		pop r16
 619 0044 FF90      		pop r15
 620 0046 EF90      		pop r14
 621               	.LVL56:
 139:quantum/process_keycode/process_tap_dance.c **** 
 622               		.loc 1 139 1 view .LVU133
 623 0048 DF90      		pop r13
 624 004a 0895      		ret
 625               	.LVL57:
 626               	.L33:
 627               	.LBB22:
 129:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 628               		.loc 1 129 5 is_stmt 1 view .LVU134
 130:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 629               		.loc 1 130 5 view .LVU135
 130:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 630               		.loc 1 130 8 is_stmt 0 view .LVU136
 631 004c 8E81      		ldd r24,Y+6
 632 004e 8823      		tst r24
 633 0050 01F0      		breq .L30
 131:quantum/process_keycode/process_tap_dance.c ****         continue;
 634               		.loc 1 131 7 is_stmt 1 view .LVU137
 131:quantum/process_keycode/process_tap_dance.c ****         continue;
 635               		.loc 1 131 10 is_stmt 0 view .LVU138
 636 0052 8985      		ldd r24,Y+9
 637 0054 9A85      		ldd r25,Y+10
 638 0056 8E15      		cp r24,r14
 639 0058 9F05      		cpc r25,r15
 640 005a 01F4      		brne .L31
 131:quantum/process_keycode/process_tap_dance.c ****         continue;
 641               		.loc 1 131 44 discriminator 1 view .LVU139
 642 005c 8091 0000 		lds r24,last_td
 643 0060 9091 0000 		lds r25,last_td+1
 644 0064 8E15      		cp r24,r14
 645 0066 9F05      		cpc r25,r15
 646 0068 01F0      		breq .L30
 647               	.L31:
 133:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupting_keycode = keycode;
 648               		.loc 1 133 7 is_stmt 1 view .LVU140
 133:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupting_keycode = keycode;
 649               		.loc 1 133 33 is_stmt 0 view .LVU141
 650 006a DF86      		std Y+15,r13
 134:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 651               		.loc 1 134 7 is_stmt 1 view .LVU142
 134:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 652               		.loc 1 134 42 is_stmt 0 view .LVU143
 653 006c FC86      		std Y+12,r15
 654 006e EB86      		std Y+11,r14
 135:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 655               		.loc 1 135 7 is_stmt 1 view .LVU144
 656               	.LVL58:
 657               	.LBB20:
 658               	.LBI20:
 100:quantum/process_keycode/process_tap_dance.c **** {
 659               		.loc 1 100 20 view .LVU145
 660               	.LBB21:
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 661               		.loc 1 102 3 view .LVU146
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 662               		.loc 1 102 6 is_stmt 0 view .LVU147
 663 0070 8989      		ldd r24,Y+17
 664 0072 8111      		cpse r24,__zero_reg__
 665 0074 00C0      		rjmp .L32
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 666               		.loc 1 102 6 view .LVU148
 667 0076 CE01      		movw r24,r28
 668 0078 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 669               	.LVL59:
 670               	.L32:
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 671               		.loc 1 102 6 view .LVU149
 672               	.LBE21:
 673               	.LBE20:
 136:quantum/process_keycode/process_tap_dance.c ****     }
 674               		.loc 1 136 7 is_stmt 1 view .LVU150
 675 007c CE01      		movw r24,r28
 676 007e 0696      		adiw r24,6
 677 0080 0E94 0000 		call reset_tap_dance
 678               	.LVL60:
 679               	.L30:
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 680               		.loc 1 128 37 is_stmt 0 discriminator 2 view .LVU151
 681 0084 0F5F      		subi r16,-1
 682 0086 1F4F      		sbci r17,-1
 683               	.LVL61:
 128:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 684               		.loc 1 128 37 discriminator 2 view .LVU152
 685 0088 6696      		adiw r28,22
 686 008a 00C0      		rjmp .L29
 687               	.LBE22:
 688               		.cfi_endproc
 689               	.LFE121:
 691               		.section	.text.process_tap_dance,"ax",@progbits
 692               	.global	process_tap_dance
 694               	process_tap_dance:
 695               	.LVL62:
 696               	.LFB122:
 141:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 697               		.loc 1 141 63 is_stmt 1 view -0
 698               		.cfi_startproc
 141:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 699               		.loc 1 141 63 is_stmt 0 view .LVU154
 700 0000 EF92      		push r14
 701               	.LCFI19:
 702               		.cfi_def_cfa_offset 3
 703               		.cfi_offset 14, -2
 704 0002 FF92      		push r15
 705               	.LCFI20:
 706               		.cfi_def_cfa_offset 4
 707               		.cfi_offset 15, -3
 708 0004 0F93      		push r16
 709               	.LCFI21:
 710               		.cfi_def_cfa_offset 5
 711               		.cfi_offset 16, -4
 712 0006 1F93      		push r17
 713               	.LCFI22:
 714               		.cfi_def_cfa_offset 6
 715               		.cfi_offset 17, -5
 716 0008 CF93      		push r28
 717               	.LCFI23:
 718               		.cfi_def_cfa_offset 7
 719               		.cfi_offset 28, -6
 720 000a DF93      		push r29
 721               	.LCFI24:
 722               		.cfi_def_cfa_offset 8
 723               		.cfi_offset 29, -7
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 726               	/* stack size = 6 */
 727               	.L__stack_usage = 6
 728 000c 7C01      		movw r14,r24
 142:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 729               		.loc 1 142 3 is_stmt 1 view .LVU155
 142:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 730               		.loc 1 142 12 is_stmt 0 view .LVU156
 731 000e 9755      		subi r25,87
 732               	.LVL63:
 143:quantum/process_keycode/process_tap_dance.c **** 
 733               		.loc 1 143 3 is_stmt 1 view .LVU157
 145:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 734               		.loc 1 145 3 view .LVU158
 735 0010 8F3F      		cpi r24,-1
 736 0012 9105      		cpc r25,__zero_reg__
 737 0014 01F0      		breq .+2
 738 0016 00F4      		brsh .L42
 147:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 739               		.loc 1 147 5 view .LVU159
 147:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 740               		.loc 1 147 22 is_stmt 0 view .LVU160
 741 0018 2091 0000 		lds r18,highest_td
 742 001c 022E      		mov __tmp_reg__,r18
 743 001e 000C      		lsl r0
 744 0020 330B      		sbc r19,r19
 147:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 745               		.loc 1 147 8 view .LVU161
 746 0022 2817      		cp r18,r24
 747 0024 3907      		cpc r19,r25
 748 0026 04F4      		brge .L43
 148:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 749               		.loc 1 148 7 is_stmt 1 view .LVU162
 148:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 750               		.loc 1 148 18 is_stmt 0 view .LVU163
 751 0028 8093 0000 		sts highest_td,r24
 752               	.L43:
 149:quantum/process_keycode/process_tap_dance.c **** 
 753               		.loc 1 149 5 is_stmt 1 view .LVU164
 754               	.LVL64:
 151:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 755               		.loc 1 151 5 view .LVU165
 151:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 756               		.loc 1 151 42 is_stmt 0 view .LVU166
 757 002c FB01      		movw r30,r22
 758 002e 2281      		ldd r18,Z+2
 151:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 759               		.loc 1 151 27 view .LVU167
 760 0030 36E1      		ldi r19,lo8(22)
 761 0032 389F      		mul r19,r24
 762 0034 8001      		movw r16,r0
 763 0036 399F      		mul r19,r25
 764 0038 100D      		add r17,r0
 765 003a 1124      		clr __zero_reg__
 766 003c E801      		movw r28,r16
 767 003e C050      		subi r28,lo8(-(tap_dance_actions))
 768 0040 D040      		sbci r29,hi8(-(tap_dance_actions))
 769 0042 288B      		std Y+16,r18
 152:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 770               		.loc 1 152 5 is_stmt 1 view .LVU168
 152:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 771               		.loc 1 152 8 is_stmt 0 view .LVU169
 772 0044 9281      		ldd r25,Z+2
 773 0046 8E81      		ldd r24,Y+6
 774               	.LVL65:
 152:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 775               		.loc 1 152 8 view .LVU170
 776 0048 9923      		tst r25
 777 004a 01F0      		breq .L44
 153:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 778               		.loc 1 153 7 is_stmt 1 view .LVU171
 153:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 779               		.loc 1 153 29 is_stmt 0 view .LVU172
 780 004c FA86      		std Y+10,r15
 781 004e E986      		std Y+9,r14
 154:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 782               		.loc 1 154 7 is_stmt 1 view .LVU173
 154:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 783               		.loc 1 154 26 is_stmt 0 view .LVU174
 784 0050 8F5F      		subi r24,lo8(-(1))
 785 0052 8E83      		std Y+6,r24
 155:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 786               		.loc 1 155 7 is_stmt 1 view .LVU175
 155:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 787               		.loc 1 155 29 is_stmt 0 view .LVU176
 788 0054 0E94 0000 		call timer_read
 789               	.LVL66:
 155:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 790               		.loc 1 155 27 view .LVU177
 791 0058 9E87      		std Y+14,r25
 792 005a 8D87      		std Y+13,r24
 157:quantum/process_keycode/process_tap_dance.c **** #else
 793               		.loc 1 157 7 is_stmt 1 view .LVU178
 157:quantum/process_keycode/process_tap_dance.c **** #else
 794               		.loc 1 157 36 is_stmt 0 view .LVU179
 795 005c 0E94 0000 		call get_oneshot_mods
 796               	.LVL67:
 157:quantum/process_keycode/process_tap_dance.c **** #else
 797               		.loc 1 157 34 view .LVU180
 798 0060 8F83      		std Y+7,r24
 161:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 799               		.loc 1 161 7 is_stmt 1 view .LVU181
 161:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 800               		.loc 1 161 33 is_stmt 0 view .LVU182
 801 0062 0E94 0000 		call get_mods
 802               	.LVL68:
 161:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 803               		.loc 1 161 31 view .LVU183
 804 0066 8887      		std Y+8,r24
 162:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 805               		.loc 1 162 7 is_stmt 1 view .LVU184
 162:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 806               		.loc 1 162 34 is_stmt 0 view .LVU185
 807 0068 0E94 0000 		call get_weak_mods
 808               	.LVL69:
 162:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 809               		.loc 1 162 31 view .LVU186
 810 006c 9885      		ldd r25,Y+8
 811 006e 892B      		or r24,r25
 812 0070 8887      		std Y+8,r24
 163:quantum/process_keycode/process_tap_dance.c **** 
 813               		.loc 1 163 7 is_stmt 1 view .LVU187
 814               	.LVL70:
 815               	.LBB27:
 816               	.LBI27:
  95:quantum/process_keycode/process_tap_dance.c **** {
 817               		.loc 1 95 20 view .LVU188
 818               	.LBB28:
  97:quantum/process_keycode/process_tap_dance.c **** }
 819               		.loc 1 97 3 view .LVU189
 820 0072 E881      		ld r30,Y
 821 0074 F981      		ldd r31,Y+1
 822               	.LVL71:
 823               	.LBB29:
 824               	.LBI29:
  86:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 825               		.loc 1 86 20 view .LVU190
 826               	.LBB30:
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 827               		.loc 1 90 3 view .LVU191
  90:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 828               		.loc 1 90 6 is_stmt 0 view .LVU192
 829 0076 3097      		sbiw r30,0
 830 0078 01F0      		breq .L45
  91:quantum/process_keycode/process_tap_dance.c ****   }
 831               		.loc 1 91 5 is_stmt 1 view .LVU193
 832 007a 6C89      		ldd r22,Y+20
 833 007c 7D89      		ldd r23,Y+21
 834 007e C801      		movw r24,r16
 835 0080 8050      		subi r24,lo8(-(tap_dance_actions+6))
 836 0082 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 837 0084 0995      		icall
 838               	.LVL72:
 839               	.L45:
  91:quantum/process_keycode/process_tap_dance.c ****   }
 840               		.loc 1 91 5 is_stmt 0 view .LVU194
 841               	.LBE30:
 842               	.LBE29:
 843               	.LBE28:
 844               	.LBE27:
 165:quantum/process_keycode/process_tap_dance.c ****     } else {
 845               		.loc 1 165 7 is_stmt 1 view .LVU195
 165:quantum/process_keycode/process_tap_dance.c ****     } else {
 846               		.loc 1 165 15 is_stmt 0 view .LVU196
 847 0086 F092 0000 		sts last_td+1,r15
 848 008a E092 0000 		sts last_td,r14
 849               	.LVL73:
 850               	.L42:
 175:quantum/process_keycode/process_tap_dance.c **** }
 851               		.loc 1 175 3 is_stmt 1 view .LVU197
 176:quantum/process_keycode/process_tap_dance.c **** 
 852               		.loc 1 176 1 is_stmt 0 view .LVU198
 853 008e 81E0      		ldi r24,lo8(1)
 854               	/* epilogue start */
 855 0090 DF91      		pop r29
 856 0092 CF91      		pop r28
 857 0094 1F91      		pop r17
 858 0096 0F91      		pop r16
 859 0098 FF90      		pop r15
 860 009a EF90      		pop r14
 861               	.LVL74:
 176:quantum/process_keycode/process_tap_dance.c **** 
 862               		.loc 1 176 1 view .LVU199
 863 009c 0895      		ret
 864               	.LVL75:
 865               	.L44:
 167:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 866               		.loc 1 167 7 is_stmt 1 view .LVU200
 167:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 867               		.loc 1 167 10 is_stmt 0 view .LVU201
 868 009e 8823      		tst r24
 869 00a0 01F0      		breq .L42
 167:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 870               		.loc 1 167 31 discriminator 1 view .LVU202
 871 00a2 8989      		ldd r24,Y+17
 872 00a4 8823      		tst r24
 873 00a6 01F0      		breq .L42
 168:quantum/process_keycode/process_tap_dance.c ****       }
 874               		.loc 1 168 9 is_stmt 1 view .LVU203
 875 00a8 C801      		movw r24,r16
 876 00aa 8050      		subi r24,lo8(-(tap_dance_actions+6))
 877 00ac 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 878 00ae 0E94 0000 		call reset_tap_dance
 879               	.LVL76:
 168:quantum/process_keycode/process_tap_dance.c ****       }
 880               		.loc 1 168 9 is_stmt 0 view .LVU204
 881 00b2 00C0      		rjmp .L42
 882               		.cfi_endproc
 883               	.LFE122:
 885               		.section	.text.matrix_scan_tap_dance,"ax",@progbits
 886               	.global	matrix_scan_tap_dance
 888               	matrix_scan_tap_dance:
 889               	.LFB123:
 180:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 890               		.loc 1 180 31 is_stmt 1 view -0
 891               		.cfi_startproc
 892 0000 EF92      		push r14
 893               	.LCFI25:
 894               		.cfi_def_cfa_offset 3
 895               		.cfi_offset 14, -2
 896 0002 FF92      		push r15
 897               	.LCFI26:
 898               		.cfi_def_cfa_offset 4
 899               		.cfi_offset 15, -3
 900 0004 0F93      		push r16
 901               	.LCFI27:
 902               		.cfi_def_cfa_offset 5
 903               		.cfi_offset 16, -4
 904 0006 1F93      		push r17
 905               	.LCFI28:
 906               		.cfi_def_cfa_offset 6
 907               		.cfi_offset 17, -5
 908 0008 CF93      		push r28
 909               	.LCFI29:
 910               		.cfi_def_cfa_offset 7
 911               		.cfi_offset 28, -6
 912 000a DF93      		push r29
 913               	.LCFI30:
 914               		.cfi_def_cfa_offset 8
 915               		.cfi_offset 29, -7
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 918               	/* stack size = 6 */
 919               	.L__stack_usage = 6
 181:quantum/process_keycode/process_tap_dance.c ****     return;
 920               		.loc 1 181 3 view .LVU206
 181:quantum/process_keycode/process_tap_dance.c ****     return;
 921               		.loc 1 181 6 is_stmt 0 view .LVU207
 922 000c 8091 0000 		lds r24,highest_td
 923               	.LBB35:
 185:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 924               		.loc 1 185 16 view .LVU208
 925 0010 10E0      		ldi r17,0
 926               	.LBB36:
 187:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 927               		.loc 1 187 14 view .LVU209
 928 0012 06E1      		ldi r16,lo8(22)
 929               	.LBE36:
 930               	.LBE35:
 181:quantum/process_keycode/process_tap_dance.c ****     return;
 931               		.loc 1 181 6 view .LVU210
 932 0014 8F3F      		cpi r24,lo8(-1)
 933 0016 01F4      		brne .L57
 934               	.L56:
 935               	/* epilogue start */
 198:quantum/process_keycode/process_tap_dance.c **** 
 936               		.loc 1 198 1 view .LVU211
 937 0018 DF91      		pop r29
 938 001a CF91      		pop r28
 939 001c 1F91      		pop r17
 940 001e 0F91      		pop r16
 941 0020 FF90      		pop r15
 942 0022 EF90      		pop r14
 943 0024 0895      		ret
 944               	.LVL77:
 945               	.L63:
 946               	.LBB40:
 947               	.LBB39:
 186:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 948               		.loc 1 186 5 is_stmt 1 view .LVU212
 187:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 949               		.loc 1 187 5 view .LVU213
 187:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 950               		.loc 1 187 14 is_stmt 0 view .LVU214
 951 0026 029F      		mul r16,r18
 952 0028 F001      		movw r30,r0
 953 002a 039F      		mul r16,r19
 954 002c F00D      		add r31,r0
 955 002e 1124      		clr __zero_reg__
 956 0030 E050      		subi r30,lo8(-(tap_dance_actions))
 957 0032 F040      		sbci r31,hi8(-(tap_dance_actions))
 958 0034 E288      		ldd r14,Z+18
 959 0036 F388      		ldd r15,Z+19
 187:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 960               		.loc 1 187 7 view .LVU215
 961 0038 E114      		cp r14,__zero_reg__
 962 003a F104      		cpc r15,__zero_reg__
 963 003c 01F4      		brne .L58
 191:quantum/process_keycode/process_tap_dance.c ****     }
 964               		.loc 1 191 24 view .LVU216
 965 003e 88EC      		ldi r24,lo8(-56)
 966 0040 E82E      		mov r14,r24
 967 0042 F12C      		mov r15,__zero_reg__
 968               	.L58:
 969               	.LVL78:
 193:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 970               		.loc 1 193 5 is_stmt 1 view .LVU217
 193:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 971               		.loc 1 193 22 is_stmt 0 view .LVU218
 972 0044 029F      		mul r16,r18
 973 0046 E001      		movw r28,r0
 974 0048 039F      		mul r16,r19
 975 004a D00D      		add r29,r0
 976 004c 1124      		clr __zero_reg__
 977 004e C050      		subi r28,lo8(-(tap_dance_actions))
 978 0050 D040      		sbci r29,hi8(-(tap_dance_actions))
 193:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 979               		.loc 1 193 8 view .LVU219
 980 0052 8E81      		ldd r24,Y+6
 981 0054 8823      		tst r24
 982 0056 01F0      		breq .L60
 193:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 983               		.loc 1 193 32 discriminator 1 view .LVU220
 984 0058 8D85      		ldd r24,Y+13
 985 005a 9E85      		ldd r25,Y+14
 986 005c 0E94 0000 		call timer_elapsed
 987               	.LVL79:
 193:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 988               		.loc 1 193 29 discriminator 1 view .LVU221
 989 0060 E816      		cp r14,r24
 990 0062 F906      		cpc r15,r25
 991 0064 00F4      		brsh .L60
 992 0066 109F      		mul r17,r16
 993 0068 7001      		movw r14,r0
 994 006a 1124      		clr __zero_reg__
 995               	.LVL80:
 194:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 996               		.loc 1 194 7 is_stmt 1 view .LVU222
 997               	.LBB37:
 998               	.LBI37:
 100:quantum/process_keycode/process_tap_dance.c **** {
 999               		.loc 1 100 20 view .LVU223
 1000               	.LBB38:
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 1001               		.loc 1 102 3 view .LVU224
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 1002               		.loc 1 102 6 is_stmt 0 view .LVU225
 1003 006c 8989      		ldd r24,Y+17
 1004 006e 8111      		cpse r24,__zero_reg__
 1005 0070 00C0      		rjmp .L62
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 1006               		.loc 1 102 6 view .LVU226
 1007 0072 C701      		movw r24,r14
 1008 0074 8050      		subi r24,lo8(-(tap_dance_actions))
 1009 0076 9040      		sbci r25,hi8(-(tap_dance_actions))
 1010 0078 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 1011               	.LVL81:
 1012               	.L62:
 102:quantum/process_keycode/process_tap_dance.c ****     return;
 1013               		.loc 1 102 6 view .LVU227
 1014               	.LBE38:
 1015               	.LBE37:
 195:quantum/process_keycode/process_tap_dance.c ****     }
 1016               		.loc 1 195 7 is_stmt 1 view .LVU228
 1017 007c C701      		movw r24,r14
 1018 007e 8050      		subi r24,lo8(-(tap_dance_actions+6))
 1019 0080 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 1020 0082 0E94 0000 		call reset_tap_dance
 1021               	.LVL82:
 1022               	.L60:
 195:quantum/process_keycode/process_tap_dance.c ****     }
 1023               		.loc 1 195 7 is_stmt 0 view .LVU229
 1024               	.LBE39:
 185:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1025               		.loc 1 185 41 discriminator 2 view .LVU230
 1026 0086 1F5F      		subi r17,lo8(-(1))
 1027               	.LVL83:
 1028               	.L57:
 185:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1029               		.loc 1 185 25 discriminator 1 view .LVU231
 1030 0088 212F      		mov r18,r17
 1031 008a 30E0      		ldi r19,0
 1032 008c 8091 0000 		lds r24,highest_td
 1033 0090 082E      		mov __tmp_reg__,r24
 1034 0092 000C      		lsl r0
 1035 0094 990B      		sbc r25,r25
 185:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1036               		.loc 1 185 3 discriminator 1 view .LVU232
 1037 0096 8217      		cp r24,r18
 1038 0098 9307      		cpc r25,r19
 1039 009a 04F4      		brge .L63
 1040 009c 00C0      		rjmp .L56
 1041               	.LBE40:
 1042               		.cfi_endproc
 1043               	.LFE123:
 1045               		.section	.data.highest_td,"aw",@progbits
 1048               	highest_td:
 1049 0000 FF        		.byte	-1
 1050               		.section	.bss.last_td,"aw",@nobits
 1053               	last_td:
 1054 0000 0000      		.zero	2
 1055               		.text
 1056               	.Letext0:
 1057               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1058               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/include/stddef.h"
 1059               		.file 4 "tmk_core/common/keyboard.h"
 1060               		.file 5 "tmk_core/common/action.h"
 1061               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1062               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1063               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 1064               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1065               		.file 10 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 1066               		.file 11 "tmk_core/common/report.h"
 1067               		.file 12 "tmk_core/common/host.h"
 1068               		.file 13 "tmk_core/common/debug.h"
 1069               		.file 14 "quantum/keycode_config.h"
 1070               		.file 15 "quantum/keymap.h"
 1071               		.file 16 "quantum/rgblight_types.h"
 1072               		.file 17 "quantum/rgblight.h"
 1073               		.file 18 "tmk_core/common/action_layer.h"
 1074               		.file 19 "tmk_core/common/timer.h"
 1075               		.file 20 "tmk_core/common/action_util.h"
 1076               		.file 21 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdlib.h"
 1077               		.file 22 "quantum/process_keycode/process_unicode_common.h"
 1078               		.file 23 "quantum/process_keycode/process_tap_dance.h"
 1079               		.file 24 "quantum/quantum.h"
 1080               		.file 25 "quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_tap_dance.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:12     .text.process_tap_dance_action_on_dance_finished.part.0:0000000000000000 process_tap_dance_action_on_dance_finished.part.0
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:97     .text.qk_tap_dance_pair_on_each_tap:0000000000000000 qk_tap_dance_pair_on_each_tap
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:149    .text.qk_tap_dance_pair_finished:0000000000000000 qk_tap_dance_pair_finished
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:200    .text.qk_tap_dance_pair_reset:0000000000000000 qk_tap_dance_pair_reset
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:251    .text.qk_tap_dance_dual_role_on_each_tap:0000000000000000 qk_tap_dance_dual_role_on_each_tap
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:302    .text.qk_tap_dance_dual_role_finished:0000000000000000 qk_tap_dance_dual_role_finished
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:350    .text.qk_tap_dance_dual_role_reset:0000000000000000 qk_tap_dance_dual_role_reset
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:386    .text.reset_tap_dance:0000000000000000 reset_tap_dance
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:1053   .bss.last_td:0000000000000000 last_td
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:536    .text.preprocess_tap_dance:0000000000000000 preprocess_tap_dance
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:1048   .data.highest_td:0000000000000000 highest_td
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:694    .text.process_tap_dance:0000000000000000 process_tap_dance
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccKpfNQz.s:888    .text.matrix_scan_tap_dance:0000000000000000 matrix_scan_tap_dance

UNDEFINED SYMBOLS
add_mods
add_weak_mods
send_keyboard_report
register_code16
unregister_code16
layer_move
tap_dance_actions
del_mods
del_weak_mods
timer_read
get_oneshot_mods
get_mods
get_weak_mods
timer_elapsed
__do_copy_data
__do_clear_bss
