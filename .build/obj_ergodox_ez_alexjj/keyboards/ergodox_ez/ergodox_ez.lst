   1               		.file	"ergodox_ez.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.ergodox_board_led_on,"ax",@progbits
  11               	.global	ergodox_board_led_on
  13               	ergodox_board_led_on:
  14               	.LFB111:
  15               		.file 1 "keyboards/ergodox_ez/ergodox_ez.h"
   1:keyboards/ergodox_ez/ergodox_ez.h **** #ifndef ERGODOX_EZ_H
   2:keyboards/ergodox_ez/ergodox_ez.h **** #define ERGODOX_EZ_H
   3:keyboards/ergodox_ez/ergodox_ez.h **** 
   4:keyboards/ergodox_ez/ergodox_ez.h **** #include "quantum.h"
   5:keyboards/ergodox_ez/ergodox_ez.h **** #include <stdint.h>
   6:keyboards/ergodox_ez/ergodox_ez.h **** #include <stdbool.h>
   7:keyboards/ergodox_ez/ergodox_ez.h **** #include "i2c_master.h"
   8:keyboards/ergodox_ez/ergodox_ez.h **** #include <util/delay.h>
   9:keyboards/ergodox_ez/ergodox_ez.h **** 
  10:keyboards/ergodox_ez/ergodox_ez.h **** #define CPU_PRESCALE(n) (CLKPR = 0x80, CLKPR = (n))
  11:keyboards/ergodox_ez/ergodox_ez.h **** #define CPU_16MHz       0x00
  12:keyboards/ergodox_ez/ergodox_ez.h **** 
  13:keyboards/ergodox_ez/ergodox_ez.h **** // I2C aliases and register addresses (see "mcp23018.md")
  14:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR        0b0100000
  15:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR_WRITE  ( (I2C_ADDR<<1) | I2C_WRITE )
  16:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR_READ   ( (I2C_ADDR<<1) | I2C_READ  )
  17:keyboards/ergodox_ez/ergodox_ez.h **** #define IODIRA          0x00            // i/o direction register
  18:keyboards/ergodox_ez/ergodox_ez.h **** #define IODIRB          0x01
  19:keyboards/ergodox_ez/ergodox_ez.h **** #define GPPUA           0x0C            // GPIO pull-up resistor register
  20:keyboards/ergodox_ez/ergodox_ez.h **** #define GPPUB           0x0D
  21:keyboards/ergodox_ez/ergodox_ez.h **** #define GPIOA           0x12            // general purpose i/o port register (write modifies OLAT)
  22:keyboards/ergodox_ez/ergodox_ez.h **** #define GPIOB           0x13
  23:keyboards/ergodox_ez/ergodox_ez.h **** #define OLATA           0x14            // output latch register
  24:keyboards/ergodox_ez/ergodox_ez.h **** #define OLATB           0x15
  25:keyboards/ergodox_ez/ergodox_ez.h **** 
  26:keyboards/ergodox_ez/ergodox_ez.h **** extern i2c_status_t mcp23018_status;
  27:keyboards/ergodox_ez/ergodox_ez.h **** #define ERGODOX_EZ_I2C_TIMEOUT 100
  28:keyboards/ergodox_ez/ergodox_ez.h **** 
  29:keyboards/ergodox_ez/ergodox_ez.h **** void init_ergodox(void);
  30:keyboards/ergodox_ez/ergodox_ez.h **** void ergodox_blink_all_leds(void);
  31:keyboards/ergodox_ez/ergodox_ez.h **** uint8_t init_mcp23018(void);
  32:keyboards/ergodox_ez/ergodox_ez.h **** uint8_t ergodox_left_leds_update(void);
  33:keyboards/ergodox_ez/ergodox_ez.h **** 
  34:keyboards/ergodox_ez/ergodox_ez.h **** #ifndef LED_BRIGHTNESS_LO
  35:keyboards/ergodox_ez/ergodox_ez.h **** #define LED_BRIGHTNESS_LO       15
  36:keyboards/ergodox_ez/ergodox_ez.h **** #endif
  37:keyboards/ergodox_ez/ergodox_ez.h **** #ifndef LED_BRIGHTNESS_HI
  38:keyboards/ergodox_ez/ergodox_ez.h **** #define LED_BRIGHTNESS_HI       255
  39:keyboards/ergodox_ez/ergodox_ez.h **** #endif
  40:keyboards/ergodox_ez/ergodox_ez.h **** 
  41:keyboards/ergodox_ez/ergodox_ez.h **** 
  42:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_board_led_on(void)      { DDRD |=  (1<<6); PORTD |=  (1<<6); }
  16               		.loc 1 42 45 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 42 47 view .LVU1
  23               		.loc 1 42 52 is_stmt 0 view .LVU2
  24 0000 569A      		sbi 0xa,6
  25               		.loc 1 42 64 is_stmt 1 view .LVU3
  26               		.loc 1 42 70 is_stmt 0 view .LVU4
  27 0002 5E9A      		sbi 0xb,6
  28               	/* epilogue start */
  29               		.loc 1 42 1 view .LVU5
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE111:
  34               		.section	.text.ergodox_right_led_1_on,"ax",@progbits
  35               	.global	ergodox_right_led_1_on
  37               	ergodox_right_led_1_on:
  38               	.LFB112:
  43:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_on(void)    { DDRB |=  (1<<5); PORTB |=  (1<<5); }
  39               		.loc 1 43 45 is_stmt 1 view -0
  40               		.cfi_startproc
  41               	/* prologue: function */
  42               	/* frame size = 0 */
  43               	/* stack size = 0 */
  44               	.L__stack_usage = 0
  45               		.loc 1 43 47 view .LVU7
  46               		.loc 1 43 52 is_stmt 0 view .LVU8
  47 0000 259A      		sbi 0x4,5
  48               		.loc 1 43 64 is_stmt 1 view .LVU9
  49               		.loc 1 43 70 is_stmt 0 view .LVU10
  50 0002 2D9A      		sbi 0x5,5
  51               	/* epilogue start */
  52               		.loc 1 43 1 view .LVU11
  53 0004 0895      		ret
  54               		.cfi_endproc
  55               	.LFE112:
  57               		.section	.text.ergodox_right_led_2_on,"ax",@progbits
  58               	.global	ergodox_right_led_2_on
  60               	ergodox_right_led_2_on:
  61               	.LFB113:
  44:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_on(void)    { DDRB |=  (1<<6); PORTB |=  (1<<6); }
  62               		.loc 1 44 45 is_stmt 1 view -0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  68               		.loc 1 44 47 view .LVU13
  69               		.loc 1 44 52 is_stmt 0 view .LVU14
  70 0000 269A      		sbi 0x4,6
  71               		.loc 1 44 64 is_stmt 1 view .LVU15
  72               		.loc 1 44 70 is_stmt 0 view .LVU16
  73 0002 2E9A      		sbi 0x5,6
  74               	/* epilogue start */
  75               		.loc 1 44 1 view .LVU17
  76 0004 0895      		ret
  77               		.cfi_endproc
  78               	.LFE113:
  80               		.section	.text.ergodox_right_led_3_on,"ax",@progbits
  81               	.global	ergodox_right_led_3_on
  83               	ergodox_right_led_3_on:
  84               	.LFB114:
  45:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_on(void)    { DDRB |=  (1<<7); PORTB |=  (1<<7); }
  85               		.loc 1 45 45 is_stmt 1 view -0
  86               		.cfi_startproc
  87               	/* prologue: function */
  88               	/* frame size = 0 */
  89               	/* stack size = 0 */
  90               	.L__stack_usage = 0
  91               		.loc 1 45 47 view .LVU19
  92               		.loc 1 45 52 is_stmt 0 view .LVU20
  93 0000 279A      		sbi 0x4,7
  94               		.loc 1 45 64 is_stmt 1 view .LVU21
  95               		.loc 1 45 70 is_stmt 0 view .LVU22
  96 0002 2F9A      		sbi 0x5,7
  97               	/* epilogue start */
  98               		.loc 1 45 1 view .LVU23
  99 0004 0895      		ret
 100               		.cfi_endproc
 101               	.LFE114:
 103               		.section	.text.ergodox_right_led_on,"ax",@progbits
 104               	.global	ergodox_right_led_on
 106               	ergodox_right_led_on:
 107               	.LVL0:
 108               	.LFB115:
  46:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_on(uint8_t led) { DDRB |= (1<<(led+4)); PORTB |= (1<<(led+4)); }
 109               		.loc 1 46 47 is_stmt 1 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 46 49 view .LVU25
 116               		.loc 1 46 54 is_stmt 0 view .LVU26
 117 0000 24B1      		in r18,0x4
 118               		.loc 1 46 65 view .LVU27
 119 0002 34E0      		ldi r19,lo8(4)
 120 0004 380F      		add r19,r24
 121               		.loc 1 46 59 view .LVU28
 122 0006 81E0      		ldi r24,lo8(1)
 123 0008 90E0      		ldi r25,0
 124               	.LVL1:
 125               		.loc 1 46 59 view .LVU29
 126 000a 00C0      		rjmp 2f
 127               		1:
 128 000c 880F      		lsl r24
 129               		2:
 130 000e 3A95      		dec r19
 131 0010 02F4      		brpl 1b
 132               		.loc 1 46 54 view .LVU30
 133 0012 282B      		or r18,r24
 134 0014 24B9      		out 0x4,r18
 135               		.loc 1 46 71 is_stmt 1 view .LVU31
 136               		.loc 1 46 77 is_stmt 0 view .LVU32
 137 0016 95B1      		in r25,0x5
 138 0018 892B      		or r24,r25
 139 001a 85B9      		out 0x5,r24
 140               	/* epilogue start */
 141               		.loc 1 46 1 view .LVU33
 142 001c 0895      		ret
 143               		.cfi_endproc
 144               	.LFE115:
 146               		.section	.text.ergodox_board_led_off,"ax",@progbits
 147               	.global	ergodox_board_led_off
 149               	ergodox_board_led_off:
 150               	.LFB116:
  47:keyboards/ergodox_ez/ergodox_ez.h **** 
  48:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_board_led_off(void)     { DDRD &= ~(1<<6); PORTD &= ~(1<<6); }
 151               		.loc 1 48 45 is_stmt 1 view -0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157               		.loc 1 48 47 view .LVU35
 158               		.loc 1 48 52 is_stmt 0 view .LVU36
 159 0000 5698      		cbi 0xa,6
 160               		.loc 1 48 64 is_stmt 1 view .LVU37
 161               		.loc 1 48 70 is_stmt 0 view .LVU38
 162 0002 5E98      		cbi 0xb,6
 163               	/* epilogue start */
 164               		.loc 1 48 1 view .LVU39
 165 0004 0895      		ret
 166               		.cfi_endproc
 167               	.LFE116:
 169               		.section	.text.ergodox_right_led_1_off,"ax",@progbits
 170               	.global	ergodox_right_led_1_off
 172               	ergodox_right_led_1_off:
 173               	.LFB117:
  49:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_off(void)   { DDRB &= ~(1<<5); PORTB &= ~(1<<5); }
 174               		.loc 1 49 45 is_stmt 1 view -0
 175               		.cfi_startproc
 176               	/* prologue: function */
 177               	/* frame size = 0 */
 178               	/* stack size = 0 */
 179               	.L__stack_usage = 0
 180               		.loc 1 49 47 view .LVU41
 181               		.loc 1 49 52 is_stmt 0 view .LVU42
 182 0000 2598      		cbi 0x4,5
 183               		.loc 1 49 64 is_stmt 1 view .LVU43
 184               		.loc 1 49 70 is_stmt 0 view .LVU44
 185 0002 2D98      		cbi 0x5,5
 186               	/* epilogue start */
 187               		.loc 1 49 1 view .LVU45
 188 0004 0895      		ret
 189               		.cfi_endproc
 190               	.LFE117:
 192               		.section	.text.ergodox_right_led_2_off,"ax",@progbits
 193               	.global	ergodox_right_led_2_off
 195               	ergodox_right_led_2_off:
 196               	.LFB118:
  50:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_off(void)   { DDRB &= ~(1<<6); PORTB &= ~(1<<6); }
 197               		.loc 1 50 45 is_stmt 1 view -0
 198               		.cfi_startproc
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 0 */
 202               	.L__stack_usage = 0
 203               		.loc 1 50 47 view .LVU47
 204               		.loc 1 50 52 is_stmt 0 view .LVU48
 205 0000 2698      		cbi 0x4,6
 206               		.loc 1 50 64 is_stmt 1 view .LVU49
 207               		.loc 1 50 70 is_stmt 0 view .LVU50
 208 0002 2E98      		cbi 0x5,6
 209               	/* epilogue start */
 210               		.loc 1 50 1 view .LVU51
 211 0004 0895      		ret
 212               		.cfi_endproc
 213               	.LFE118:
 215               		.section	.text.ergodox_right_led_3_off,"ax",@progbits
 216               	.global	ergodox_right_led_3_off
 218               	ergodox_right_led_3_off:
 219               	.LFB119:
  51:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_off(void)   { DDRB &= ~(1<<7); PORTB &= ~(1<<7); }
 220               		.loc 1 51 45 is_stmt 1 view -0
 221               		.cfi_startproc
 222               	/* prologue: function */
 223               	/* frame size = 0 */
 224               	/* stack size = 0 */
 225               	.L__stack_usage = 0
 226               		.loc 1 51 47 view .LVU53
 227               		.loc 1 51 52 is_stmt 0 view .LVU54
 228 0000 2798      		cbi 0x4,7
 229               		.loc 1 51 64 is_stmt 1 view .LVU55
 230               		.loc 1 51 70 is_stmt 0 view .LVU56
 231 0002 2F98      		cbi 0x5,7
 232               	/* epilogue start */
 233               		.loc 1 51 1 view .LVU57
 234 0004 0895      		ret
 235               		.cfi_endproc
 236               	.LFE119:
 238               		.section	.text.ergodox_right_led_off,"ax",@progbits
 239               	.global	ergodox_right_led_off
 241               	ergodox_right_led_off:
 242               	.LVL2:
 243               	.LFB120:
  52:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_off(uint8_t led) { DDRB &= ~(1<<(led+4)); PORTB &= ~(1<<(led+4)); }
 244               		.loc 1 52 48 is_stmt 1 view -0
 245               		.cfi_startproc
 246               	/* prologue: function */
 247               	/* frame size = 0 */
 248               	/* stack size = 0 */
 249               	.L__stack_usage = 0
 250               		.loc 1 52 50 view .LVU59
 251               		.loc 1 52 55 is_stmt 0 view .LVU60
 252 0000 94B1      		in r25,0x4
 253               		.loc 1 52 67 view .LVU61
 254 0002 8C5F      		subi r24,lo8(-(4))
 255               	.LVL3:
 256               		.loc 1 52 61 view .LVU62
 257 0004 21E0      		ldi r18,lo8(1)
 258 0006 30E0      		ldi r19,0
 259 0008 00C0      		rjmp 2f
 260               		1:
 261 000a 220F      		lsl r18
 262               		2:
 263 000c 8A95      		dec r24
 264 000e 02F4      		brpl 1b
 265               		.loc 1 52 55 view .LVU63
 266 0010 2095      		com r18
 267 0012 9223      		and r25,r18
 268 0014 94B9      		out 0x4,r25
 269               		.loc 1 52 73 is_stmt 1 view .LVU64
 270               		.loc 1 52 79 is_stmt 0 view .LVU65
 271 0016 85B1      		in r24,0x5
 272               	.LVL4:
 273               		.loc 1 52 79 view .LVU66
 274 0018 2823      		and r18,r24
 275 001a 25B9      		out 0x5,r18
 276               	/* epilogue start */
 277               		.loc 1 52 1 view .LVU67
 278 001c 0895      		ret
 279               		.cfi_endproc
 280               	.LFE120:
 282               		.section	.text.ergodox_led_all_on,"ax",@progbits
 283               	.global	ergodox_led_all_on
 285               	ergodox_led_all_on:
 286               	.LFB121:
  53:keyboards/ergodox_ez/ergodox_ez.h **** 
  54:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
  55:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_1;
  56:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_2;
  57:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_3;
  58:keyboards/ergodox_ez/ergodox_ez.h **** 
  59:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_1_on(void)    { ergodox_left_led_1 = 1; }
  60:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_2_on(void)    { ergodox_left_led_2 = 1; }
  61:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_3_on(void)    { ergodox_left_led_3 = 1; }
  62:keyboards/ergodox_ez/ergodox_ez.h **** 
  63:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_1_off(void)    { ergodox_left_led_1 = 0; }
  64:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_2_off(void)    { ergodox_left_led_2 = 0; }
  65:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_3_off(void)    { ergodox_left_led_3 = 0; }
  66:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
  67:keyboards/ergodox_ez/ergodox_ez.h **** 
  68:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_on(void)
  69:keyboards/ergodox_ez/ergodox_ez.h **** {
 287               		.loc 1 69 1 is_stmt 1 view -0
 288               		.cfi_startproc
 289               	/* prologue: function */
 290               	/* frame size = 0 */
 291               	/* stack size = 0 */
 292               	.L__stack_usage = 0
  70:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_board_led_on();
 293               		.loc 1 70 5 view .LVU69
 294 0000 0E94 0000 		call ergodox_board_led_on
 295               	.LVL5:
  71:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_on();
 296               		.loc 1 71 5 view .LVU70
 297 0004 0E94 0000 		call ergodox_right_led_1_on
 298               	.LVL6:
  72:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_on();
 299               		.loc 1 72 5 view .LVU71
 300 0008 0E94 0000 		call ergodox_right_led_2_on
 301               	.LVL7:
  73:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_on();
 302               		.loc 1 73 5 view .LVU72
 303 000c 0C94 0000 		jmp ergodox_right_led_3_on
 304               	.LVL8:
 305               		.cfi_endproc
 306               	.LFE121:
 308               		.section	.text.ergodox_led_all_off,"ax",@progbits
 309               	.global	ergodox_led_all_off
 311               	ergodox_led_all_off:
 312               	.LFB122:
  74:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
  75:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_1_on();
  76:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_2_on();
  77:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_3_on();
  78:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
  79:keyboards/ergodox_ez/ergodox_ez.h **** }
  80:keyboards/ergodox_ez/ergodox_ez.h **** 
  81:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_off(void)
  82:keyboards/ergodox_ez/ergodox_ez.h **** {
 313               		.loc 1 82 1 view -0
 314               		.cfi_startproc
 315               	/* prologue: function */
 316               	/* frame size = 0 */
 317               	/* stack size = 0 */
 318               	.L__stack_usage = 0
  83:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_board_led_off();
 319               		.loc 1 83 5 view .LVU74
 320 0000 0E94 0000 		call ergodox_board_led_off
 321               	.LVL9:
  84:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_off();
 322               		.loc 1 84 5 view .LVU75
 323 0004 0E94 0000 		call ergodox_right_led_1_off
 324               	.LVL10:
  85:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_off();
 325               		.loc 1 85 5 view .LVU76
 326 0008 0E94 0000 		call ergodox_right_led_2_off
 327               	.LVL11:
  86:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_off();
 328               		.loc 1 86 5 view .LVU77
 329 000c 0C94 0000 		jmp ergodox_right_led_3_off
 330               	.LVL12:
 331               		.cfi_endproc
 332               	.LFE122:
 334               		.section	.text.ergodox_right_led_1_set,"ax",@progbits
 335               	.global	ergodox_right_led_1_set
 337               	ergodox_right_led_1_set:
 338               	.LVL13:
 339               	.LFB123:
  87:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
  88:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_1_off();
  89:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_2_off();
  90:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_3_off();
  91:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
  92:keyboards/ergodox_ez/ergodox_ez.h **** }
  93:keyboards/ergodox_ez/ergodox_ez.h **** 
  94:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_set(uint8_t n)    { OCR1A = n; }
 340               		.loc 1 94 51 view -0
 341               		.cfi_startproc
 342               	/* prologue: function */
 343               	/* frame size = 0 */
 344               	/* stack size = 0 */
 345               	.L__stack_usage = 0
 346               		.loc 1 94 53 view .LVU79
 347               		.loc 1 94 59 is_stmt 0 view .LVU80
 348 0000 90E0      		ldi r25,0
 349 0002 9093 8900 		sts 136+1,r25
 350 0006 8093 8800 		sts 136,r24
 351               	/* epilogue start */
 352               		.loc 1 94 1 view .LVU81
 353 000a 0895      		ret
 354               		.cfi_endproc
 355               	.LFE123:
 357               		.section	.text.ergodox_right_led_2_set,"ax",@progbits
 358               	.global	ergodox_right_led_2_set
 360               	ergodox_right_led_2_set:
 361               	.LVL14:
 362               	.LFB124:
  95:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 363               		.loc 1 95 51 is_stmt 1 view -0
 364               		.cfi_startproc
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 369               		.loc 1 95 53 view .LVU83
 370               		.loc 1 95 59 is_stmt 0 view .LVU84
 371 0000 90E0      		ldi r25,0
 372 0002 9093 8B00 		sts 138+1,r25
 373 0006 8093 8A00 		sts 138,r24
 374               	/* epilogue start */
 375               		.loc 1 95 1 view .LVU85
 376 000a 0895      		ret
 377               		.cfi_endproc
 378               	.LFE124:
 380               		.section	.text.ergodox_right_led_3_set,"ax",@progbits
 381               	.global	ergodox_right_led_3_set
 383               	ergodox_right_led_3_set:
 384               	.LVL15:
 385               	.LFB125:
  96:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 386               		.loc 1 96 51 is_stmt 1 view -0
 387               		.cfi_startproc
 388               	/* prologue: function */
 389               	/* frame size = 0 */
 390               	/* stack size = 0 */
 391               	.L__stack_usage = 0
 392               		.loc 1 96 53 view .LVU87
 393               		.loc 1 96 59 is_stmt 0 view .LVU88
 394 0000 90E0      		ldi r25,0
 395 0002 9093 8D00 		sts 140+1,r25
 396 0006 8093 8C00 		sts 140,r24
 397               	/* epilogue start */
 398               		.loc 1 96 1 view .LVU89
 399 000a 0895      		ret
 400               		.cfi_endproc
 401               	.LFE125:
 403               		.section	.text.ergodox_right_led_set,"ax",@progbits
 404               	.global	ergodox_right_led_set
 406               	ergodox_right_led_set:
 407               	.LVL16:
 408               	.LFB126:
  97:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 409               		.loc 1 97 60 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
  98:keyboards/ergodox_ez/ergodox_ez.h ****     (led == 1) ? (OCR1A = n) :
 415               		.loc 1 98 5 view .LVU91
 416 0000 70E0      		ldi r23,0
 417               		.loc 1 98 30 is_stmt 0 view .LVU92
 418 0002 8130      		cpi r24,lo8(1)
 419 0004 01F4      		brne .L17
 420               		.loc 1 98 25 discriminator 1 view .LVU93
 421 0006 7093 8900 		sts 136+1,r23
 422 000a 6093 8800 		sts 136,r22
 423 000e 0895      		ret
 424               	.L17:
  99:keyboards/ergodox_ez/ergodox_ez.h ****     (led == 2) ? (OCR1B = n) :
 425               		.loc 1 99 30 view .LVU94
 426 0010 8230      		cpi r24,lo8(2)
 427 0012 01F4      		brne .L19
 428               		.loc 1 99 25 discriminator 1 view .LVU95
 429 0014 7093 8B00 		sts 138+1,r23
 430 0018 6093 8A00 		sts 138,r22
 431 001c 0895      		ret
 432               	.L19:
 100:keyboards/ergodox_ez/ergodox_ez.h ****                  (OCR1C = n);
 433               		.loc 1 100 25 discriminator 2 view .LVU96
 434 001e 7093 8D00 		sts 140+1,r23
 435 0022 6093 8C00 		sts 140,r22
 436               	/* epilogue start */
 101:keyboards/ergodox_ez/ergodox_ez.h **** }
 437               		.loc 1 101 1 discriminator 2 view .LVU97
 438 0026 0895      		ret
 439               		.cfi_endproc
 440               	.LFE126:
 442               		.section	.text.ergodox_led_all_set,"ax",@progbits
 443               	.global	ergodox_led_all_set
 445               	ergodox_led_all_set:
 446               	.LVL17:
 447               	.LFB127:
 102:keyboards/ergodox_ez/ergodox_ez.h **** 
 103:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_set(uint8_t n)
 104:keyboards/ergodox_ez/ergodox_ez.h **** {
 448               		.loc 1 104 1 is_stmt 1 view -0
 449               		.cfi_startproc
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 0 */
 453               	.L__stack_usage = 0
 105:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_set(n);
 454               		.loc 1 105 5 view .LVU99
 455               	.LBB20:
 456               	.LBI20:
  94:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 457               		.loc 1 94 13 view .LVU100
 458               	.LBB21:
  94:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 459               		.loc 1 94 53 view .LVU101
  94:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 460               		.loc 1 94 59 is_stmt 0 view .LVU102
 461 0000 90E0      		ldi r25,0
 462 0002 9093 8900 		sts 136+1,r25
 463 0006 8093 8800 		sts 136,r24
 464               	.LVL18:
  94:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 465               		.loc 1 94 59 view .LVU103
 466               	.LBE21:
 467               	.LBE20:
 106:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_set(n);
 468               		.loc 1 106 5 is_stmt 1 view .LVU104
 469               	.LBB22:
 470               	.LBI22:
  95:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 471               		.loc 1 95 13 view .LVU105
 472               	.LBB23:
  95:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 473               		.loc 1 95 53 view .LVU106
  95:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 474               		.loc 1 95 59 is_stmt 0 view .LVU107
 475 000a 9093 8B00 		sts 138+1,r25
 476 000e 8093 8A00 		sts 138,r24
 477               	.LVL19:
  95:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 478               		.loc 1 95 59 view .LVU108
 479               	.LBE23:
 480               	.LBE22:
 107:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_set(n);
 481               		.loc 1 107 5 is_stmt 1 view .LVU109
 482               	.LBB24:
 483               	.LBI24:
  96:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 484               		.loc 1 96 13 view .LVU110
 485               	.LBB25:
  96:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 486               		.loc 1 96 53 view .LVU111
  96:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 487               		.loc 1 96 59 is_stmt 0 view .LVU112
 488 0012 9093 8D00 		sts 140+1,r25
 489 0016 8093 8C00 		sts 140,r24
 490               	.LVL20:
 491               	/* epilogue start */
  96:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 492               		.loc 1 96 59 view .LVU113
 493               	.LBE25:
 494               	.LBE24:
 108:keyboards/ergodox_ez/ergodox_ez.h **** }
 495               		.loc 1 108 1 view .LVU114
 496 001a 0895      		ret
 497               		.cfi_endproc
 498               	.LFE127:
 500               		.section	.text.ergodox_blink_all_leds,"ax",@progbits
 501               	.global	ergodox_blink_all_leds
 503               	ergodox_blink_all_leds:
 504               	.LFB129:
 505               		.file 2 "keyboards/ergodox_ez/ergodox_ez.c"
   1:keyboards/ergodox_ez/ergodox_ez.c **** #include QMK_KEYBOARD_H
   2:keyboards/ergodox_ez/ergodox_ez.c **** 
   3:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_board_led_on(void);
   4:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_on(void);
   5:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_on(void);
   6:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_on(void);
   7:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_on(uint8_t led);
   8:keyboards/ergodox_ez/ergodox_ez.c **** 
   9:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_board_led_off(void);
  10:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_off(void);
  11:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_off(void);
  12:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_off(void);
  13:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_off(uint8_t led);
  14:keyboards/ergodox_ez/ergodox_ez.c **** 
  15:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_on(void);
  16:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_off(void);
  17:keyboards/ergodox_ez/ergodox_ez.c **** 
  18:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_set(uint8_t n);
  19:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_set(uint8_t n);
  20:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_set(uint8_t n);
  21:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_set(uint8_t led, uint8_t n);
  22:keyboards/ergodox_ez/ergodox_ez.c **** 
  23:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_set(uint8_t n);
  24:keyboards/ergodox_ez/ergodox_ez.c **** 
  25:keyboards/ergodox_ez/ergodox_ez.c **** bool i2c_initialized = 0;
  26:keyboards/ergodox_ez/ergodox_ez.c **** i2c_status_t mcp23018_status = 0x20;
  27:keyboards/ergodox_ez/ergodox_ez.c **** 
  28:keyboards/ergodox_ez/ergodox_ez.c **** void matrix_init_kb(void) {
  29:keyboards/ergodox_ez/ergodox_ez.c ****    // keyboard LEDs (see "PWM on ports OC1(A|B|C)" in "teensy-2-0.md")
  30:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1A = 0b10101001;  // set and configure fast PWM
  31:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
  32:keyboards/ergodox_ez/ergodox_ez.c **** 
  33:keyboards/ergodox_ez/ergodox_ez.c ****     // (tied to Vcc for hardware convenience)
  34:keyboards/ergodox_ez/ergodox_ez.c ****     DDRB  &= ~(1<<4);  // set B(4) as input
  35:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
  36:keyboards/ergodox_ez/ergodox_ez.c **** 
  37:keyboards/ergodox_ez/ergodox_ez.c ****     // unused pins - C7, D4, D5, D7, E6
  38:keyboards/ergodox_ez/ergodox_ez.c ****     // set as input with internal pull-up enabled
  39:keyboards/ergodox_ez/ergodox_ez.c ****     DDRC  &= ~(1<<7);
  40:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
  41:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
  42:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
  43:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
  44:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
  45:keyboards/ergodox_ez/ergodox_ez.c **** 
  46:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_blink_all_leds();
  47:keyboards/ergodox_ez/ergodox_ez.c **** 
  48:keyboards/ergodox_ez/ergodox_ez.c ****     matrix_init_user();
  49:keyboards/ergodox_ez/ergodox_ez.c **** }
  50:keyboards/ergodox_ez/ergodox_ez.c **** 
  51:keyboards/ergodox_ez/ergodox_ez.c **** void ergodox_blink_all_leds(void)
  52:keyboards/ergodox_ez/ergodox_ez.c **** {
 506               		.loc 2 52 1 is_stmt 1 view -0
 507               		.cfi_startproc
 508               	/* prologue: function */
 509               	/* frame size = 0 */
 510               	/* stack size = 0 */
 511               	.L__stack_usage = 0
  53:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_off();
 512               		.loc 2 53 5 view .LVU116
 513 0000 0E94 0000 		call ergodox_led_all_off
 514               	.LVL21:
  54:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set(LED_BRIGHTNESS_DEFAULT);
 515               		.loc 2 54 5 view .LVU117
 516 0004 8FEF      		ldi r24,lo8(-1)
 517 0006 0E94 0000 		call ergodox_led_all_set
 518               	.LVL22:
  55:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_1_on();
 519               		.loc 2 55 5 view .LVU118
 520 000a 0E94 0000 		call ergodox_right_led_1_on
 521               	.LVL23:
  56:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 522               		.loc 2 56 5 view .LVU119
 523               	.LBB26:
 524               	.LBI26:
 525               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 526               		.loc 3 166 1 view .LVU120
 527               	.LBB27:
 167:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	double __tmp ;
 528               		.loc 3 168 2 view .LVU121
 169:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 529               		.loc 3 172 2 view .LVU122
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 530               		.loc 3 173 2 view .LVU123
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 531               		.loc 3 174 2 view .LVU124
 175:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 532               		.loc 3 184 3 view .LVU125
 185:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 533               		.loc 3 187 2 view .LVU126
 534 000e 2FEF      		ldi r18,lo8(159999)
 535 0010 80E7      		ldi r24,hi8(159999)
 536 0012 92E0      		ldi r25,hlo8(159999)
 537 0014 2150      	1:	subi r18,1
 538 0016 8040      		sbci r24,0
 539 0018 9040      		sbci r25,0
 540 001a 01F4      		brne 1b
 541 001c 00C0      		rjmp .
 542 001e 0000      		nop
 543               	.LVL24:
 544               		.loc 3 187 2 is_stmt 0 view .LVU127
 545               	.LBE27:
 546               	.LBE26:
  57:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_2_on();
 547               		.loc 2 57 5 is_stmt 1 view .LVU128
 548 0020 0E94 0000 		call ergodox_right_led_2_on
 549               	.LVL25:
  58:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 550               		.loc 2 58 5 view .LVU129
 551               	.LBB28:
 552               	.LBI28:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 553               		.loc 3 166 1 view .LVU130
 554               	.LBB29:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 555               		.loc 3 168 2 view .LVU131
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 556               		.loc 3 172 2 view .LVU132
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 557               		.loc 3 173 2 view .LVU133
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 558               		.loc 3 174 2 view .LVU134
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 559               		.loc 3 184 3 view .LVU135
 560               		.loc 3 187 2 view .LVU136
 561 0024 2FEF      		ldi r18,lo8(159999)
 562 0026 80E7      		ldi r24,hi8(159999)
 563 0028 92E0      		ldi r25,hlo8(159999)
 564 002a 2150      	1:	subi r18,1
 565 002c 8040      		sbci r24,0
 566 002e 9040      		sbci r25,0
 567 0030 01F4      		brne 1b
 568 0032 00C0      		rjmp .
 569 0034 0000      		nop
 570               	.LVL26:
 571               		.loc 3 187 2 is_stmt 0 view .LVU137
 572               	.LBE29:
 573               	.LBE28:
  59:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_3_on();
 574               		.loc 2 59 5 is_stmt 1 view .LVU138
 575 0036 0E94 0000 		call ergodox_right_led_3_on
 576               	.LVL27:
  60:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 577               		.loc 2 60 5 view .LVU139
 578               	.LBB30:
 579               	.LBI30:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 580               		.loc 3 166 1 view .LVU140
 581               	.LBB31:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 582               		.loc 3 168 2 view .LVU141
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 583               		.loc 3 172 2 view .LVU142
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 584               		.loc 3 173 2 view .LVU143
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 585               		.loc 3 174 2 view .LVU144
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 586               		.loc 3 184 3 view .LVU145
 587               		.loc 3 187 2 view .LVU146
 588 003a 2FEF      		ldi r18,lo8(159999)
 589 003c 80E7      		ldi r24,hi8(159999)
 590 003e 92E0      		ldi r25,hlo8(159999)
 591 0040 2150      	1:	subi r18,1
 592 0042 8040      		sbci r24,0
 593 0044 9040      		sbci r25,0
 594 0046 01F4      		brne 1b
 595 0048 00C0      		rjmp .
 596 004a 0000      		nop
 597               	.LVL28:
 598               		.loc 3 187 2 is_stmt 0 view .LVU147
 599               	.LBE31:
 600               	.LBE30:
  61:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
  62:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_1_on();
  63:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  64:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  65:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  66:keyboards/ergodox_ez/ergodox_ez.c ****     }
  67:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_2_on();
  68:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  69:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  70:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  71:keyboards/ergodox_ez/ergodox_ez.c ****     }
  72:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_3_on();
  73:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  74:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  75:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  76:keyboards/ergodox_ez/ergodox_ez.c ****     }
  77:keyboards/ergodox_ez/ergodox_ez.c **** #endif
  78:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_1_off();
 601               		.loc 2 78 5 is_stmt 1 view .LVU148
 602 004c 0E94 0000 		call ergodox_right_led_1_off
 603               	.LVL29:
  79:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 604               		.loc 2 79 5 view .LVU149
 605               	.LBB32:
 606               	.LBI32:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 607               		.loc 3 166 1 view .LVU150
 608               	.LBB33:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 609               		.loc 3 168 2 view .LVU151
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 610               		.loc 3 172 2 view .LVU152
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 611               		.loc 3 173 2 view .LVU153
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 612               		.loc 3 174 2 view .LVU154
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 613               		.loc 3 184 3 view .LVU155
 614               		.loc 3 187 2 view .LVU156
 615 0050 2FEF      		ldi r18,lo8(159999)
 616 0052 80E7      		ldi r24,hi8(159999)
 617 0054 92E0      		ldi r25,hlo8(159999)
 618 0056 2150      	1:	subi r18,1
 619 0058 8040      		sbci r24,0
 620 005a 9040      		sbci r25,0
 621 005c 01F4      		brne 1b
 622 005e 00C0      		rjmp .
 623 0060 0000      		nop
 624               	.LVL30:
 625               		.loc 3 187 2 is_stmt 0 view .LVU157
 626               	.LBE33:
 627               	.LBE32:
  80:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_2_off();
 628               		.loc 2 80 5 is_stmt 1 view .LVU158
 629 0062 0E94 0000 		call ergodox_right_led_2_off
 630               	.LVL31:
  81:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 631               		.loc 2 81 5 view .LVU159
 632               	.LBB34:
 633               	.LBI34:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 634               		.loc 3 166 1 view .LVU160
 635               	.LBB35:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 636               		.loc 3 168 2 view .LVU161
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 637               		.loc 3 172 2 view .LVU162
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 638               		.loc 3 173 2 view .LVU163
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 639               		.loc 3 174 2 view .LVU164
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 640               		.loc 3 184 3 view .LVU165
 641               		.loc 3 187 2 view .LVU166
 642 0066 2FEF      		ldi r18,lo8(159999)
 643 0068 80E7      		ldi r24,hi8(159999)
 644 006a 92E0      		ldi r25,hlo8(159999)
 645 006c 2150      	1:	subi r18,1
 646 006e 8040      		sbci r24,0
 647 0070 9040      		sbci r25,0
 648 0072 01F4      		brne 1b
 649 0074 00C0      		rjmp .
 650 0076 0000      		nop
 651               	.LVL32:
 652               		.loc 3 187 2 is_stmt 0 view .LVU167
 653               	.LBE35:
 654               	.LBE34:
  82:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_3_off();
 655               		.loc 2 82 5 is_stmt 1 view .LVU168
 656 0078 0E94 0000 		call ergodox_right_led_3_off
 657               	.LVL33:
  83:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
  84:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  85:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_1_off();
  86:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  87:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  88:keyboards/ergodox_ez/ergodox_ez.c ****     }
  89:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  90:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_2_off();
  91:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  92:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  93:keyboards/ergodox_ez/ergodox_ez.c ****     }
  94:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  95:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_3_off();
  96:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  97:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  98:keyboards/ergodox_ez/ergodox_ez.c ****     }
  99:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 100:keyboards/ergodox_ez/ergodox_ez.c **** 
 101:keyboards/ergodox_ez/ergodox_ez.c ****     //ergodox_led_all_on();
 102:keyboards/ergodox_ez/ergodox_ez.c ****     //_delay_ms(333);
 103:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_off();
 658               		.loc 2 103 5 view .LVU169
 659 007c 0C94 0000 		jmp ergodox_led_all_off
 660               	.LVL34:
 661               		.cfi_endproc
 662               	.LFE129:
 664               		.section	.text.matrix_init_kb,"ax",@progbits
 665               	.global	matrix_init_kb
 667               	matrix_init_kb:
 668               	.LFB128:
  28:keyboards/ergodox_ez/ergodox_ez.c ****    // keyboard LEDs (see "PWM on ports OC1(A|B|C)" in "teensy-2-0.md")
 669               		.loc 2 28 27 view -0
 670               		.cfi_startproc
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
  30:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
 675               		.loc 2 30 5 view .LVU171
  30:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
 676               		.loc 2 30 12 is_stmt 0 view .LVU172
 677 0000 89EA      		ldi r24,lo8(-87)
 678 0002 8093 8000 		sts 128,r24
  31:keyboards/ergodox_ez/ergodox_ez.c **** 
 679               		.loc 2 31 5 is_stmt 1 view .LVU173
  31:keyboards/ergodox_ez/ergodox_ez.c **** 
 680               		.loc 2 31 12 is_stmt 0 view .LVU174
 681 0006 89E0      		ldi r24,lo8(9)
 682 0008 8093 8100 		sts 129,r24
  34:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
 683               		.loc 2 34 5 is_stmt 1 view .LVU175
  34:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
 684               		.loc 2 34 11 is_stmt 0 view .LVU176
 685 000c 2498      		cbi 0x4,4
  35:keyboards/ergodox_ez/ergodox_ez.c **** 
 686               		.loc 2 35 5 is_stmt 1 view .LVU177
  35:keyboards/ergodox_ez/ergodox_ez.c **** 
 687               		.loc 2 35 11 is_stmt 0 view .LVU178
 688 000e 2C98      		cbi 0x5,4
  39:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
 689               		.loc 2 39 5 is_stmt 1 view .LVU179
  39:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
 690               		.loc 2 39 11 is_stmt 0 view .LVU180
 691 0010 3F98      		cbi 0x7,7
  40:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
 692               		.loc 2 40 5 is_stmt 1 view .LVU181
  40:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
 693               		.loc 2 40 11 is_stmt 0 view .LVU182
 694 0012 8AB1      		in r24,0xa
 695 0014 8F7C      		andi r24,lo8(-49)
 696 0016 8AB9      		out 0xa,r24
  41:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
 697               		.loc 2 41 5 is_stmt 1 view .LVU183
  41:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
 698               		.loc 2 41 11 is_stmt 0 view .LVU184
 699 0018 6E98      		cbi 0xd,6
  42:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
 700               		.loc 2 42 5 is_stmt 1 view .LVU185
  42:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
 701               		.loc 2 42 11 is_stmt 0 view .LVU186
 702 001a 479A      		sbi 0x8,7
  43:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
 703               		.loc 2 43 5 is_stmt 1 view .LVU187
  43:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
 704               		.loc 2 43 11 is_stmt 0 view .LVU188
 705 001c 8BB1      		in r24,0xb
 706 001e 8063      		ori r24,lo8(48)
 707 0020 8BB9      		out 0xb,r24
  44:keyboards/ergodox_ez/ergodox_ez.c **** 
 708               		.loc 2 44 5 is_stmt 1 view .LVU189
  44:keyboards/ergodox_ez/ergodox_ez.c **** 
 709               		.loc 2 44 11 is_stmt 0 view .LVU190
 710 0022 769A      		sbi 0xe,6
  46:keyboards/ergodox_ez/ergodox_ez.c **** 
 711               		.loc 2 46 5 is_stmt 1 view .LVU191
 712 0024 0E94 0000 		call ergodox_blink_all_leds
 713               	.LVL35:
  48:keyboards/ergodox_ez/ergodox_ez.c **** }
 714               		.loc 2 48 5 view .LVU192
 715 0028 0C94 0000 		jmp matrix_init_user
 716               	.LVL36:
 717               		.cfi_endproc
 718               	.LFE128:
 720               		.section	.text.init_mcp23018,"ax",@progbits
 721               	.global	init_mcp23018
 723               	init_mcp23018:
 724               	.LFB130:
 104:keyboards/ergodox_ez/ergodox_ez.c **** }
 105:keyboards/ergodox_ez/ergodox_ez.c **** 
 106:keyboards/ergodox_ez/ergodox_ez.c **** uint8_t init_mcp23018(void) {
 725               		.loc 2 106 29 view -0
 726               		.cfi_startproc
 727               	/* prologue: function */
 728               	/* frame size = 0 */
 729               	/* stack size = 0 */
 730               	.L__stack_usage = 0
 107:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = 0x20;
 731               		.loc 2 107 5 view .LVU194
 732               		.loc 2 107 21 is_stmt 0 view .LVU195
 733 0000 80E2      		ldi r24,lo8(32)
 734 0002 90E0      		ldi r25,0
 735 0004 9093 0000 		sts mcp23018_status+1,r25
 736 0008 8093 0000 		sts mcp23018_status,r24
 108:keyboards/ergodox_ez/ergodox_ez.c **** 
 109:keyboards/ergodox_ez/ergodox_ez.c ****     // I2C subsystem
 110:keyboards/ergodox_ez/ergodox_ez.c **** 
 111:keyboards/ergodox_ez/ergodox_ez.c ****     // uint8_t sreg_prev;
 112:keyboards/ergodox_ez/ergodox_ez.c ****     // sreg_prev=SREG;
 113:keyboards/ergodox_ez/ergodox_ez.c ****     // cli();
 114:keyboards/ergodox_ez/ergodox_ez.c **** 
 115:keyboards/ergodox_ez/ergodox_ez.c ****     if (i2c_initialized == 0) {
 737               		.loc 2 115 5 is_stmt 1 view .LVU196
 738               		.loc 2 115 8 is_stmt 0 view .LVU197
 739 000c 8091 0000 		lds r24,i2c_initialized
 740 0010 8111      		cpse r24,__zero_reg__
 741 0012 00C0      		rjmp .L24
 116:keyboards/ergodox_ez/ergodox_ez.c ****         i2c_init();  // on pins D(1,0)
 742               		.loc 2 116 9 is_stmt 1 view .LVU198
 743 0014 0E94 0000 		call i2c_init
 744               	.LVL37:
 117:keyboards/ergodox_ez/ergodox_ez.c ****         i2c_initialized = true;
 745               		.loc 2 117 9 view .LVU199
 746               		.loc 2 117 25 is_stmt 0 view .LVU200
 747 0018 81E0      		ldi r24,lo8(1)
 748 001a 8093 0000 		sts i2c_initialized,r24
 118:keyboards/ergodox_ez/ergodox_ez.c ****         _delay_ms(1000);
 749               		.loc 2 118 9 is_stmt 1 view .LVU201
 750               	.LVL38:
 751               	.LBB36:
 752               	.LBI36:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 753               		.loc 3 166 1 view .LVU202
 754               	.LBB37:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 755               		.loc 3 168 2 view .LVU203
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 756               		.loc 3 172 2 view .LVU204
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 757               		.loc 3 173 2 view .LVU205
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 758               		.loc 3 174 2 view .LVU206
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 759               		.loc 3 184 3 view .LVU207
 760               		.loc 3 187 2 view .LVU208
 761 001e 2FEF      		ldi r18,lo8(3199999)
 762 0020 83ED      		ldi r24,hi8(3199999)
 763 0022 90E3      		ldi r25,hlo8(3199999)
 764 0024 2150      	1:	subi r18,1
 765 0026 8040      		sbci r24,0
 766 0028 9040      		sbci r25,0
 767 002a 01F4      		brne 1b
 768 002c 00C0      		rjmp .
 769 002e 0000      		nop
 770               	.LVL39:
 771               	.L24:
 772               		.loc 3 187 2 is_stmt 0 view .LVU209
 773               	.LBE37:
 774               	.LBE36:
 119:keyboards/ergodox_ez/ergodox_ez.c ****     }
 120:keyboards/ergodox_ez/ergodox_ez.c ****     // i2c_init(); // on pins D(1,0)
 121:keyboards/ergodox_ez/ergodox_ez.c ****     // _delay_ms(1000);
 122:keyboards/ergodox_ez/ergodox_ez.c **** 
 123:keyboards/ergodox_ez/ergodox_ez.c ****     // set pin direction
 124:keyboards/ergodox_ez/ergodox_ez.c ****     // - unused  : input  : 1
 125:keyboards/ergodox_ez/ergodox_ez.c ****     // - input   : input  : 1
 126:keyboards/ergodox_ez/ergodox_ez.c ****     // - driving : output : 0
 127:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);    if (mcp23018_status) go
 775               		.loc 2 127 5 is_stmt 1 view .LVU210
 776               		.loc 2 127 23 is_stmt 0 view .LVU211
 777 0030 64E6      		ldi r22,lo8(100)
 778 0032 70E0      		ldi r23,0
 779 0034 80E4      		ldi r24,lo8(64)
 780 0036 0E94 0000 		call i2c_start
 781               	.LVL40:
 782               		.loc 2 127 21 view .LVU212
 783 003a 9093 0000 		sts mcp23018_status+1,r25
 784 003e 8093 0000 		sts mcp23018_status,r24
 785               		.loc 2 127 77 is_stmt 1 view .LVU213
 786               		.loc 2 127 80 is_stmt 0 view .LVU214
 787 0042 892B      		or r24,r25
 788 0044 01F0      		breq .+2
 789 0046 00C0      		rjmp .L26
 128:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(IODIRA, ERGODOX_EZ_I2C_TIMEOUT);            if (mcp23018_status) go
 790               		.loc 2 128 5 is_stmt 1 view .LVU215
 791               		.loc 2 128 23 is_stmt 0 view .LVU216
 792 0048 64E6      		ldi r22,lo8(100)
 793 004a 70E0      		ldi r23,0
 794 004c 80E0      		ldi r24,0
 795 004e 0E94 0000 		call i2c_write
 796               	.LVL41:
 797               		.loc 2 128 21 view .LVU217
 798 0052 9093 0000 		sts mcp23018_status+1,r25
 799 0056 8093 0000 		sts mcp23018_status,r24
 800               		.loc 2 128 77 is_stmt 1 view .LVU218
 801               		.loc 2 128 80 is_stmt 0 view .LVU219
 802 005a 892B      		or r24,r25
 803 005c 01F0      		breq .+2
 804 005e 00C0      		rjmp .L26
 129:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00000000, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 805               		.loc 2 129 5 is_stmt 1 view .LVU220
 806               		.loc 2 129 23 is_stmt 0 view .LVU221
 807 0060 64E6      		ldi r22,lo8(100)
 808 0062 70E0      		ldi r23,0
 809 0064 80E0      		ldi r24,0
 810 0066 0E94 0000 		call i2c_write
 811               	.LVL42:
 812               		.loc 2 129 21 view .LVU222
 813 006a 9093 0000 		sts mcp23018_status+1,r25
 814 006e 8093 0000 		sts mcp23018_status,r24
 815               		.loc 2 129 77 is_stmt 1 view .LVU223
 816               		.loc 2 129 80 is_stmt 0 view .LVU224
 817 0072 892B      		or r24,r25
 818 0074 01F4      		brne .L26
 130:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00111111, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 819               		.loc 2 130 5 is_stmt 1 view .LVU225
 820               		.loc 2 130 23 is_stmt 0 view .LVU226
 821 0076 64E6      		ldi r22,lo8(100)
 822 0078 70E0      		ldi r23,0
 823 007a 8FE3      		ldi r24,lo8(63)
 824 007c 0E94 0000 		call i2c_write
 825               	.LVL43:
 826               		.loc 2 130 21 view .LVU227
 827 0080 9093 0000 		sts mcp23018_status+1,r25
 828 0084 8093 0000 		sts mcp23018_status,r24
 829               		.loc 2 130 77 is_stmt 1 view .LVU228
 830               		.loc 2 130 80 is_stmt 0 view .LVU229
 831 0088 892B      		or r24,r25
 832 008a 01F4      		brne .L26
 131:keyboards/ergodox_ez/ergodox_ez.c ****     i2c_stop();
 833               		.loc 2 131 5 is_stmt 1 view .LVU230
 834 008c 0E94 0000 		call i2c_stop
 835               	.LVL44:
 132:keyboards/ergodox_ez/ergodox_ez.c **** 
 133:keyboards/ergodox_ez/ergodox_ez.c ****     // set pull-up
 134:keyboards/ergodox_ez/ergodox_ez.c ****     // - unused  : on  : 1
 135:keyboards/ergodox_ez/ergodox_ez.c ****     // - input   : on  : 1
 136:keyboards/ergodox_ez/ergodox_ez.c ****     // - driving : off : 0
 137:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);    if (mcp23018_status) go
 836               		.loc 2 137 5 view .LVU231
 837               		.loc 2 137 23 is_stmt 0 view .LVU232
 838 0090 64E6      		ldi r22,lo8(100)
 839 0092 70E0      		ldi r23,0
 840 0094 80E4      		ldi r24,lo8(64)
 841 0096 0E94 0000 		call i2c_start
 842               	.LVL45:
 843               		.loc 2 137 21 view .LVU233
 844 009a 9093 0000 		sts mcp23018_status+1,r25
 845 009e 8093 0000 		sts mcp23018_status,r24
 846               		.loc 2 137 77 is_stmt 1 view .LVU234
 847               		.loc 2 137 80 is_stmt 0 view .LVU235
 848 00a2 892B      		or r24,r25
 849 00a4 01F4      		brne .L26
 138:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(GPPUA, ERGODOX_EZ_I2C_TIMEOUT);             if (mcp23018_status) go
 850               		.loc 2 138 5 is_stmt 1 view .LVU236
 851               		.loc 2 138 23 is_stmt 0 view .LVU237
 852 00a6 64E6      		ldi r22,lo8(100)
 853 00a8 70E0      		ldi r23,0
 854 00aa 8CE0      		ldi r24,lo8(12)
 855 00ac 0E94 0000 		call i2c_write
 856               	.LVL46:
 857               		.loc 2 138 21 view .LVU238
 858 00b0 9093 0000 		sts mcp23018_status+1,r25
 859 00b4 8093 0000 		sts mcp23018_status,r24
 860               		.loc 2 138 77 is_stmt 1 view .LVU239
 861               		.loc 2 138 80 is_stmt 0 view .LVU240
 862 00b8 892B      		or r24,r25
 863 00ba 01F4      		brne .L26
 139:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00000000, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 864               		.loc 2 139 5 is_stmt 1 view .LVU241
 865               		.loc 2 139 23 is_stmt 0 view .LVU242
 866 00bc 64E6      		ldi r22,lo8(100)
 867 00be 70E0      		ldi r23,0
 868 00c0 80E0      		ldi r24,0
 869 00c2 0E94 0000 		call i2c_write
 870               	.LVL47:
 871               		.loc 2 139 21 view .LVU243
 872 00c6 9093 0000 		sts mcp23018_status+1,r25
 873 00ca 8093 0000 		sts mcp23018_status,r24
 874               		.loc 2 139 77 is_stmt 1 view .LVU244
 875               		.loc 2 139 80 is_stmt 0 view .LVU245
 876 00ce 892B      		or r24,r25
 877 00d0 01F4      		brne .L26
 140:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00111111, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 878               		.loc 2 140 5 is_stmt 1 view .LVU246
 879               		.loc 2 140 23 is_stmt 0 view .LVU247
 880 00d2 64E6      		ldi r22,lo8(100)
 881 00d4 70E0      		ldi r23,0
 882 00d6 8FE3      		ldi r24,lo8(63)
 883 00d8 0E94 0000 		call i2c_write
 884               	.LVL48:
 885               		.loc 2 140 21 view .LVU248
 886 00dc 9093 0000 		sts mcp23018_status+1,r25
 887 00e0 8093 0000 		sts mcp23018_status,r24
 888               		.loc 2 140 77 is_stmt 1 view .LVU249
 889               	.L26:
 141:keyboards/ergodox_ez/ergodox_ez.c **** 
 142:keyboards/ergodox_ez/ergodox_ez.c **** out:
 143:keyboards/ergodox_ez/ergodox_ez.c ****     i2c_stop();
 890               		.loc 2 143 5 view .LVU250
 891 00e4 0E94 0000 		call i2c_stop
 892               	.LVL49:
 144:keyboards/ergodox_ez/ergodox_ez.c **** 
 145:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
 146:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) mcp23018_status = ergodox_left_leds_update();
 147:keyboards/ergodox_ez/ergodox_ez.c **** #endif // LEFT_LEDS
 148:keyboards/ergodox_ez/ergodox_ez.c **** 
 149:keyboards/ergodox_ez/ergodox_ez.c ****     // SREG=sreg_prev;
 150:keyboards/ergodox_ez/ergodox_ez.c **** 
 151:keyboards/ergodox_ez/ergodox_ez.c ****     return mcp23018_status;
 893               		.loc 2 151 5 view .LVU251
 152:keyboards/ergodox_ez/ergodox_ez.c **** }
 894               		.loc 2 152 1 is_stmt 0 view .LVU252
 895 00e8 8091 0000 		lds r24,mcp23018_status
 896               	/* epilogue start */
 897 00ec 0895      		ret
 898               		.cfi_endproc
 899               	.LFE130:
 901               		.weak	hand_swap_config
 902               		.section	.rodata.hand_swap_config,"a",@progbits
 905               	hand_swap_config:
 906 0000 00        		.byte	0
 907 0001 0D        		.byte	13
 908 0002 01        		.byte	1
 909 0003 0D        		.byte	13
 910 0004 02        		.byte	2
 911 0005 0D        		.byte	13
 912 0006 03        		.byte	3
 913 0007 0D        		.byte	13
 914 0008 04        		.byte	4
 915 0009 0D        		.byte	13
 916 000a 05        		.byte	5
 917 000b 0D        		.byte	13
 918 000c 00        		.byte	0
 919 000d 0C        		.byte	12
 920 000e 01        		.byte	1
 921 000f 0C        		.byte	12
 922 0010 02        		.byte	2
 923 0011 0C        		.byte	12
 924 0012 03        		.byte	3
 925 0013 0C        		.byte	12
 926 0014 04        		.byte	4
 927 0015 0C        		.byte	12
 928 0016 05        		.byte	5
 929 0017 0C        		.byte	12
 930 0018 00        		.byte	0
 931 0019 0B        		.byte	11
 932 001a 01        		.byte	1
 933 001b 0B        		.byte	11
 934 001c 02        		.byte	2
 935 001d 0B        		.byte	11
 936 001e 03        		.byte	3
 937 001f 0B        		.byte	11
 938 0020 04        		.byte	4
 939 0021 0B        		.byte	11
 940 0022 05        		.byte	5
 941 0023 0B        		.byte	11
 942 0024 00        		.byte	0
 943 0025 0A        		.byte	10
 944 0026 01        		.byte	1
 945 0027 0A        		.byte	10
 946 0028 02        		.byte	2
 947 0029 0A        		.byte	10
 948 002a 03        		.byte	3
 949 002b 0A        		.byte	10
 950 002c 04        		.byte	4
 951 002d 0A        		.byte	10
 952 002e 05        		.byte	5
 953 002f 0A        		.byte	10
 954 0030 00        		.byte	0
 955 0031 09        		.byte	9
 956 0032 01        		.byte	1
 957 0033 09        		.byte	9
 958 0034 02        		.byte	2
 959 0035 09        		.byte	9
 960 0036 03        		.byte	3
 961 0037 09        		.byte	9
 962 0038 04        		.byte	4
 963 0039 09        		.byte	9
 964 003a 05        		.byte	5
 965 003b 09        		.byte	9
 966 003c 00        		.byte	0
 967 003d 08        		.byte	8
 968 003e 01        		.byte	1
 969 003f 08        		.byte	8
 970 0040 02        		.byte	2
 971 0041 08        		.byte	8
 972 0042 03        		.byte	3
 973 0043 08        		.byte	8
 974 0044 04        		.byte	4
 975 0045 08        		.byte	8
 976 0046 05        		.byte	5
 977 0047 08        		.byte	8
 978 0048 00        		.byte	0
 979 0049 07        		.byte	7
 980 004a 01        		.byte	1
 981 004b 07        		.byte	7
 982 004c 02        		.byte	2
 983 004d 07        		.byte	7
 984 004e 03        		.byte	3
 985 004f 07        		.byte	7
 986 0050 04        		.byte	4
 987 0051 07        		.byte	7
 988 0052 05        		.byte	5
 989 0053 07        		.byte	7
 990 0054 00        		.byte	0
 991 0055 06        		.byte	6
 992 0056 01        		.byte	1
 993 0057 06        		.byte	6
 994 0058 02        		.byte	2
 995 0059 06        		.byte	6
 996 005a 03        		.byte	3
 997 005b 06        		.byte	6
 998 005c 04        		.byte	4
 999 005d 06        		.byte	6
 1000 005e 05        		.byte	5
 1001 005f 06        		.byte	6
 1002 0060 00        		.byte	0
 1003 0061 05        		.byte	5
 1004 0062 01        		.byte	1
 1005 0063 05        		.byte	5
 1006 0064 02        		.byte	2
 1007 0065 05        		.byte	5
 1008 0066 03        		.byte	3
 1009 0067 05        		.byte	5
 1010 0068 04        		.byte	4
 1011 0069 05        		.byte	5
 1012 006a 05        		.byte	5
 1013 006b 05        		.byte	5
 1014 006c 00        		.byte	0
 1015 006d 04        		.byte	4
 1016 006e 01        		.byte	1
 1017 006f 04        		.byte	4
 1018 0070 02        		.byte	2
 1019 0071 04        		.byte	4
 1020 0072 03        		.byte	3
 1021 0073 04        		.byte	4
 1022 0074 04        		.byte	4
 1023 0075 04        		.byte	4
 1024 0076 05        		.byte	5
 1025 0077 04        		.byte	4
 1026 0078 00        		.byte	0
 1027 0079 03        		.byte	3
 1028 007a 01        		.byte	1
 1029 007b 03        		.byte	3
 1030 007c 02        		.byte	2
 1031 007d 03        		.byte	3
 1032 007e 03        		.byte	3
 1033 007f 03        		.byte	3
 1034 0080 04        		.byte	4
 1035 0081 03        		.byte	3
 1036 0082 05        		.byte	5
 1037 0083 03        		.byte	3
 1038 0084 00        		.byte	0
 1039 0085 02        		.byte	2
 1040 0086 01        		.byte	1
 1041 0087 02        		.byte	2
 1042 0088 02        		.byte	2
 1043 0089 02        		.byte	2
 1044 008a 03        		.byte	3
 1045 008b 02        		.byte	2
 1046 008c 04        		.byte	4
 1047 008d 02        		.byte	2
 1048 008e 05        		.byte	5
 1049 008f 02        		.byte	2
 1050 0090 00        		.byte	0
 1051 0091 01        		.byte	1
 1052 0092 01        		.byte	1
 1053 0093 01        		.byte	1
 1054 0094 02        		.byte	2
 1055 0095 01        		.byte	1
 1056 0096 03        		.byte	3
 1057 0097 01        		.byte	1
 1058 0098 04        		.byte	4
 1059 0099 01        		.byte	1
 1060 009a 05        		.byte	5
 1061 009b 01        		.byte	1
 1062 009c 00        		.byte	0
 1063 009d 00        		.byte	0
 1064 009e 01        		.byte	1
 1065 009f 00        		.byte	0
 1066 00a0 02        		.byte	2
 1067 00a1 00        		.byte	0
 1068 00a2 03        		.byte	3
 1069 00a3 00        		.byte	0
 1070 00a4 04        		.byte	4
 1071 00a5 00        		.byte	0
 1072 00a6 05        		.byte	5
 1073 00a7 00        		.byte	0
 1074               	.global	mcp23018_status
 1075               		.section	.data.mcp23018_status,"aw",@progbits
 1078               	mcp23018_status:
 1079 0000 2000      		.word	32
 1080               	.global	i2c_initialized
 1081               		.section	.bss.i2c_initialized,"aw",@nobits
 1084               	i2c_initialized:
 1085 0000 00        		.zero	1
 1086               		.text
 1087               	.Letext0:
 1088               		.file 4 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1089               		.file 5 "/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/include/stddef.h"
 1090               		.file 6 "tmk_core/common/keyboard.h"
 1091               		.file 7 "tmk_core/common/action.h"
 1092               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1093               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1094               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 1095               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1096               		.file 12 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 1097               		.file 13 "tmk_core/common/report.h"
 1098               		.file 14 "tmk_core/common/host.h"
 1099               		.file 15 "tmk_core/common/debug.h"
 1100               		.file 16 "quantum/keycode_config.h"
 1101               		.file 17 "quantum/keymap.h"
 1102               		.file 18 "quantum/rgblight_types.h"
 1103               		.file 19 "quantum/rgblight.h"
 1104               		.file 20 "tmk_core/common/action_layer.h"
 1105               		.file 21 "tmk_core/common/timer.h"
 1106               		.file 22 "tmk_core/common/action_util.h"
 1107               		.file 23 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdlib.h"
 1108               		.file 24 "quantum/process_keycode/process_unicode_common.h"
 1109               		.file 25 "quantum/quantum.h"
 1110               		.file 26 "drivers/avr/i2c_master.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ergodox_ez.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:13     .text.ergodox_board_led_on:0000000000000000 ergodox_board_led_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:37     .text.ergodox_right_led_1_on:0000000000000000 ergodox_right_led_1_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:60     .text.ergodox_right_led_2_on:0000000000000000 ergodox_right_led_2_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:83     .text.ergodox_right_led_3_on:0000000000000000 ergodox_right_led_3_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:106    .text.ergodox_right_led_on:0000000000000000 ergodox_right_led_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:149    .text.ergodox_board_led_off:0000000000000000 ergodox_board_led_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:172    .text.ergodox_right_led_1_off:0000000000000000 ergodox_right_led_1_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:195    .text.ergodox_right_led_2_off:0000000000000000 ergodox_right_led_2_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:218    .text.ergodox_right_led_3_off:0000000000000000 ergodox_right_led_3_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:241    .text.ergodox_right_led_off:0000000000000000 ergodox_right_led_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:285    .text.ergodox_led_all_on:0000000000000000 ergodox_led_all_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:311    .text.ergodox_led_all_off:0000000000000000 ergodox_led_all_off
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:337    .text.ergodox_right_led_1_set:0000000000000000 ergodox_right_led_1_set
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:360    .text.ergodox_right_led_2_set:0000000000000000 ergodox_right_led_2_set
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:383    .text.ergodox_right_led_3_set:0000000000000000 ergodox_right_led_3_set
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:406    .text.ergodox_right_led_set:0000000000000000 ergodox_right_led_set
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:445    .text.ergodox_led_all_set:0000000000000000 ergodox_led_all_set
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:503    .text.ergodox_blink_all_leds:0000000000000000 ergodox_blink_all_leds
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:667    .text.matrix_init_kb:0000000000000000 matrix_init_kb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:723    .text.init_mcp23018:0000000000000000 init_mcp23018
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:1078   .data.mcp23018_status:0000000000000000 mcp23018_status
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:1084   .bss.i2c_initialized:0000000000000000 i2c_initialized
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc8SIqwU.s:905    .rodata.hand_swap_config:0000000000000000 hand_swap_config

UNDEFINED SYMBOLS
matrix_init_user
i2c_init
i2c_start
i2c_write
i2c_stop
__do_copy_data
__do_clear_bss
