   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB103:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "backlight.h"
  33:tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  35:tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  36:tmk_core/common/keyboard.c **** #else
  37:tmk_core/common/keyboard.c **** #   include "magic.h"
  38:tmk_core/common/keyboard.c **** #endif
  39:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  40:tmk_core/common/keyboard.c **** #   include "mousekey.h"
  41:tmk_core/common/keyboard.c **** #endif
  42:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  43:tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  44:tmk_core/common/keyboard.c **** #endif
  45:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  46:tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  47:tmk_core/common/keyboard.c **** #endif
  48:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  49:tmk_core/common/keyboard.c **** #   include "adb.h"
  50:tmk_core/common/keyboard.c **** #endif
  51:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  52:tmk_core/common/keyboard.c **** #   include "rgblight.h"
  53:tmk_core/common/keyboard.c **** #endif
  54:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  55:tmk_core/common/keyboard.c **** #   include "process_steno.h"
  56:tmk_core/common/keyboard.c **** #endif
  57:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  58:tmk_core/common/keyboard.c **** #   include "fauxclicky.h"
  59:tmk_core/common/keyboard.c **** #endif
  60:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  61:tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  62:tmk_core/common/keyboard.c **** #endif
  63:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  64:tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  65:tmk_core/common/keyboard.c **** #endif
  66:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  67:tmk_core/common/keyboard.c **** #   include "pointing_device.h"
  68:tmk_core/common/keyboard.c **** #endif
  69:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  70:tmk_core/common/keyboard.c **** #   include "process_midi.h"
  71:tmk_core/common/keyboard.c **** #endif
  72:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  73:tmk_core/common/keyboard.c **** #   include "hd44780.h"
  74:tmk_core/common/keyboard.c **** #endif
  75:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  76:tmk_core/common/keyboard.c **** #   include "qwiic.h"
  77:tmk_core/common/keyboard.c **** #endif
  78:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  79:tmk_core/common/keyboard.c ****     #include "oled_driver.h"
  80:tmk_core/common/keyboard.c **** #endif
  81:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  82:tmk_core/common/keyboard.c ****   #include "velocikey.h"
  83:tmk_core/common/keyboard.c **** #endif
  84:tmk_core/common/keyboard.c **** 
  85:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  86:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
  87:tmk_core/common/keyboard.c **** static matrix_row_t get_real_keys(uint8_t row, matrix_row_t rowdata){
  88:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
  89:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
  90:tmk_core/common/keyboard.c ****         //read each key in the row data and check if the keymap defines it as a real key
  91:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1<<col))){
  92:tmk_core/common/keyboard.c ****             //this creates new row data, if a key is defined in the keymap, it will be set here
  93:tmk_core/common/keyboard.c ****             out |= 1<<col;
  94:tmk_core/common/keyboard.c ****         }
  95:tmk_core/common/keyboard.c ****     }
  96:tmk_core/common/keyboard.c ****     return out;
  97:tmk_core/common/keyboard.c **** }
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata)
 100:tmk_core/common/keyboard.c **** {
 101:tmk_core/common/keyboard.c ****     rowdata &= rowdata-1; //if there are less than two bits (keys) set, rowdata will become zero
 102:tmk_core/common/keyboard.c ****     return rowdata;
 103:tmk_core/common/keyboard.c **** }
 104:tmk_core/common/keyboard.c **** 
 105:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata)
 106:tmk_core/common/keyboard.c **** {
 107:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 108:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 109:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 110:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 111:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 112:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0){
 113:tmk_core/common/keyboard.c ****         return false;
 114:tmk_core/common/keyboard.c ****     }
 115:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 116:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 117:tmk_core/common/keyboard.c ****     so they are filtered out.
 118:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 119:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 120:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 121:tmk_core/common/keyboard.c ****     */
 122:tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 123:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)){
 124:tmk_core/common/keyboard.c ****             return true;
 125:tmk_core/common/keyboard.c ****         }
 126:tmk_core/common/keyboard.c ****     }
 127:tmk_core/common/keyboard.c ****     return false;
 128:tmk_core/common/keyboard.c **** }
 129:tmk_core/common/keyboard.c **** 
 130:tmk_core/common/keyboard.c **** #endif
 131:tmk_core/common/keyboard.c **** 
 132:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 132 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 133:tmk_core/common/keyboard.c **** // To use PORTF disable JTAG with writing JTD bit twice within four cycles.
 134:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__) || defined(__AVR_ATmega32U4__))
 135:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 135 5 view .LVU1
  23               		.loc 1 135 11 is_stmt 0 view .LVU2
  24 0000 85B7      		in r24,0x35
  25 0002 8068      		ori r24,lo8(-128)
  26 0004 85BF      		out 0x35,r24
 136:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  27               		.loc 1 136 5 is_stmt 1 view .LVU3
  28               		.loc 1 136 11 is_stmt 0 view .LVU4
  29 0006 85B7      		in r24,0x35
  30 0008 8068      		ori r24,lo8(-128)
  31 000a 85BF      		out 0x35,r24
  32               	/* epilogue start */
 137:tmk_core/common/keyboard.c **** #endif
 138:tmk_core/common/keyboard.c **** }
  33               		.loc 1 138 1 view .LVU5
  34 000c 0895      		ret
  35               		.cfi_endproc
  36               	.LFE103:
  38               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  39               		.weak	keyboard_pre_init_user
  41               	keyboard_pre_init_user:
  42               	.LFB105:
 139:tmk_core/common/keyboard.c **** 
 140:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 141:tmk_core/common/keyboard.c ****  *
 142:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 143:tmk_core/common/keyboard.c ****  */
 144:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 145:tmk_core/common/keyboard.c **** void matrix_setup(void) {
 146:tmk_core/common/keyboard.c **** }
 147:tmk_core/common/keyboard.c **** 
 148:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 149:tmk_core/common/keyboard.c ****  *
 150:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 151:tmk_core/common/keyboard.c ****  */
 152:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 153:tmk_core/common/keyboard.c **** void keyboard_pre_init_user(void) { }
  43               		.loc 1 153 35 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49               		.loc 1 153 37 view .LVU7
  50               	/* epilogue start */
  51               		.loc 1 153 1 is_stmt 0 view .LVU8
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE105:
  56               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB117:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	/* epilogue start */
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE117:
  72               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  73               		.weak	keyboard_pre_init_kb
  75               	keyboard_pre_init_kb:
  76               	.LFB106:
 154:tmk_core/common/keyboard.c **** 
 155:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 156:tmk_core/common/keyboard.c ****  *
 157:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 158:tmk_core/common/keyboard.c ****  */
 159:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 160:tmk_core/common/keyboard.c **** void keyboard_pre_init_kb(void) {
  77               		.loc 1 160 33 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
 161:tmk_core/common/keyboard.c ****   keyboard_pre_init_user();
  83               		.loc 1 161 3 view .LVU10
  84 0000 0C94 0000 		jmp keyboard_pre_init_user
  85               	.LVL0:
  86               		.cfi_endproc
  87               	.LFE106:
  89               		.section	.text.keyboard_post_init_user,"ax",@progbits
  90               		.weak	keyboard_post_init_user
  92               	keyboard_post_init_user:
  93               	.LFB115:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE115:
 104               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 105               		.weak	keyboard_post_init_kb
 107               	keyboard_post_init_kb:
 108               	.LFB108:
 162:tmk_core/common/keyboard.c **** }
 163:tmk_core/common/keyboard.c **** 
 164:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 165:tmk_core/common/keyboard.c ****  *
 166:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 167:tmk_core/common/keyboard.c ****  */
 168:tmk_core/common/keyboard.c **** 
 169:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 170:tmk_core/common/keyboard.c **** void keyboard_post_init_user() {}
 171:tmk_core/common/keyboard.c **** 
 172:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 173:tmk_core/common/keyboard.c ****  *
 174:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 175:tmk_core/common/keyboard.c ****  */
 176:tmk_core/common/keyboard.c **** 
 177:tmk_core/common/keyboard.c **** __attribute__ ((weak))
 178:tmk_core/common/keyboard.c **** void keyboard_post_init_kb(void) {
 109               		.loc 1 178 34 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 179:tmk_core/common/keyboard.c ****   keyboard_post_init_user();
 115               		.loc 1 179 3 view .LVU12
 116 0000 0C94 0000 		jmp keyboard_post_init_user
 117               	.LVL1:
 118               		.cfi_endproc
 119               	.LFE108:
 121               		.section	.text.keyboard_setup,"ax",@progbits
 122               	.global	keyboard_setup
 124               	keyboard_setup:
 125               	.LFB109:
 180:tmk_core/common/keyboard.c **** }
 181:tmk_core/common/keyboard.c **** 
 182:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 183:tmk_core/common/keyboard.c ****  *
 184:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 185:tmk_core/common/keyboard.c ****  */
 186:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 126               		.loc 1 186 27 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 187:tmk_core/common/keyboard.c ****     disable_jtag();
 132               		.loc 1 187 5 view .LVU14
 133 0000 0E94 0000 		call disable_jtag
 134               	.LVL2:
 188:tmk_core/common/keyboard.c ****     matrix_setup();
 135               		.loc 1 188 5 view .LVU15
 136 0004 0E94 0000 		call matrix_setup
 137               	.LVL3:
 189:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 138               		.loc 1 189 5 view .LVU16
 139 0008 0C94 0000 		jmp keyboard_pre_init_kb
 140               	.LVL4:
 141               		.cfi_endproc
 142               	.LFE109:
 144               		.section	.text.is_keyboard_master,"ax",@progbits
 145               		.weak	is_keyboard_master
 147               	is_keyboard_master:
 148               	.LFB110:
 190:tmk_core/common/keyboard.c **** }
 191:tmk_core/common/keyboard.c **** 
 192:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 193:tmk_core/common/keyboard.c ****  *
 194:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 195:tmk_core/common/keyboard.c ****  */
 196:tmk_core/common/keyboard.c **** __attribute__((weak))
 197:tmk_core/common/keyboard.c **** bool is_keyboard_master(void) {
 149               		.loc 1 197 31 view -0
 150               		.cfi_startproc
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
 198:tmk_core/common/keyboard.c ****     return true;
 155               		.loc 1 198 5 view .LVU18
 199:tmk_core/common/keyboard.c **** }
 156               		.loc 1 199 1 is_stmt 0 view .LVU19
 157 0000 81E0      		ldi r24,lo8(1)
 158               	/* epilogue start */
 159 0002 0895      		ret
 160               		.cfi_endproc
 161               	.LFE110:
 163               		.section	.text.keyboard_init,"ax",@progbits
 164               	.global	keyboard_init
 166               	keyboard_init:
 167               	.LFB111:
 200:tmk_core/common/keyboard.c **** 
 201:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 202:tmk_core/common/keyboard.c ****  *
 203:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 204:tmk_core/common/keyboard.c ****  */
 205:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 168               		.loc 1 205 26 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 206:tmk_core/common/keyboard.c ****     timer_init();
 174               		.loc 1 206 5 view .LVU21
 175 0000 0E94 0000 		call timer_init
 176               	.LVL5:
 207:tmk_core/common/keyboard.c ****     matrix_init();
 177               		.loc 1 207 5 view .LVU22
 178 0004 0E94 0000 		call matrix_init
 179               	.LVL6:
 208:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 209:tmk_core/common/keyboard.c ****     qwiic_init();
 210:tmk_core/common/keyboard.c **** #endif
 211:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 212:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 213:tmk_core/common/keyboard.c **** #endif
 214:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 215:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 216:tmk_core/common/keyboard.c **** #endif
 217:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 218:tmk_core/common/keyboard.c ****     serial_mouse_init();
 219:tmk_core/common/keyboard.c **** #endif
 220:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 221:tmk_core/common/keyboard.c ****     adb_mouse_init();
 222:tmk_core/common/keyboard.c **** #endif
 223:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 224:tmk_core/common/keyboard.c ****     bootmagic();
 225:tmk_core/common/keyboard.c **** #else
 226:tmk_core/common/keyboard.c ****     magic();
 180               		.loc 1 226 5 view .LVU23
 181 0008 0E94 0000 		call magic
 182               	.LVL7:
 227:tmk_core/common/keyboard.c **** #endif
 228:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 229:tmk_core/common/keyboard.c ****     backlight_init();
 230:tmk_core/common/keyboard.c **** #endif
 231:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 232:tmk_core/common/keyboard.c ****     rgblight_init();
 183               		.loc 1 232 5 view .LVU24
 184 000c 0E94 0000 		call rgblight_init
 185               	.LVL8:
 233:tmk_core/common/keyboard.c **** #endif
 234:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 235:tmk_core/common/keyboard.c ****     steno_init();
 236:tmk_core/common/keyboard.c **** #endif
 237:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 238:tmk_core/common/keyboard.c ****     fauxclicky_init();
 239:tmk_core/common/keyboard.c **** #endif
 240:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 241:tmk_core/common/keyboard.c ****     pointing_device_init();
 242:tmk_core/common/keyboard.c **** #endif
 243:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 244:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 245:tmk_core/common/keyboard.c **** #endif
 246:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 186               		.loc 1 246 5 view .LVU25
 187 0010 0C94 0000 		jmp keyboard_post_init_kb
 188               	.LVL9:
 189               		.cfi_endproc
 190               	.LFE111:
 192               		.section	.text.keyboard_task,"ax",@progbits
 193               	.global	keyboard_task
 195               	keyboard_task:
 196               	.LFB112:
 247:tmk_core/common/keyboard.c **** }
 248:tmk_core/common/keyboard.c **** 
 249:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 250:tmk_core/common/keyboard.c ****  *
 251:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 252:tmk_core/common/keyboard.c ****  *
 253:tmk_core/common/keyboard.c ****  * * scan matrix
 254:tmk_core/common/keyboard.c ****  * * handle mouse movements
 255:tmk_core/common/keyboard.c ****  * * run visualizer code
 256:tmk_core/common/keyboard.c ****  * * handle midi commands
 257:tmk_core/common/keyboard.c ****  * * light LEDs
 258:tmk_core/common/keyboard.c ****  *
 259:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 260:tmk_core/common/keyboard.c ****  */
 261:tmk_core/common/keyboard.c **** void keyboard_task(void)
 262:tmk_core/common/keyboard.c **** {
 197               		.loc 1 262 1 view -0
 198               		.cfi_startproc
 199 0000 BF92      		push r11
 200               	.LCFI0:
 201               		.cfi_def_cfa_offset 3
 202               		.cfi_offset 11, -2
 203 0002 CF92      		push r12
 204               	.LCFI1:
 205               		.cfi_def_cfa_offset 4
 206               		.cfi_offset 12, -3
 207 0004 DF92      		push r13
 208               	.LCFI2:
 209               		.cfi_def_cfa_offset 5
 210               		.cfi_offset 13, -4
 211 0006 EF92      		push r14
 212               	.LCFI3:
 213               		.cfi_def_cfa_offset 6
 214               		.cfi_offset 14, -5
 215 0008 FF92      		push r15
 216               	.LCFI4:
 217               		.cfi_def_cfa_offset 7
 218               		.cfi_offset 15, -6
 219 000a 0F93      		push r16
 220               	.LCFI5:
 221               		.cfi_def_cfa_offset 8
 222               		.cfi_offset 16, -7
 223 000c 1F93      		push r17
 224               	.LCFI6:
 225               		.cfi_def_cfa_offset 9
 226               		.cfi_offset 17, -8
 227 000e CF93      		push r28
 228               	.LCFI7:
 229               		.cfi_def_cfa_offset 10
 230               		.cfi_offset 28, -9
 231 0010 DF93      		push r29
 232               	.LCFI8:
 233               		.cfi_def_cfa_offset 11
 234               		.cfi_offset 29, -10
 235 0012 CDB7      		in r28,__SP_L__
 236 0014 DEB7      		in r29,__SP_H__
 237               	.LCFI9:
 238               		.cfi_def_cfa_register 28
 239 0016 2A97      		sbiw r28,10
 240               	.LCFI10:
 241               		.cfi_def_cfa_offset 21
 242 0018 0FB6      		in __tmp_reg__,__SREG__
 243 001a F894      		cli
 244 001c DEBF      		out __SP_H__,r29
 245 001e 0FBE      		out __SREG__,__tmp_reg__
 246 0020 CDBF      		out __SP_L__,r28
 247               	/* prologue: function */
 248               	/* frame size = 10 */
 249               	/* stack size = 19 */
 250               	.L__stack_usage = 19
 263:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 251               		.loc 1 263 5 view .LVU27
 264:tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 252               		.loc 1 264 5 view .LVU28
 265:tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 253               		.loc 1 265 5 view .LVU29
 254               	.LVL10:
 266:tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 255               		.loc 1 266 5 view .LVU30
 267:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 268:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 269:tmk_core/common/keyboard.c **** #endif
 270:tmk_core/common/keyboard.c **** 
 271:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 272:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 273:tmk_core/common/keyboard.c **** #else
 274:tmk_core/common/keyboard.c ****     matrix_scan();
 256               		.loc 1 274 5 view .LVU31
 257 0022 0E94 0000 		call matrix_scan
 258               	.LVL11:
 275:tmk_core/common/keyboard.c **** #endif
 276:tmk_core/common/keyboard.c **** 
 277:tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 259               		.loc 1 277 5 view .LVU32
 260               		.loc 1 277 9 is_stmt 0 view .LVU33
 261 0026 0E94 0000 		call is_keyboard_master
 262               	.LVL12:
 263               		.loc 1 277 8 view .LVU34
 264 002a 8823      		tst r24
 265 002c 01F4      		brne .+2
 266 002e 00C0      		rjmp .L11
 267 0030 80E0      		ldi r24,lo8(matrix_prev.5634)
 268 0032 C82E      		mov r12,r24
 269 0034 80E0      		ldi r24,hi8(matrix_prev.5634)
 270 0036 D82E      		mov r13,r24
 271 0038 10E0      		ldi r17,0
 272 003a 00E0      		ldi r16,0
 273               	.LVL13:
 274               	.L18:
 275               		.loc 1 277 8 view .LVU35
 276 003c B02E      		mov r11,r16
 277               	.LVL14:
 278               	.LBB6:
 278:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 279:tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 279               		.loc 1 279 13 is_stmt 1 view .LVU36
 280               		.loc 1 279 26 is_stmt 0 view .LVU37
 281 003e 802F      		mov r24,r16
 282 0040 0E94 0000 		call matrix_get_row
 283               	.LVL15:
 284 0044 E82E      		mov r14,r24
 285               	.LVL16:
 280:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 286               		.loc 1 280 13 is_stmt 1 view .LVU38
 287               		.loc 1 280 53 is_stmt 0 view .LVU39
 288 0046 F601      		movw r30,r12
 289 0048 F190      		ld r15,Z+
 290 004a 6F01      		movw r12,r30
 291               	.LVL17:
 281:tmk_core/common/keyboard.c ****             if (matrix_change) {
 292               		.loc 1 281 13 is_stmt 1 view .LVU40
 293               		.loc 1 281 16 is_stmt 0 view .LVU41
 294 004c F816      		cp r15,r24
 295 004e 01F4      		brne .+2
 296 0050 00C0      		rjmp .L12
 282:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 283:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) { continue; }
 284:tmk_core/common/keyboard.c **** #endif
 285:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 297               		.loc 1 285 17 is_stmt 1 view .LVU42
 298               		.loc 1 285 21 is_stmt 0 view .LVU43
 299 0052 8091 0000 		lds r24,debug_config
 300               		.loc 1 285 20 view .LVU44
 301 0056 81FD      		sbrc r24,1
 302               		.loc 1 285 35 is_stmt 1 discriminator 1 view .LVU45
 303 0058 0E94 0000 		call matrix_print
 304               	.LVL18:
 305               	.L13:
 286:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 306               		.loc 1 286 17 view .LVU46
 307               	.LBB7:
 308               		.loc 1 286 22 view .LVU47
 309               		.loc 1 286 22 is_stmt 0 view .LVU48
 310               	.LBE7:
 311               	.LBE6:
 277:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 312               		.loc 1 277 8 view .LVU49
 313 005c 90E0      		ldi r25,0
 314 005e 80E0      		ldi r24,0
 315               	.LBB10:
 280:tmk_core/common/keyboard.c ****             if (matrix_change) {
 316               		.loc 1 280 27 view .LVU50
 317 0060 FE24      		eor r15,r14
 318               	.LVL19:
 319               	.LBB8:
 287:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 320               		.loc 1 287 25 view .LVU51
 321 0062 2F2D      		mov r18,r15
 322 0064 30E0      		ldi r19,0
 323               	.LVL20:
 324               	.L17:
 325               		.loc 1 287 25 view .LVU52
 326 0066 482F      		mov r20,r24
 327               	.LVL21:
 328               		.loc 1 287 21 is_stmt 1 view .LVU53
 329               		.loc 1 287 25 is_stmt 0 view .LVU54
 330 0068 B901      		movw r22,r18
 331 006a 082E      		mov r0,r24
 332 006c 00C0      		rjmp 2f
 333               		1:
 334 006e 7595      		asr r23
 335 0070 6795      		ror r22
 336               		2:
 337 0072 0A94      		dec r0
 338 0074 02F4      		brpl 1b
 339               		.loc 1 287 24 view .LVU55
 340 0076 60FF      		sbrs r22,0
 341 0078 00C0      		rjmp .L14
 288:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 342               		.loc 1 288 25 is_stmt 1 view .LVU56
 343               		.loc 1 288 49 is_stmt 0 view .LVU57
 344 007a 8E83      		std Y+6,r24
 345 007c BF82      		std Y+7,r11
 289:tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 290:tmk_core/common/keyboard.c ****                             .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 346               		.loc 1 290 70 view .LVU58
 347 007e 81E0      		ldi r24,lo8(1)
 348 0080 90E0      		ldi r25,0
 349               	.LVL22:
 350               		.loc 1 290 70 view .LVU59
 351 0082 6C01      		movw r12,r24
 352 0084 00C0      		rjmp 2f
 353               		1:
 354 0086 CC0C      		lsl r12
 355 0088 DD1C      		rol r13
 356               		2:
 357 008a 4A95      		dec r20
 358 008c 02F4      		brpl 1b
 359               		.loc 1 290 52 view .LVU60
 360 008e 2E2D      		mov r18,r14
 361 0090 30E0      		ldi r19,0
 362 0092 2C21      		and r18,r12
 363 0094 3D21      		and r19,r13
 364 0096 232B      		or r18,r19
 365 0098 01F4      		brne .L15
 366 009a 80E0      		ldi r24,0
 367               	.L15:
 288:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 368               		.loc 1 288 49 view .LVU61
 369 009c 8887      		std Y+8,r24
 291:tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 370               		.loc 1 291 38 view .LVU62
 371 009e 0E94 0000 		call timer_read
 372               	.LVL23:
 373               		.loc 1 291 51 view .LVU63
 374 00a2 8160      		ori r24,1
 288:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 375               		.loc 1 288 49 view .LVU64
 376 00a4 782F      		mov r23,r24
 377 00a6 9A87      		std Y+10,r25
 378 00a8 8987      		std Y+9,r24
 288:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 379               		.loc 1 288 25 view .LVU65
 380 00aa 4E81      		ldd r20,Y+6
 381 00ac 5F81      		ldd r21,Y+7
 382 00ae 6885      		ldd r22,Y+8
 383 00b0 8A85      		ldd r24,Y+10
 384 00b2 0E94 0000 		call action_exec
 385               	.LVL24:
 292:tmk_core/common/keyboard.c ****                         });
 293:tmk_core/common/keyboard.c ****                         // record a processed key
 294:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1<<c);
 386               		.loc 1 294 25 is_stmt 1 view .LVU66
 387               		.loc 1 294 40 is_stmt 0 view .LVU67
 388 00b6 F801      		movw r30,r16
 389 00b8 E050      		subi r30,lo8(-(matrix_prev.5634))
 390 00ba F040      		sbci r31,hi8(-(matrix_prev.5634))
 391 00bc 8081      		ld r24,Z
 392 00be 8C25      		eor r24,r12
 393 00c0 8083      		st Z,r24
 295:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 296:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 297:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 298:tmk_core/common/keyboard.c **** #endif
 299:tmk_core/common/keyboard.c ****                         // process a key per task call
 300:tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 394               		.loc 1 300 25 is_stmt 1 view .LVU68
 395               	.LVL25:
 396               	.L16:
 397               		.loc 1 300 25 is_stmt 0 view .LVU69
 398               	.LBE8:
 399               	.LBE10:
 301:tmk_core/common/keyboard.c ****                     }
 302:tmk_core/common/keyboard.c ****                 }
 303:tmk_core/common/keyboard.c ****             }
 304:tmk_core/common/keyboard.c ****         }
 305:tmk_core/common/keyboard.c ****     }
 306:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 307:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 308:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 309:tmk_core/common/keyboard.c ****     if (!keys_processed)
 310:tmk_core/common/keyboard.c **** #endif
 311:tmk_core/common/keyboard.c ****     action_exec(TICK);
 312:tmk_core/common/keyboard.c **** 
 313:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 314:tmk_core/common/keyboard.c **** 
 315:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 316:tmk_core/common/keyboard.c ****     qwiic_task();
 317:tmk_core/common/keyboard.c **** #endif
 318:tmk_core/common/keyboard.c **** 
 319:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 320:tmk_core/common/keyboard.c ****     oled_task();
 321:tmk_core/common/keyboard.c **** #ifndef OLED_DISABLE_TIMEOUT
 322:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 323:tmk_core/common/keyboard.c ****     if (ret)
 324:tmk_core/common/keyboard.c ****         oled_on();
 325:tmk_core/common/keyboard.c **** #endif
 326:tmk_core/common/keyboard.c **** #endif
 327:tmk_core/common/keyboard.c **** 
 328:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 329:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 330:tmk_core/common/keyboard.c ****     mousekey_task();
 400               		.loc 1 330 5 is_stmt 1 view .LVU70
 401 00c2 0E94 0000 		call mousekey_task
 402               	.LVL26:
 331:tmk_core/common/keyboard.c **** #endif
 332:tmk_core/common/keyboard.c **** 
 333:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 334:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 335:tmk_core/common/keyboard.c **** #endif
 336:tmk_core/common/keyboard.c **** 
 337:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 338:tmk_core/common/keyboard.c ****     serial_mouse_task();
 339:tmk_core/common/keyboard.c **** #endif
 340:tmk_core/common/keyboard.c **** 
 341:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 342:tmk_core/common/keyboard.c ****     adb_mouse_task();
 343:tmk_core/common/keyboard.c **** #endif
 344:tmk_core/common/keyboard.c **** 
 345:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 346:tmk_core/common/keyboard.c **** 	serial_link_update();
 347:tmk_core/common/keyboard.c **** #endif
 348:tmk_core/common/keyboard.c **** 
 349:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 350:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 351:tmk_core/common/keyboard.c **** #endif
 352:tmk_core/common/keyboard.c **** 
 353:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 354:tmk_core/common/keyboard.c ****     pointing_device_task();
 355:tmk_core/common/keyboard.c **** #endif
 356:tmk_core/common/keyboard.c **** 
 357:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 358:tmk_core/common/keyboard.c ****     midi_task();
 359:tmk_core/common/keyboard.c **** #endif
 360:tmk_core/common/keyboard.c **** 
 361:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 362:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) { velocikey_decelerate();  }
 363:tmk_core/common/keyboard.c **** #endif
 364:tmk_core/common/keyboard.c **** 
 365:tmk_core/common/keyboard.c ****     // update LED
 366:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 403               		.loc 1 366 5 view .LVU71
 404               		.loc 1 366 23 is_stmt 0 view .LVU72
 405 00c6 0E94 0000 		call host_keyboard_leds
 406               	.LVL27:
 407               		.loc 1 366 8 view .LVU73
 408 00ca 9091 0000 		lds r25,led_status.5635
 409 00ce 8917      		cp r24,r25
 410 00d0 01F0      		breq .L10
 367:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 411               		.loc 1 367 9 is_stmt 1 view .LVU74
 412               		.loc 1 367 22 is_stmt 0 view .LVU75
 413 00d2 0E94 0000 		call host_keyboard_leds
 414               	.LVL28:
 415               		.loc 1 367 20 view .LVU76
 416 00d6 8093 0000 		sts led_status.5635,r24
 368:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 417               		.loc 1 368 9 is_stmt 1 view .LVU77
 418               	.LVL29:
 419               	.LBB11:
 420               	.LBI11:
 369:tmk_core/common/keyboard.c ****     }
 370:tmk_core/common/keyboard.c **** }
 371:tmk_core/common/keyboard.c **** 
 372:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 373:tmk_core/common/keyboard.c ****  *
 374:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 375:tmk_core/common/keyboard.c ****  */
 376:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 421               		.loc 1 376 6 view .LVU78
 422               	.LBB12:
 377:tmk_core/common/keyboard.c **** {
 378:tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 423               		.loc 1 378 5 view .LVU79
 424               		.loc 1 378 54 view .LVU80
 425               		.loc 1 378 72 view .LVU81
 426               		.loc 1 378 85 view .LVU82
 379:tmk_core/common/keyboard.c ****     led_set(leds);
 427               		.loc 1 379 5 view .LVU83
 428               	/* epilogue start */
 429               	.LBE12:
 430               	.LBE11:
 370:tmk_core/common/keyboard.c **** 
 431               		.loc 1 370 1 is_stmt 0 view .LVU84
 432 00da 2A96      		adiw r28,10
 433 00dc 0FB6      		in __tmp_reg__,__SREG__
 434 00de F894      		cli
 435 00e0 DEBF      		out __SP_H__,r29
 436 00e2 0FBE      		out __SREG__,__tmp_reg__
 437 00e4 CDBF      		out __SP_L__,r28
 438 00e6 DF91      		pop r29
 439 00e8 CF91      		pop r28
 440 00ea 1F91      		pop r17
 441 00ec 0F91      		pop r16
 442 00ee FF90      		pop r15
 443 00f0 EF90      		pop r14
 444 00f2 DF90      		pop r13
 445 00f4 CF90      		pop r12
 446 00f6 BF90      		pop r11
 447               	.LBB14:
 448               	.LBB13:
 449               		.loc 1 379 5 view .LVU85
 450 00f8 0C94 0000 		jmp led_set
 451               	.LVL30:
 452               	.L14:
 453               		.loc 1 379 5 view .LVU86
 454 00fc 0196      		adiw r24,1
 455               	.LVL31:
 456               		.loc 1 379 5 view .LVU87
 457               	.LBE13:
 458               	.LBE14:
 459               	.LBB15:
 460               	.LBB9:
 286:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 461               		.loc 1 286 17 discriminator 2 view .LVU88
 462 00fe 8630      		cpi r24,6
 463 0100 9105      		cpc r25,__zero_reg__
 464 0102 01F0      		breq .+2
 465 0104 00C0      		rjmp .L17
 466               	.LVL32:
 467               	.L12:
 286:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 468               		.loc 1 286 17 discriminator 2 view .LVU89
 469 0106 0F5F      		subi r16,-1
 470 0108 1F4F      		sbci r17,-1
 471               	.LVL33:
 286:tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 472               		.loc 1 286 17 discriminator 2 view .LVU90
 473               	.LBE9:
 278:tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 474               		.loc 1 278 9 view .LVU91
 475 010a 0E30      		cpi r16,14
 476 010c 1105      		cpc r17,__zero_reg__
 477 010e 01F0      		breq .+2
 478 0110 00C0      		rjmp .L18
 479               	.LVL34:
 480               	.L11:
 278:tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 481               		.loc 1 278 9 view .LVU92
 482               	.LBE15:
 311:tmk_core/common/keyboard.c **** 
 483               		.loc 1 311 5 is_stmt 1 view .LVU93
 311:tmk_core/common/keyboard.c **** 
 484               		.loc 1 311 17 is_stmt 0 view .LVU94
 485 0112 8FEF      		ldi r24,lo8(-1)
 486 0114 8983      		std Y+1,r24
 487 0116 8A83      		std Y+2,r24
 488 0118 1B82      		std Y+3,__zero_reg__
 489 011a 0E94 0000 		call timer_read
 490               	.LVL35:
 491 011e 8160      		ori r24,1
 492 0120 782F      		mov r23,r24
 493 0122 9D83      		std Y+5,r25
 494 0124 8C83      		std Y+4,r24
 311:tmk_core/common/keyboard.c **** 
 495               		.loc 1 311 5 view .LVU95
 496 0126 4981      		ldd r20,Y+1
 497 0128 5A81      		ldd r21,Y+2
 498 012a 6B81      		ldd r22,Y+3
 499 012c 8D81      		ldd r24,Y+5
 500 012e 0E94 0000 		call action_exec
 501               	.LVL36:
 502 0132 00C0      		rjmp .L16
 503               	.L10:
 504               	/* epilogue start */
 370:tmk_core/common/keyboard.c **** 
 505               		.loc 1 370 1 view .LVU96
 506 0134 2A96      		adiw r28,10
 507 0136 0FB6      		in __tmp_reg__,__SREG__
 508 0138 F894      		cli
 509 013a DEBF      		out __SP_H__,r29
 510 013c 0FBE      		out __SREG__,__tmp_reg__
 511 013e CDBF      		out __SP_L__,r28
 512 0140 DF91      		pop r29
 513 0142 CF91      		pop r28
 514 0144 1F91      		pop r17
 515 0146 0F91      		pop r16
 516 0148 FF90      		pop r15
 517 014a EF90      		pop r14
 518 014c DF90      		pop r13
 519 014e CF90      		pop r12
 520 0150 BF90      		pop r11
 521 0152 0895      		ret
 522               		.cfi_endproc
 523               	.LFE112:
 525               		.section	.text.keyboard_set_leds,"ax",@progbits
 526               	.global	keyboard_set_leds
 528               	keyboard_set_leds:
 529               	.LVL37:
 530               	.LFB113:
 377:tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 531               		.loc 1 377 1 is_stmt 1 view -0
 532               		.cfi_startproc
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 0 */
 536               	.L__stack_usage = 0
 378:tmk_core/common/keyboard.c ****     led_set(leds);
 537               		.loc 1 378 5 view .LVU98
 378:tmk_core/common/keyboard.c ****     led_set(leds);
 538               		.loc 1 378 54 view .LVU99
 378:tmk_core/common/keyboard.c ****     led_set(leds);
 539               		.loc 1 378 72 view .LVU100
 378:tmk_core/common/keyboard.c ****     led_set(leds);
 540               		.loc 1 378 85 view .LVU101
 541               		.loc 1 379 5 view .LVU102
 542 0000 0C94 0000 		jmp led_set
 543               	.LVL38:
 544               		.loc 1 379 5 is_stmt 0 view .LVU103
 545               		.cfi_endproc
 546               	.LFE113:
 548               		.section	.bss.led_status.5635,"aw",@nobits
 551               	led_status.5635:
 552 0000 00        		.zero	1
 553               		.section	.bss.matrix_prev.5634,"aw",@nobits
 556               	matrix_prev.5634:
 557 0000 0000 0000 		.zero	14
 557      0000 0000 
 557      0000 0000 
 557      0000 
 558               		.text
 559               	.Letext0:
 560               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 561               		.file 3 "tmk_core/common/keyboard.h"
 562               		.file 4 "tmk_core/common/matrix.h"
 563               		.file 5 "tmk_core/common/action.h"
 564               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 565               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 566               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 567               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 568               		.file 10 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 569               		.file 11 "tmk_core/common/host.h"
 570               		.file 12 "tmk_core/common/debug.h"
 571               		.file 13 "quantum/keycode_config.h"
 572               		.file 14 "quantum/keymap.h"
 573               		.file 15 "tmk_core/common/timer.h"
 574               		.file 16 "tmk_core/common/command.h"
 575               		.file 17 "tmk_core/common/action_layer.h"
 576               		.file 18 "tmk_core/common/mousekey.h"
 577               		.file 19 "quantum/rgblight_types.h"
 578               		.file 20 "quantum/rgblight.h"
 579               		.file 21 "tmk_core/common/led.h"
 580               		.file 22 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:60     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:75     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:92     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:107    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:124    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:166    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:195    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:556    .bss.matrix_prev.5634:0000000000000000 matrix_prev.5634
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:551    .bss.led_status.5635:0000000000000000 led_status.5635
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc5y0B3x.s:528    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
rgblight_init
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
