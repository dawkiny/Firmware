   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB151:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c ****   #include <avr/eeprom.h>
  20:quantum/rgblight.c ****   #include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  23:quantum/rgblight.c ****   #include "hal.h"
  24:quantum/rgblight.c ****   #include "eeprom.h"
  25:quantum/rgblight.c ****   #include "eeprom_stm32.h"
  26:quantum/rgblight.c **** #endif
  27:quantum/rgblight.c **** #include "wait.h"
  28:quantum/rgblight.c **** #include "progmem.h"
  29:quantum/rgblight.c **** #include "timer.h"
  30:quantum/rgblight.c **** #include "rgblight.h"
  31:quantum/rgblight.c **** #include "color.h"
  32:quantum/rgblight.c **** #include "debug.h"
  33:quantum/rgblight.c **** #include "led_tables.h"
  34:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  35:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  36:quantum/rgblight.c ****   #include "velocikey.h"
  37:quantum/rgblight.c **** #endif
  38:quantum/rgblight.c **** 
  39:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  40:quantum/rgblight.c ****   /* for split keyboard */
  41:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODE         rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  42:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_HSVS         rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  43:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS     rgblight_status.change_flags |= (RGBLIGHT_STATUS_C
  44:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_CH
  45:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_ANIMATION_TICK          rgblight_status.change_flags |= RGBLIGHT_STATUS_AN
  46:quantum/rgblight.c **** #else
  47:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  48:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  49:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  50:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  51:quantum/rgblight.c ****   #define RGBLIGHT_SPLIT_ANIMATION_TICK
  52:quantum/rgblight.c **** #endif
  53:quantum/rgblight.c **** 
  54:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym)   RGBLIGHT_MODE_ ## sym,
  55:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  56:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym)    RGBLIGHT_MODE_ ## sym,
  57:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  58:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym)      RGBLIGHT_MODE_ ## sym,
  59:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  60:quantum/rgblight.c **** static uint8_t static_effect_table [] = {
  61:quantum/rgblight.c **** #include "rgblight_modes.h"
  62:quantum/rgblight.c **** };
  63:quantum/rgblight.c **** 
  64:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym)   RGBLIGHT_MODE_ ## sym,
  65:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)  RGBLIGHT_MODE_ ## sym,
  66:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym)    RGBLIGHT_MODE_ ## sym,
  67:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)   RGBLIGHT_MODE_ ## sym,
  68:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym)  RGBLIGHT_MODE_ ## msym,
  69:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_ ## msym,
  70:quantum/rgblight.c **** static uint8_t mode_base_table [] = {
  71:quantum/rgblight.c ****     0, // RGBLIGHT_MODE_zero
  72:quantum/rgblight.c **** #include "rgblight_modes.h"
  73:quantum/rgblight.c **** };
  74:quantum/rgblight.c **** 
  75:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) {
  76:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
  77:quantum/rgblight.c **** }
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  80:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  84:quantum/rgblight.c **** __attribute__ ((weak))
  85:quantum/rgblight.c **** const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  86:quantum/rgblight.c **** #endif
  87:quantum/rgblight.c **** 
  88:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  89:quantum/rgblight.c **** rgblight_status_t rgblight_status = { .timer_enabled = false };
  90:quantum/rgblight.c **** bool is_rgblight_initialized = false;
  91:quantum/rgblight.c **** 
  92:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  93:quantum/rgblight.c **** animation_status_t animation_status = {};
  94:quantum/rgblight.c **** #endif
  95:quantum/rgblight.c **** 
  96:quantum/rgblight.c **** #ifndef LED_ARRAY
  97:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  98:quantum/rgblight.c ****   #define LED_ARRAY led
  99:quantum/rgblight.c **** #endif
 100:quantum/rgblight.c **** 
 101:quantum/rgblight.c **** 
 102:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 103:quantum/rgblight.c **** static uint8_t clipping_num_leds = RGBLED_NUM;
 104:quantum/rgblight.c **** 
 105:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 106:quantum/rgblight.c ****   clipping_start_pos = start_pos;
 107:quantum/rgblight.c ****   clipping_num_leds = num_leds;
 108:quantum/rgblight.c **** }
 109:quantum/rgblight.c **** 
 110:quantum/rgblight.c **** 
 111:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 112:quantum/rgblight.c ****   HSV hsv = { hue, sat, val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val };
 113:quantum/rgblight.c ****   RGB rgb = hsv_to_rgb(hsv);
 114:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
 115:quantum/rgblight.c **** }
 116:quantum/rgblight.c **** 
 117:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 118:quantum/rgblight.c ****   (*led1).r = r;
 119:quantum/rgblight.c ****   (*led1).g = g;
 120:quantum/rgblight.c ****   (*led1).b = b;
 121:quantum/rgblight.c **** }
 122:quantum/rgblight.c **** 
 123:quantum/rgblight.c **** void rgblight_check_config(void) {
 124:quantum/rgblight.c ****   /* Add some out of bound checks for RGB light config */
 125:quantum/rgblight.c **** 
 126:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 127:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 128:quantum/rgblight.c ****   }
 129:quantum/rgblight.c ****   else if (rgblight_config.mode > RGBLIGHT_MODES) {
 130:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 131:quantum/rgblight.c ****   }
 132:quantum/rgblight.c **** 
 133:quantum/rgblight.c ****   if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 134:quantum/rgblight.c ****     rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 135:quantum/rgblight.c ****   }
 136:quantum/rgblight.c **** }
 137:quantum/rgblight.c **** 
 138:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 139:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 140:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 141:quantum/rgblight.c ****   #else
 142:quantum/rgblight.c ****     return 0;
 143:quantum/rgblight.c ****   #endif
 144:quantum/rgblight.c **** }
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 147:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 148:quantum/rgblight.c ****     rgblight_check_config();
 149:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 150:quantum/rgblight.c ****   #endif
 151:quantum/rgblight.c **** }
 152:quantum/rgblight.c **** 
 153:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 154:quantum/rgblight.c ****   //dprintf("eeconfig_update_rgblight_default\n");
 155:quantum/rgblight.c ****   rgblight_config.enable = 1;
 156:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 157:quantum/rgblight.c ****   rgblight_config.hue = 0;
 158:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 159:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 160:quantum/rgblight.c ****   rgblight_config.speed = 0;
 161:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 162:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 166:quantum/rgblight.c ****   dprintf("rgblight_config eprom\n");
 167:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 168:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 169:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 170:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 171:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 172:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 173:quantum/rgblight.c **** }
 174:quantum/rgblight.c **** 
 175:quantum/rgblight.c **** void rgblight_init(void) {
 176:quantum/rgblight.c ****   /* if already initialized, don't do it again.
 177:quantum/rgblight.c ****      If you must do it again, extern this and set to false, first.
 178:quantum/rgblight.c ****      This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 179:quantum/rgblight.c ****   if (is_rgblight_initialized) { return; }
 180:quantum/rgblight.c **** 
 181:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 182:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 183:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 184:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 185:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 186:quantum/rgblight.c ****     eeconfig_init();
 187:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 188:quantum/rgblight.c ****   }
 189:quantum/rgblight.c ****   rgblight_config.raw = eeconfig_read_rgblight();
 190:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 191:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 192:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 193:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 194:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 195:quantum/rgblight.c ****   }
 196:quantum/rgblight.c ****   rgblight_check_config();
 197:quantum/rgblight.c **** 
 198:quantum/rgblight.c ****   eeconfig_debug_rgblight(); // display current eeprom values
 199:quantum/rgblight.c **** 
 200:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 201:quantum/rgblight.c ****     rgblight_timer_init(); // setup the timer
 202:quantum/rgblight.c **** #endif
 203:quantum/rgblight.c **** 
 204:quantum/rgblight.c ****   if (rgblight_config.enable) {
 205:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 206:quantum/rgblight.c ****   }
 207:quantum/rgblight.c **** 
 208:quantum/rgblight.c ****   is_rgblight_initialized = true;
 209:quantum/rgblight.c **** 
 210:quantum/rgblight.c **** }
 211:quantum/rgblight.c **** 
 212:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) {
 213:quantum/rgblight.c ****   return rgblight_config.raw;
 214:quantum/rgblight.c **** }
 215:quantum/rgblight.c **** 
 216:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 217:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 218:quantum/rgblight.c ****   rgblight_config.raw = dword;
 219:quantum/rgblight.c ****   if (rgblight_config.enable)
 220:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 221:quantum/rgblight.c ****   else {
 222:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 223:quantum/rgblight.c ****       rgblight_timer_disable();
 224:quantum/rgblight.c **** #endif
 225:quantum/rgblight.c ****       rgblight_set();
 226:quantum/rgblight.c ****   }
 227:quantum/rgblight.c **** }
 228:quantum/rgblight.c **** 
 229:quantum/rgblight.c **** void rgblight_increase(void) {
 230:quantum/rgblight.c ****   uint8_t mode = 0;
 231:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 232:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 233:quantum/rgblight.c ****   }
 234:quantum/rgblight.c ****   rgblight_mode(mode);
 235:quantum/rgblight.c **** }
 236:quantum/rgblight.c **** void rgblight_decrease(void) {
 237:quantum/rgblight.c ****   uint8_t mode = 0;
 238:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 239:quantum/rgblight.c ****   if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 240:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 241:quantum/rgblight.c ****   }
 242:quantum/rgblight.c ****   rgblight_mode(mode);
 243:quantum/rgblight.c **** }
 244:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 245:quantum/rgblight.c ****   uint8_t mode = 0;
 246:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 247:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 248:quantum/rgblight.c ****     mode = 1;
 249:quantum/rgblight.c ****   }
 250:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 251:quantum/rgblight.c **** }
 252:quantum/rgblight.c **** void rgblight_step_noeeprom(void) {
 253:quantum/rgblight.c ****   rgblight_step_helper(false);
 254:quantum/rgblight.c **** }
 255:quantum/rgblight.c **** void rgblight_step(void) {
 256:quantum/rgblight.c ****   rgblight_step_helper(true);
 257:quantum/rgblight.c **** }
 258:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 259:quantum/rgblight.c ****   uint8_t mode = 0;
 260:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 261:quantum/rgblight.c ****   if (mode < 1) {
 262:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 263:quantum/rgblight.c ****   }
 264:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 265:quantum/rgblight.c **** }
 266:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) {
 267:quantum/rgblight.c ****   rgblight_step_reverse_helper(false);
 268:quantum/rgblight.c **** }
 269:quantum/rgblight.c **** void rgblight_step_reverse(void) {
 270:quantum/rgblight.c ****   rgblight_step_reverse_helper(true);
 271:quantum/rgblight.c **** }
 272:quantum/rgblight.c **** 
 273:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 274:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 275:quantum/rgblight.c ****     return false;
 276:quantum/rgblight.c ****   }
 277:quantum/rgblight.c **** 
 278:quantum/rgblight.c ****   return rgblight_config.mode;
 279:quantum/rgblight.c **** }
 280:quantum/rgblight.c **** 
 281:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 282:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 283:quantum/rgblight.c ****     return;
 284:quantum/rgblight.c ****   }
 285:quantum/rgblight.c ****   if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 286:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 287:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 288:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 289:quantum/rgblight.c ****   } else {
 290:quantum/rgblight.c ****     rgblight_config.mode = mode;
 291:quantum/rgblight.c ****   }
 292:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 293:quantum/rgblight.c ****   if (write_to_eeprom) {
 294:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 295:quantum/rgblight.c ****     xprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 296:quantum/rgblight.c ****   } else {
 297:quantum/rgblight.c ****     xprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 298:quantum/rgblight.c ****   }
 299:quantum/rgblight.c ****   if( is_static_effect(rgblight_config.mode) ) {
 300:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 301:quantum/rgblight.c ****       rgblight_timer_disable();
 302:quantum/rgblight.c **** #endif
 303:quantum/rgblight.c ****   } else {
 304:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 305:quantum/rgblight.c ****       rgblight_timer_enable();
 306:quantum/rgblight.c **** #endif
 307:quantum/rgblight.c ****   }
 308:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 309:quantum/rgblight.c ****     animation_status.restart = true;
 310:quantum/rgblight.c **** #endif
 311:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 312:quantum/rgblight.c **** }
 313:quantum/rgblight.c **** 
 314:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) {
 315:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, true);
 316:quantum/rgblight.c **** }
 317:quantum/rgblight.c **** 
 318:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) {
 319:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, false);
 320:quantum/rgblight.c **** }
 321:quantum/rgblight.c **** 
 322:quantum/rgblight.c **** 
 323:quantum/rgblight.c **** void rgblight_toggle(void) {
 324:quantum/rgblight.c ****   xprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 325:quantum/rgblight.c ****   if (rgblight_config.enable) {
 326:quantum/rgblight.c ****     rgblight_disable();
 327:quantum/rgblight.c ****   }
 328:quantum/rgblight.c ****   else {
 329:quantum/rgblight.c ****     rgblight_enable();
 330:quantum/rgblight.c ****   }
 331:quantum/rgblight.c **** }
 332:quantum/rgblight.c **** 
 333:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 334:quantum/rgblight.c ****   xprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 335:quantum/rgblight.c ****   if (rgblight_config.enable) {
 336:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 337:quantum/rgblight.c ****   }
 338:quantum/rgblight.c ****   else {
 339:quantum/rgblight.c ****     rgblight_enable_noeeprom();
 340:quantum/rgblight.c ****   }
 341:quantum/rgblight.c **** }
 342:quantum/rgblight.c **** 
 343:quantum/rgblight.c **** void rgblight_enable(void) {
 344:quantum/rgblight.c ****   rgblight_config.enable = 1;
 345:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 346:quantum/rgblight.c ****   //eeconfig_update_rgblight(rgblight_config.raw);
 347:quantum/rgblight.c ****   xprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 348:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 349:quantum/rgblight.c **** }
 350:quantum/rgblight.c **** 
 351:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 352:quantum/rgblight.c ****   rgblight_config.enable = 1;
 353:quantum/rgblight.c ****   xprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 354:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 355:quantum/rgblight.c **** }
 356:quantum/rgblight.c **** 
 357:quantum/rgblight.c **** void rgblight_disable(void) {
 358:quantum/rgblight.c ****   rgblight_config.enable = 0;
 359:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 360:quantum/rgblight.c ****   xprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 361:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 362:quantum/rgblight.c ****       rgblight_timer_disable();
 363:quantum/rgblight.c **** #endif
 364:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 365:quantum/rgblight.c ****   wait_ms(50);
 366:quantum/rgblight.c ****   rgblight_set();
 367:quantum/rgblight.c **** }
 368:quantum/rgblight.c **** 
 369:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 370:quantum/rgblight.c ****   rgblight_config.enable = 0;
 371:quantum/rgblight.c ****   xprintf("rgblight disable [noEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 372:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 373:quantum/rgblight.c ****     rgblight_timer_disable();
 374:quantum/rgblight.c **** #endif
 375:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 376:quantum/rgblight.c ****   wait_ms(50);
 377:quantum/rgblight.c ****   rgblight_set();
 378:quantum/rgblight.c **** }
 379:quantum/rgblight.c **** 
 380:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 381:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 382:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 383:quantum/rgblight.c **** }
 384:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) {
 385:quantum/rgblight.c ****   rgblight_increase_hue_helper(false);
 386:quantum/rgblight.c **** }
 387:quantum/rgblight.c **** void rgblight_increase_hue(void) {
 388:quantum/rgblight.c ****   rgblight_increase_hue_helper(true);
 389:quantum/rgblight.c **** }
 390:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 391:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 392:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 393:quantum/rgblight.c **** }
 394:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) {
 395:quantum/rgblight.c ****   rgblight_decrease_hue_helper(false);
 396:quantum/rgblight.c **** }
 397:quantum/rgblight.c **** void rgblight_decrease_hue(void) {
 398:quantum/rgblight.c ****   rgblight_decrease_hue_helper(true);
 399:quantum/rgblight.c **** }
 400:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 401:quantum/rgblight.c ****   uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 402:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 403:quantum/rgblight.c **** }
 404:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) {
 405:quantum/rgblight.c ****   rgblight_increase_sat_helper(false);
 406:quantum/rgblight.c **** }
 407:quantum/rgblight.c **** void rgblight_increase_sat(void) {
 408:quantum/rgblight.c ****   rgblight_increase_sat_helper(true);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 411:quantum/rgblight.c ****   uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 412:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 413:quantum/rgblight.c **** }
 414:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) {
 415:quantum/rgblight.c ****   rgblight_decrease_sat_helper(false);
 416:quantum/rgblight.c **** }
 417:quantum/rgblight.c **** void rgblight_decrease_sat(void) {
 418:quantum/rgblight.c ****   rgblight_decrease_sat_helper(true);
 419:quantum/rgblight.c **** }
 420:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 421:quantum/rgblight.c ****   uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 422:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 423:quantum/rgblight.c **** }
 424:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) {
 425:quantum/rgblight.c ****   rgblight_increase_val_helper(false);
 426:quantum/rgblight.c **** }
 427:quantum/rgblight.c **** void rgblight_increase_val(void) {
 428:quantum/rgblight.c ****   rgblight_increase_val_helper(true);
 429:quantum/rgblight.c **** }
 430:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 431:quantum/rgblight.c ****   uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 432:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 433:quantum/rgblight.c **** }
 434:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) {
 435:quantum/rgblight.c ****   rgblight_decrease_val_helper(false);
 436:quantum/rgblight.c **** }
 437:quantum/rgblight.c **** void rgblight_decrease_val(void) {
 438:quantum/rgblight.c ****   rgblight_decrease_val_helper(true);
 439:quantum/rgblight.c **** }
 440:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 441:quantum/rgblight.c ****     if (rgblight_config.speed < 3)
 442:quantum/rgblight.c ****         rgblight_config.speed++;
 443:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 444:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 445:quantum/rgblight.c **** }
 446:quantum/rgblight.c **** 
 447:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 448:quantum/rgblight.c ****     if (rgblight_config.speed > 0)
 449:quantum/rgblight.c ****         rgblight_config.speed--;
 450:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 451:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 452:quantum/rgblight.c **** }
 453:quantum/rgblight.c **** 
 454:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 455:quantum/rgblight.c ****   if (rgblight_config.enable) {
 456:quantum/rgblight.c ****     LED_TYPE tmp_led;
 457:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 458:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 459:quantum/rgblight.c ****     rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 460:quantum/rgblight.c ****   }
 461:quantum/rgblight.c **** }
 462:quantum/rgblight.c **** 
 463:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 464:quantum/rgblight.c ****   if (rgblight_config.enable) {
 465:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 466:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 467:quantum/rgblight.c ****       // same static color
 468:quantum/rgblight.c ****       LED_TYPE tmp_led;
 469:quantum/rgblight.c ****       sethsv(hue, sat, val, &tmp_led);
 470:quantum/rgblight.c ****       rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 471:quantum/rgblight.c ****     } else {
 472:quantum/rgblight.c ****       // all LEDs in same color
 473:quantum/rgblight.c ****       if ( 1 == 0 ) { //dummy
 474:quantum/rgblight.c ****       }
 475:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 476:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING ) {
 477:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 478:quantum/rgblight.c ****         val = rgblight_config.val;
 479:quantum/rgblight.c ****       }
 480:quantum/rgblight.c **** #endif
 481:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 482:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 483:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 484:quantum/rgblight.c ****         hue = rgblight_config.hue;
 485:quantum/rgblight.c ****       }
 486:quantum/rgblight.c **** #endif
 487:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 488:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 489:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 490:quantum/rgblight.c ****         hue = rgblight_config.hue;
 491:quantum/rgblight.c ****       }
 492:quantum/rgblight.c **** #endif
 493:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 494:quantum/rgblight.c ****       else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 495:quantum/rgblight.c ****         // static gradient
 496:quantum/rgblight.c ****         uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 497:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 498:quantum/rgblight.c **** #ifdef __AVR__
 499:quantum/rgblight.c ****         // probably due to how pgm_read_word is defined for ARM, but the ARM compiler really hates 
 500:quantum/rgblight.c ****         uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 501:quantum/rgblight.c **** #else
 502:quantum/rgblight.c ****         uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 503:quantum/rgblight.c **** #endif
 504:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 505:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 506:quantum/rgblight.c ****           if (direction) {
 507:quantum/rgblight.c ****             _hue = hue + _hue;
 508:quantum/rgblight.c ****           } else {
 509:quantum/rgblight.c ****             _hue = hue - _hue;
 510:quantum/rgblight.c ****           }
 511:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 512:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i]);
 513:quantum/rgblight.c ****         }
 514:quantum/rgblight.c ****         rgblight_set();
 515:quantum/rgblight.c ****       }
 516:quantum/rgblight.c **** #endif
 517:quantum/rgblight.c ****     }
 518:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 519:quantum/rgblight.c ****     if( rgblight_config.hue != hue ||
 520:quantum/rgblight.c ****         rgblight_config.sat != sat ||
 521:quantum/rgblight.c ****         rgblight_config.val != val ) {
 522:quantum/rgblight.c ****         RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 523:quantum/rgblight.c ****     }
 524:quantum/rgblight.c **** #endif
 525:quantum/rgblight.c ****     rgblight_config.hue = hue;
 526:quantum/rgblight.c ****     rgblight_config.sat = sat;
 527:quantum/rgblight.c ****     rgblight_config.val = val;
 528:quantum/rgblight.c ****     if (write_to_eeprom) {
 529:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 530:quantum/rgblight.c ****       xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rg
 531:quantum/rgblight.c ****     } else {
 532:quantum/rgblight.c ****       xprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, 
 533:quantum/rgblight.c ****     }
 534:quantum/rgblight.c ****   }
 535:quantum/rgblight.c **** }
 536:quantum/rgblight.c **** 
 537:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) {
 538:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, true);
 539:quantum/rgblight.c **** }
 540:quantum/rgblight.c **** 
 541:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) {
 542:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, false);
 543:quantum/rgblight.c **** }
 544:quantum/rgblight.c **** 
 545:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) {
 546:quantum/rgblight.c ****   return rgblight_config.hue;
 547:quantum/rgblight.c **** }
 548:quantum/rgblight.c **** 
 549:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) {
 550:quantum/rgblight.c ****   return rgblight_config.sat;
 551:quantum/rgblight.c **** }
 552:quantum/rgblight.c **** 
 553:quantum/rgblight.c **** uint8_t rgblight_get_val(void) {
 554:quantum/rgblight.c ****   return rgblight_config.val;
 555:quantum/rgblight.c **** }
 556:quantum/rgblight.c **** 
 557:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 558:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 559:quantum/rgblight.c **** 
 560:quantum/rgblight.c ****   for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 561:quantum/rgblight.c ****     led[i].r = r;
 562:quantum/rgblight.c ****     led[i].g = g;
 563:quantum/rgblight.c ****     led[i].b = b;
 564:quantum/rgblight.c ****   }
 565:quantum/rgblight.c ****   rgblight_set();
 566:quantum/rgblight.c **** }
 567:quantum/rgblight.c **** 
 568:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 569:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 570:quantum/rgblight.c **** 
 571:quantum/rgblight.c ****   led[index].r = r;
 572:quantum/rgblight.c ****   led[index].g = g;
 573:quantum/rgblight.c ****   led[index].b = b;
 574:quantum/rgblight.c ****   rgblight_set();
 575:quantum/rgblight.c **** }
 576:quantum/rgblight.c **** 
 577:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 578:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c ****   LED_TYPE tmp_led;
 581:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 582:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 583:quantum/rgblight.c **** }
 584:quantum/rgblight.c **** 
 585:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 586:quantum/rgblight.c ****   || defined(RGBLIGHT_EFFECT_SNAKE) || defined(RGBLIGHT_EFFECT_KNIGHT)
 587:quantum/rgblight.c **** 
 588:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t* default_interval_address, uint8_t velocikey_min, ui
 589:quantum/rgblight.c ****   return
 590:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 591:quantum/rgblight.c ****     velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 592:quantum/rgblight.c **** #endif
 593:quantum/rgblight.c ****     pgm_read_byte(default_interval_address);
 594:quantum/rgblight.c **** }
 595:quantum/rgblight.c **** 
 596:quantum/rgblight.c **** #endif
 597:quantum/rgblight.c **** 
 598:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 599:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 600:quantum/rgblight.c **** 
 601:quantum/rgblight.c ****   for (uint8_t i = start; i < end; i++) {
 602:quantum/rgblight.c ****     led[i].r = r;
 603:quantum/rgblight.c ****     led[i].g = g;
 604:quantum/rgblight.c ****     led[i].b = b;
 605:quantum/rgblight.c ****   }
 606:quantum/rgblight.c ****   rgblight_set();
 607:quantum/rgblight.c ****   wait_ms(1);
 608:quantum/rgblight.c **** }
 609:quantum/rgblight.c **** 
 610:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 611:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 612:quantum/rgblight.c **** 
 613:quantum/rgblight.c ****   LED_TYPE tmp_led;
 614:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 615:quantum/rgblight.c ****   rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 616:quantum/rgblight.c **** }
 617:quantum/rgblight.c **** 
 618:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) {
 619:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 620:quantum/rgblight.c **** }
 621:quantum/rgblight.c **** 
 622:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) {
 623:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 624:quantum/rgblight.c **** }
 625:quantum/rgblight.c **** 
 626:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) {
 627:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 628:quantum/rgblight.c **** }
 629:quantum/rgblight.c **** 
 630:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) {
 631:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 632:quantum/rgblight.c **** }
 633:quantum/rgblight.c **** 
 634:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 635:quantum/rgblight.c **** void rgblight_set(void) {
 636:quantum/rgblight.c ****   LED_TYPE *start_led = led + clipping_start_pos;
 637:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 638:quantum/rgblight.c ****   if (rgblight_config.enable) {
 639:quantum/rgblight.c ****     #ifdef RGBLIGHT_LED_MAP
 640:quantum/rgblight.c ****       LED_TYPE led0[RGBLED_NUM];
 641:quantum/rgblight.c ****       for(uint8_t i = 0; i < RGBLED_NUM; i++) {
 642:quantum/rgblight.c ****           led0[i] = led[pgm_read_byte(&led_map[i])];
 643:quantum/rgblight.c ****       }
 644:quantum/rgblight.c ****       start_led = led0 + clipping_start_pos;
 645:quantum/rgblight.c ****     #endif
 646:quantum/rgblight.c ****     #ifdef RGBW
 647:quantum/rgblight.c ****       ws2812_setleds_rgbw(start_led, num_leds);
 648:quantum/rgblight.c ****     #else
 649:quantum/rgblight.c ****       ws2812_setleds(start_led, num_leds);
 650:quantum/rgblight.c ****     #endif
 651:quantum/rgblight.c ****   } else {
 652:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 653:quantum/rgblight.c ****       led[i].r = 0;
 654:quantum/rgblight.c ****       led[i].g = 0;
 655:quantum/rgblight.c ****       led[i].b = 0;
 656:quantum/rgblight.c ****     }
 657:quantum/rgblight.c ****     #ifdef RGBW
 658:quantum/rgblight.c ****       ws2812_setleds_rgbw(start_led, num_leds);
 659:quantum/rgblight.c ****     #else
 660:quantum/rgblight.c ****       ws2812_setleds(start_led, num_leds);
 661:quantum/rgblight.c ****     #endif
 662:quantum/rgblight.c ****   }
 663:quantum/rgblight.c **** }
 664:quantum/rgblight.c **** #endif
 665:quantum/rgblight.c **** 
 666:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 667:quantum/rgblight.c **** /* for split keyboard master side */
 668:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) {
 669:quantum/rgblight.c ****     return rgblight_status.change_flags;
 670:quantum/rgblight.c **** }
 671:quantum/rgblight.c **** 
 672:quantum/rgblight.c **** void rgblight_clear_change_flags(void) {
 673:quantum/rgblight.c ****     rgblight_status.change_flags = 0;
 674:quantum/rgblight.c **** }
 675:quantum/rgblight.c **** 
 676:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 677:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 678:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 679:quantum/rgblight.c **** }
 680:quantum/rgblight.c **** 
 681:quantum/rgblight.c **** /* for split keyboard slave side */
 682:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 683:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 684:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 685:quantum/rgblight.c ****             rgblight_config.enable = 1; // == rgblight_enable_noeeprom();
 686:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 687:quantum/rgblight.c ****         } else {
 688:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 689:quantum/rgblight.c ****         }
 690:quantum/rgblight.c ****     }
 691:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 692:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 693:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 694:quantum/rgblight.c ****     }
 695:quantum/rgblight.c ****   #ifdef RGBLIGHT_USE_TIMER
 696:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 697:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 698:quantum/rgblight.c ****             rgblight_timer_enable();
 699:quantum/rgblight.c ****         } else {
 700:quantum/rgblight.c ****             rgblight_timer_disable();
 701:quantum/rgblight.c ****         }
 702:quantum/rgblight.c ****     }
 703:quantum/rgblight.c ****     #ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 704:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 705:quantum/rgblight.c ****         animation_status.restart = true;
 706:quantum/rgblight.c ****     }
 707:quantum/rgblight.c ****     #endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 708:quantum/rgblight.c ****   #endif /* RGBLIGHT_USE_TIMER */
 709:quantum/rgblight.c **** }
 710:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 711:quantum/rgblight.c **** 
 712:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 713:quantum/rgblight.c **** 
 714:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 715:quantum/rgblight.c **** 
 716:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 717:quantum/rgblight.c **** void rgblight_timer_init(void) {
 718:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 719:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 720:quantum/rgblight.c ****   // if (rgblight_timer_is_init) {
 721:quantum/rgblight.c ****   //   return;
 722:quantum/rgblight.c ****   // }
 723:quantum/rgblight.c ****   // rgblight_timer_is_init = 1;
 724:quantum/rgblight.c ****   // /* Timer 3 setup */
 725:quantum/rgblight.c ****   // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 726:quantum/rgblight.c ****   //       | _BV(CS30); // Clock selelct: clk/1
 727:quantum/rgblight.c ****   // /* Set TOP value */
 728:quantum/rgblight.c ****   // uint8_t sreg = SREG;
 729:quantum/rgblight.c ****   // cli();
 730:quantum/rgblight.c ****   // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 731:quantum/rgblight.c ****   // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 732:quantum/rgblight.c ****   // SREG = sreg;
 733:quantum/rgblight.c **** 
 734:quantum/rgblight.c ****   rgblight_status.timer_enabled = false;
 735:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 736:quantum/rgblight.c **** }
 737:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 738:quantum/rgblight.c ****   if( !is_static_effect(rgblight_config.mode) ) {
 739:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 740:quantum/rgblight.c ****   }
 741:quantum/rgblight.c ****   animation_status.last_timer = timer_read();
 742:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 743:quantum/rgblight.c ****   dprintf("rgblight timer enabled.\n");
 744:quantum/rgblight.c **** }
 745:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 746:quantum/rgblight.c ****   rgblight_status.timer_enabled = false;
 747:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 748:quantum/rgblight.c ****   dprintf("rgblight timer disable.\n");
 749:quantum/rgblight.c **** }
 750:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 751:quantum/rgblight.c ****   dprintf("rgblight timer toggle.\n");
 752:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 753:quantum/rgblight.c ****       rgblight_timer_disable();
 754:quantum/rgblight.c ****   } else {
 755:quantum/rgblight.c ****       rgblight_timer_enable();
 756:quantum/rgblight.c ****   }
 757:quantum/rgblight.c **** }
 758:quantum/rgblight.c **** 
 759:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 760:quantum/rgblight.c ****   rgblight_enable();
 761:quantum/rgblight.c ****   rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 762:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 763:quantum/rgblight.c **** }
 764:quantum/rgblight.c **** 
 765:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 765 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 766:quantum/rgblight.c ****     // do nothing
 767:quantum/rgblight.c ****     /********
 768:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 769:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 770:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 771:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 772:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 773:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 774:quantum/rgblight.c ****     **/
 775:quantum/rgblight.c **** }
  22               		.loc 1 775 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE151:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB79:
 105:quantum/rgblight.c ****   clipping_start_pos = start_pos;
  34               		.loc 1 105 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 106:quantum/rgblight.c ****   clipping_num_leds = num_leds;
  40               		.loc 1 106 3 view .LVU3
 106:quantum/rgblight.c ****   clipping_num_leds = num_leds;
  41               		.loc 1 106 22 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 107:quantum/rgblight.c **** }
  43               		.loc 1 107 3 is_stmt 1 view .LVU5
 107:quantum/rgblight.c **** }
  44               		.loc 1 107 21 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 108:quantum/rgblight.c **** 
  47               		.loc 1 108 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE79:
  52               		.section	.text.sethsv,"ax",@progbits
  53               	.global	sethsv
  55               	sethsv:
  56               	.LVL2:
  57               	.LFB80:
 111:quantum/rgblight.c ****   HSV hsv = { hue, sat, val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val };
  58               		.loc 1 111 68 is_stmt 1 view -0
  59               		.cfi_startproc
 111:quantum/rgblight.c ****   HSV hsv = { hue, sat, val > RGBLIGHT_LIMIT_VAL ? RGBLIGHT_LIMIT_VAL : val };
  60               		.loc 1 111 68 is_stmt 0 view .LVU9
  61 0000 CF93      		push r28
  62               	.LCFI0:
  63               		.cfi_def_cfa_offset 3
  64               		.cfi_offset 28, -2
  65 0002 DF93      		push r29
  66               	.LCFI1:
  67               		.cfi_def_cfa_offset 4
  68               		.cfi_offset 29, -3
  69               	/* prologue: function */
  70               	/* frame size = 0 */
  71               	/* stack size = 2 */
  72               	.L__stack_usage = 2
  73 0004 762F      		mov r23,r22
  74 0006 E901      		movw r28,r18
 112:quantum/rgblight.c ****   RGB rgb = hsv_to_rgb(hsv);
  75               		.loc 1 112 3 is_stmt 1 view .LVU10
 113:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
  76               		.loc 1 113 3 view .LVU11
 113:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
  77               		.loc 1 113 13 is_stmt 0 view .LVU12
  78 0008 682F      		mov r22,r24
  79               	.LVL3:
 113:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
  80               		.loc 1 113 13 view .LVU13
  81 000a 842F      		mov r24,r20
  82               	.LVL4:
 113:quantum/rgblight.c ****   setrgb(rgb.r, rgb.g, rgb.b, led1);
  83               		.loc 1 113 13 view .LVU14
  84 000c 0E94 0000 		call hsv_to_rgb
  85               	.LVL5:
 114:quantum/rgblight.c **** }
  86               		.loc 1 114 3 is_stmt 1 view .LVU15
  87               	.LBB20:
  88               	.LBI20:
 117:quantum/rgblight.c ****   (*led1).r = r;
  89               		.loc 1 117 6 view .LVU16
  90               	.LBB21:
 118:quantum/rgblight.c ****   (*led1).g = g;
  91               		.loc 1 118 3 view .LVU17
 119:quantum/rgblight.c ****   (*led1).b = b;
  92               		.loc 1 119 3 view .LVU18
 119:quantum/rgblight.c ****   (*led1).b = b;
  93               		.loc 1 119 13 is_stmt 0 view .LVU19
  94 0010 362F      		mov r19,r22
 119:quantum/rgblight.c ****   (*led1).b = b;
  95               		.loc 1 119 13 view .LVU20
  96 0012 272F      		mov r18,r23
  97 0014 3983      		std Y+1,r19
  98 0016 2883      		st Y,r18
 120:quantum/rgblight.c **** }
  99               		.loc 1 120 3 is_stmt 1 view .LVU21
 120:quantum/rgblight.c **** }
 100               		.loc 1 120 13 is_stmt 0 view .LVU22
 101 0018 8A83      		std Y+2,r24
 102               	.LVL6:
 103               	/* epilogue start */
 120:quantum/rgblight.c **** }
 104               		.loc 1 120 13 view .LVU23
 105               	.LBE21:
 106               	.LBE20:
 115:quantum/rgblight.c **** 
 107               		.loc 1 115 1 view .LVU24
 108 001a DF91      		pop r29
 109 001c CF91      		pop r28
 110               	.LVL7:
 115:quantum/rgblight.c **** 
 111               		.loc 1 115 1 view .LVU25
 112 001e 0895      		ret
 113               		.cfi_endproc
 114               	.LFE80:
 116               		.section	.text.setrgb,"ax",@progbits
 117               	.global	setrgb
 119               	setrgb:
 120               	.LVL8:
 121               	.LFB81:
 117:quantum/rgblight.c ****   (*led1).r = r;
 122               		.loc 1 117 62 is_stmt 1 view -0
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 117:quantum/rgblight.c ****   (*led1).r = r;
 128               		.loc 1 117 62 is_stmt 0 view .LVU27
 129 0000 F901      		movw r30,r18
 118:quantum/rgblight.c ****   (*led1).g = g;
 130               		.loc 1 118 3 is_stmt 1 view .LVU28
 118:quantum/rgblight.c ****   (*led1).g = g;
 131               		.loc 1 118 13 is_stmt 0 view .LVU29
 132 0002 8183      		std Z+1,r24
 119:quantum/rgblight.c ****   (*led1).b = b;
 133               		.loc 1 119 3 is_stmt 1 view .LVU30
 119:quantum/rgblight.c ****   (*led1).b = b;
 134               		.loc 1 119 13 is_stmt 0 view .LVU31
 135 0004 6083      		st Z,r22
 120:quantum/rgblight.c **** }
 136               		.loc 1 120 3 is_stmt 1 view .LVU32
 120:quantum/rgblight.c **** }
 137               		.loc 1 120 13 is_stmt 0 view .LVU33
 138 0006 4283      		std Z+2,r20
 139               	/* epilogue start */
 121:quantum/rgblight.c **** 
 140               		.loc 1 121 1 view .LVU34
 141 0008 0895      		ret
 142               		.cfi_endproc
 143               	.LFE81:
 145               		.section	.text.rgblight_check_config,"ax",@progbits
 146               	.global	rgblight_check_config
 148               	rgblight_check_config:
 149               	.LFB82:
 123:quantum/rgblight.c ****   /* Add some out of bound checks for RGB light config */
 150               		.loc 1 123 34 is_stmt 1 view -0
 151               		.cfi_startproc
 152               	/* prologue: function */
 153               	/* frame size = 0 */
 154               	/* stack size = 0 */
 155               	.L__stack_usage = 0
 126:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 156               		.loc 1 126 3 view .LVU36
 126:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 157               		.loc 1 126 28 is_stmt 0 view .LVU37
 158 0000 8091 0000 		lds r24,rgblight_config
 159 0004 982F      		mov r25,r24
 160 0006 9E7F      		andi r25,lo8(-2)
 126:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 161               		.loc 1 126 6 view .LVU38
 162 0008 01F4      		brne .L6
 127:quantum/rgblight.c ****   }
 163               		.loc 1 127 5 is_stmt 1 view .LVU39
 127:quantum/rgblight.c ****   }
 164               		.loc 1 127 26 is_stmt 0 view .LVU40
 165 000a 8170      		andi r24,lo8(1)
 166 000c 8260      		ori r24,lo8(2)
 167               	.L8:
 130:quantum/rgblight.c ****   }
 168               		.loc 1 130 26 view .LVU41
 169 000e 8093 0000 		sts rgblight_config,r24
 133:quantum/rgblight.c ****     rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 170               		.loc 1 133 3 is_stmt 1 view .LVU42
 171               	.L5:
 172               	/* epilogue start */
 136:quantum/rgblight.c **** 
 173               		.loc 1 136 1 is_stmt 0 view .LVU43
 174 0012 0895      		ret
 175               	.L6:
 129:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 176               		.loc 1 129 8 is_stmt 1 view .LVU44
 129:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 177               		.loc 1 129 11 is_stmt 0 view .LVU45
 178 0014 8A34      		cpi r24,lo8(74)
 179 0016 00F0      		brlo .L5
 130:quantum/rgblight.c ****   }
 180               		.loc 1 130 5 is_stmt 1 view .LVU46
 130:quantum/rgblight.c ****   }
 181               		.loc 1 130 26 is_stmt 0 view .LVU47
 182 0018 8170      		andi r24,lo8(1)
 183 001a 8864      		ori r24,lo8(72)
 184 001c 00C0      		rjmp .L8
 185               		.cfi_endproc
 186               	.LFE82:
 188               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 189               	.global	eeconfig_read_rgblight
 191               	eeconfig_read_rgblight:
 192               	.LFB83:
 138:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 193               		.loc 1 138 39 is_stmt 1 view -0
 194               		.cfi_startproc
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
 140:quantum/rgblight.c ****   #else
 199               		.loc 1 140 5 view .LVU49
 140:quantum/rgblight.c ****   #else
 200               		.loc 1 140 12 is_stmt 0 view .LVU50
 201 0000 88E0      		ldi r24,lo8(8)
 202 0002 90E0      		ldi r25,0
 203 0004 0C94 0000 		jmp eeprom_read_dword
 204               	.LVL9:
 205               		.cfi_endproc
 206               	.LFE83:
 208               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 209               	.global	eeconfig_update_rgblight
 211               	eeconfig_update_rgblight:
 212               	.LVL10:
 213               	.LFB84:
 146:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 214               		.loc 1 146 45 is_stmt 1 view -0
 215               		.cfi_startproc
 146:quantum/rgblight.c ****   #if defined(__AVR__) || defined(STM32_EEPROM_ENABLE) || defined(PROTOCOL_ARM_ATSAM) || defined(EE
 216               		.loc 1 146 45 is_stmt 0 view .LVU52
 217 0000 CF92      		push r12
 218               	.LCFI2:
 219               		.cfi_def_cfa_offset 3
 220               		.cfi_offset 12, -2
 221 0002 DF92      		push r13
 222               	.LCFI3:
 223               		.cfi_def_cfa_offset 4
 224               		.cfi_offset 13, -3
 225 0004 EF92      		push r14
 226               	.LCFI4:
 227               		.cfi_def_cfa_offset 5
 228               		.cfi_offset 14, -4
 229 0006 FF92      		push r15
 230               	.LCFI5:
 231               		.cfi_def_cfa_offset 6
 232               		.cfi_offset 15, -5
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 4 */
 236               	.L__stack_usage = 4
 237 0008 6B01      		movw r12,r22
 238 000a 7C01      		movw r14,r24
 148:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 239               		.loc 1 148 5 is_stmt 1 view .LVU53
 240 000c 0E94 0000 		call rgblight_check_config
 241               	.LVL11:
 149:quantum/rgblight.c ****   #endif
 242               		.loc 1 149 5 view .LVU54
 243 0010 B701      		movw r22,r14
 244 0012 A601      		movw r20,r12
 245 0014 88E0      		ldi r24,lo8(8)
 246 0016 90E0      		ldi r25,0
 247               	/* epilogue start */
 151:quantum/rgblight.c **** 
 248               		.loc 1 151 1 is_stmt 0 view .LVU55
 249 0018 FF90      		pop r15
 250 001a EF90      		pop r14
 251 001c DF90      		pop r13
 252 001e CF90      		pop r12
 149:quantum/rgblight.c ****   #endif
 253               		.loc 1 149 5 view .LVU56
 254 0020 0C94 0000 		jmp eeprom_update_dword
 255               	.LVL12:
 256               		.cfi_endproc
 257               	.LFE84:
 259               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 260               	.global	eeconfig_update_rgblight_default
 262               	eeconfig_update_rgblight_default:
 263               	.LFB85:
 153:quantum/rgblight.c ****   //dprintf("eeconfig_update_rgblight_default\n");
 264               		.loc 1 153 45 is_stmt 1 view -0
 265               		.cfi_startproc
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
 155:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 270               		.loc 1 155 3 view .LVU58
 156:quantum/rgblight.c ****   rgblight_config.hue = 0;
 271               		.loc 1 156 3 view .LVU59
 157:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 272               		.loc 1 157 3 view .LVU60
 158:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 273               		.loc 1 158 3 view .LVU61
 159:quantum/rgblight.c ****   rgblight_config.speed = 0;
 274               		.loc 1 159 3 view .LVU62
 160:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 275               		.loc 1 160 3 view .LVU63
 155:quantum/rgblight.c ****   rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 276               		.loc 1 155 26 is_stmt 0 view .LVU64
 277 0000 E0E0      		ldi r30,lo8(rgblight_config)
 278 0002 F0E0      		ldi r31,hi8(rgblight_config)
 279 0004 83E0      		ldi r24,lo8(3)
 280 0006 8083      		st Z,r24
 157:quantum/rgblight.c ****   rgblight_config.sat = UINT8_MAX;
 281               		.loc 1 157 23 view .LVU65
 282 0008 1182      		std Z+1,__zero_reg__
 158:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 283               		.loc 1 158 23 view .LVU66
 284 000a 8FEF      		ldi r24,lo8(-1)
 285 000c 8283      		std Z+2,r24
 159:quantum/rgblight.c ****   rgblight_config.speed = 0;
 286               		.loc 1 159 23 view .LVU67
 287 000e 8383      		std Z+3,r24
 160:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 288               		.loc 1 160 25 view .LVU68
 289 0010 1482      		std Z+4,__zero_reg__
 161:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 290               		.loc 1 161 37 is_stmt 1 view .LVU69
 162:quantum/rgblight.c **** }
 291               		.loc 1 162 3 view .LVU70
 292 0012 6081      		ld r22,Z
 293 0014 7181      		ldd r23,Z+1
 294 0016 8281      		ldd r24,Z+2
 295 0018 9381      		ldd r25,Z+3
 296 001a 0C94 0000 		jmp eeconfig_update_rgblight
 297               	.LVL13:
 298               		.cfi_endproc
 299               	.LFE85:
 301               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 302               	.global	eeconfig_debug_rgblight
 304               	eeconfig_debug_rgblight:
 305               	.LFB86:
 165:quantum/rgblight.c ****   dprintf("rgblight_config eprom\n");
 306               		.loc 1 165 36 view -0
 307               		.cfi_startproc
 308               	/* prologue: function */
 309               	/* frame size = 0 */
 310               	/* stack size = 0 */
 311               	.L__stack_usage = 0
 166:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 312               		.loc 1 166 37 view .LVU72
 167:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 313               		.loc 1 167 67 view .LVU73
 168:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 314               		.loc 1 168 63 view .LVU74
 169:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 315               		.loc 1 169 61 view .LVU75
 170:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 316               		.loc 1 170 61 view .LVU76
 171:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 317               		.loc 1 171 61 view .LVU77
 172:quantum/rgblight.c **** }
 318               		.loc 1 172 65 view .LVU78
 319               	/* epilogue start */
 173:quantum/rgblight.c **** 
 320               		.loc 1 173 1 is_stmt 0 view .LVU79
 321 0000 0895      		ret
 322               		.cfi_endproc
 323               	.LFE86:
 325               		.section	.text.rgblight_read_dword,"ax",@progbits
 326               	.global	rgblight_read_dword
 328               	rgblight_read_dword:
 329               	.LFB88:
 212:quantum/rgblight.c ****   return rgblight_config.raw;
 330               		.loc 1 212 36 is_stmt 1 view -0
 331               		.cfi_startproc
 332               	/* prologue: function */
 333               	/* frame size = 0 */
 334               	/* stack size = 0 */
 335               	.L__stack_usage = 0
 213:quantum/rgblight.c **** }
 336               		.loc 1 213 3 view .LVU81
 213:quantum/rgblight.c **** }
 337               		.loc 1 213 25 is_stmt 0 view .LVU82
 338 0000 6091 0000 		lds r22,rgblight_config
 339 0004 7091 0000 		lds r23,rgblight_config+1
 340 0008 8091 0000 		lds r24,rgblight_config+2
 341 000c 9091 0000 		lds r25,rgblight_config+3
 342               	/* epilogue start */
 214:quantum/rgblight.c **** 
 343               		.loc 1 214 1 view .LVU83
 344 0010 0895      		ret
 345               		.cfi_endproc
 346               	.LFE88:
 348               		.section	.text.rgblight_get_mode,"ax",@progbits
 349               	.global	rgblight_get_mode
 351               	rgblight_get_mode:
 352               	.LFB98:
 273:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 353               		.loc 1 273 33 is_stmt 1 view -0
 354               		.cfi_startproc
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
 274:quantum/rgblight.c ****     return false;
 359               		.loc 1 274 3 view .LVU85
 274:quantum/rgblight.c ****     return false;
 360               		.loc 1 274 23 is_stmt 0 view .LVU86
 361 0000 8091 0000 		lds r24,rgblight_config
 274:quantum/rgblight.c ****     return false;
 362               		.loc 1 274 6 view .LVU87
 363 0004 80FF      		sbrs r24,0
 364 0006 00C0      		rjmp .L16
 278:quantum/rgblight.c **** }
 365               		.loc 1 278 3 is_stmt 1 view .LVU88
 278:quantum/rgblight.c **** }
 366               		.loc 1 278 25 is_stmt 0 view .LVU89
 367 0008 8695      		lsr r24
 368 000a 0895      		ret
 369               	.L16:
 275:quantum/rgblight.c ****   }
 370               		.loc 1 275 12 view .LVU90
 371 000c 80E0      		ldi r24,0
 372               	/* epilogue start */
 279:quantum/rgblight.c **** 
 373               		.loc 1 279 1 view .LVU91
 374 000e 0895      		ret
 375               		.cfi_endproc
 376               	.LFE98:
 378               		.section	.text.rgblight_increase_speed,"ax",@progbits
 379               	.global	rgblight_increase_speed
 381               	rgblight_increase_speed:
 382               	.LFB126:
 440:quantum/rgblight.c ****     if (rgblight_config.speed < 3)
 383               		.loc 1 440 36 is_stmt 1 view -0
 384               		.cfi_startproc
 385               	/* prologue: function */
 386               	/* frame size = 0 */
 387               	/* stack size = 0 */
 388               	.L__stack_usage = 0
 441:quantum/rgblight.c ****         rgblight_config.speed++;
 389               		.loc 1 441 5 view .LVU93
 441:quantum/rgblight.c ****         rgblight_config.speed++;
 390               		.loc 1 441 24 is_stmt 0 view .LVU94
 391 0000 8091 0000 		lds r24,rgblight_config+4
 441:quantum/rgblight.c ****         rgblight_config.speed++;
 392               		.loc 1 441 8 view .LVU95
 393 0004 8330      		cpi r24,lo8(3)
 394 0006 00F4      		brsh .L18
 442:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 395               		.loc 1 442 9 is_stmt 1 view .LVU96
 442:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 396               		.loc 1 442 30 is_stmt 0 view .LVU97
 397 0008 8F5F      		subi r24,lo8(-(1))
 398 000a 8093 0000 		sts rgblight_config+4,r24
 399               	.L18:
 444:quantum/rgblight.c **** }
 400               		.loc 1 444 5 is_stmt 1 view .LVU98
 401 000e 6091 0000 		lds r22,rgblight_config
 402 0012 7091 0000 		lds r23,rgblight_config+1
 403 0016 8091 0000 		lds r24,rgblight_config+2
 404 001a 9091 0000 		lds r25,rgblight_config+3
 405 001e 0C94 0000 		jmp eeconfig_update_rgblight
 406               	.LVL14:
 407               		.cfi_endproc
 408               	.LFE126:
 410               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 411               	.global	rgblight_decrease_speed
 413               	rgblight_decrease_speed:
 414               	.LFB127:
 447:quantum/rgblight.c ****     if (rgblight_config.speed > 0)
 415               		.loc 1 447 36 view -0
 416               		.cfi_startproc
 417               	/* prologue: function */
 418               	/* frame size = 0 */
 419               	/* stack size = 0 */
 420               	.L__stack_usage = 0
 448:quantum/rgblight.c ****         rgblight_config.speed--;
 421               		.loc 1 448 5 view .LVU100
 448:quantum/rgblight.c ****         rgblight_config.speed--;
 422               		.loc 1 448 24 is_stmt 0 view .LVU101
 423 0000 8091 0000 		lds r24,rgblight_config+4
 448:quantum/rgblight.c ****         rgblight_config.speed--;
 424               		.loc 1 448 8 view .LVU102
 425 0004 8823      		tst r24
 426 0006 01F0      		breq .L20
 449:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 427               		.loc 1 449 9 is_stmt 1 view .LVU103
 449:quantum/rgblight.c ****     //RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 428               		.loc 1 449 30 is_stmt 0 view .LVU104
 429 0008 8150      		subi r24,lo8(-(-1))
 430 000a 8093 0000 		sts rgblight_config+4,r24
 431               	.L20:
 451:quantum/rgblight.c **** }
 432               		.loc 1 451 5 is_stmt 1 view .LVU105
 433 000e 6091 0000 		lds r22,rgblight_config
 434 0012 7091 0000 		lds r23,rgblight_config+1
 435 0016 8091 0000 		lds r24,rgblight_config+2
 436 001a 9091 0000 		lds r25,rgblight_config+3
 437 001e 0C94 0000 		jmp eeconfig_update_rgblight
 438               	.LVL15:
 439               		.cfi_endproc
 440               	.LFE127:
 442               		.section	.text.rgblight_get_hue,"ax",@progbits
 443               	.global	rgblight_get_hue
 445               	rgblight_get_hue:
 446               	.LFB132:
 545:quantum/rgblight.c ****   return rgblight_config.hue;
 447               		.loc 1 545 32 view -0
 448               		.cfi_startproc
 449               	/* prologue: function */
 450               	/* frame size = 0 */
 451               	/* stack size = 0 */
 452               	.L__stack_usage = 0
 546:quantum/rgblight.c **** }
 453               		.loc 1 546 3 view .LVU107
 547:quantum/rgblight.c **** 
 454               		.loc 1 547 1 is_stmt 0 view .LVU108
 455 0000 8091 0000 		lds r24,rgblight_config+1
 456               	/* epilogue start */
 457 0004 0895      		ret
 458               		.cfi_endproc
 459               	.LFE132:
 461               		.section	.text.rgblight_get_sat,"ax",@progbits
 462               	.global	rgblight_get_sat
 464               	rgblight_get_sat:
 465               	.LFB133:
 549:quantum/rgblight.c ****   return rgblight_config.sat;
 466               		.loc 1 549 32 is_stmt 1 view -0
 467               		.cfi_startproc
 468               	/* prologue: function */
 469               	/* frame size = 0 */
 470               	/* stack size = 0 */
 471               	.L__stack_usage = 0
 550:quantum/rgblight.c **** }
 472               		.loc 1 550 3 view .LVU110
 551:quantum/rgblight.c **** 
 473               		.loc 1 551 1 is_stmt 0 view .LVU111
 474 0000 8091 0000 		lds r24,rgblight_config+2
 475               	/* epilogue start */
 476 0004 0895      		ret
 477               		.cfi_endproc
 478               	.LFE133:
 480               		.section	.text.rgblight_get_val,"ax",@progbits
 481               	.global	rgblight_get_val
 483               	rgblight_get_val:
 484               	.LFB134:
 553:quantum/rgblight.c ****   return rgblight_config.val;
 485               		.loc 1 553 32 is_stmt 1 view -0
 486               		.cfi_startproc
 487               	/* prologue: function */
 488               	/* frame size = 0 */
 489               	/* stack size = 0 */
 490               	.L__stack_usage = 0
 554:quantum/rgblight.c **** }
 491               		.loc 1 554 3 view .LVU113
 555:quantum/rgblight.c **** 
 492               		.loc 1 555 1 is_stmt 0 view .LVU114
 493 0000 8091 0000 		lds r24,rgblight_config+3
 494               	/* epilogue start */
 495 0004 0895      		ret
 496               		.cfi_endproc
 497               	.LFE134:
 499               		.section	.text.rgblight_set,"ax",@progbits
 500               	.global	rgblight_set
 502               	rgblight_set:
 503               	.LFB145:
 635:quantum/rgblight.c ****   LED_TYPE *start_led = led + clipping_start_pos;
 504               		.loc 1 635 25 is_stmt 1 view -0
 505               		.cfi_startproc
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 508               	/* stack size = 0 */
 509               	.L__stack_usage = 0
 636:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 510               		.loc 1 636 3 view .LVU116
 636:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 511               		.loc 1 636 29 is_stmt 0 view .LVU117
 512 0000 8091 0000 		lds r24,clipping_start_pos
 513 0004 24E0      		ldi r18,lo8(4)
 514 0006 829F      		mul r24,r18
 515 0008 C001      		movw r24,r0
 516 000a 1124      		clr __zero_reg__
 636:quantum/rgblight.c ****   uint16_t num_leds = clipping_num_leds;
 517               		.loc 1 636 13 view .LVU118
 518 000c 8050      		subi r24,lo8(-(led))
 519 000e 9040      		sbci r25,hi8(-(led))
 520               	.LVL16:
 637:quantum/rgblight.c ****   if (rgblight_config.enable) {
 521               		.loc 1 637 3 is_stmt 1 view .LVU119
 637:quantum/rgblight.c ****   if (rgblight_config.enable) {
 522               		.loc 1 637 12 is_stmt 0 view .LVU120
 523 0010 6091 0000 		lds r22,clipping_num_leds
 524 0014 70E0      		ldi r23,0
 525               	.LVL17:
 638:quantum/rgblight.c ****     #ifdef RGBLIGHT_LED_MAP
 526               		.loc 1 638 3 is_stmt 1 view .LVU121
 638:quantum/rgblight.c ****     #ifdef RGBLIGHT_LED_MAP
 527               		.loc 1 638 7 is_stmt 0 view .LVU122
 528 0016 2091 0000 		lds r18,rgblight_config
 529 001a E0E0      		ldi r30,lo8(led)
 530 001c F0E0      		ldi r31,hi8(led)
 638:quantum/rgblight.c ****     #ifdef RGBLIGHT_LED_MAP
 531               		.loc 1 638 6 view .LVU123
 532 001e 20FD      		sbrc r18,0
 533               	.L31:
 658:quantum/rgblight.c ****     #else
 534               		.loc 1 658 7 is_stmt 1 view .LVU124
 535 0020 0C94 0000 		jmp ws2812_setleds_rgbw
 536               	.LVL18:
 537               	.L29:
 538               	.LBB22:
 653:quantum/rgblight.c ****       led[i].g = 0;
 539               		.loc 1 653 7 discriminator 3 view .LVU125
 653:quantum/rgblight.c ****       led[i].g = 0;
 540               		.loc 1 653 16 is_stmt 0 discriminator 3 view .LVU126
 541 0024 1182      		std Z+1,__zero_reg__
 654:quantum/rgblight.c ****       led[i].b = 0;
 542               		.loc 1 654 7 is_stmt 1 discriminator 3 view .LVU127
 654:quantum/rgblight.c ****       led[i].b = 0;
 543               		.loc 1 654 16 is_stmt 0 discriminator 3 view .LVU128
 544 0026 1082      		st Z,__zero_reg__
 655:quantum/rgblight.c ****     }
 545               		.loc 1 655 7 is_stmt 1 discriminator 3 view .LVU129
 655:quantum/rgblight.c ****     }
 546               		.loc 1 655 16 is_stmt 0 discriminator 3 view .LVU130
 547 0028 1282      		std Z+2,__zero_reg__
 548               	.LVL19:
 655:quantum/rgblight.c ****     }
 549               		.loc 1 655 16 discriminator 3 view .LVU131
 550 002a 3496      		adiw r30,4
 652:quantum/rgblight.c ****       led[i].r = 0;
 551               		.loc 1 652 5 discriminator 3 view .LVU132
 552 002c 20E0      		ldi r18,hi8(led+60)
 553 002e E030      		cpi r30,lo8(led+60)
 554 0030 F207      		cpc r31,r18
 555 0032 01F4      		brne .L29
 556 0034 00C0      		rjmp .L31
 557               	.LBE22:
 558               		.cfi_endproc
 559               	.LFE145:
 561               		.section	.text.rgblight_setrgb,"ax",@progbits
 562               	.global	rgblight_setrgb
 564               	rgblight_setrgb:
 565               	.LVL20:
 566               	.LFB135:
 557:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 567               		.loc 1 557 55 is_stmt 1 view -0
 568               		.cfi_startproc
 569               	/* prologue: function */
 570               	/* frame size = 0 */
 571               	/* stack size = 0 */
 572               	.L__stack_usage = 0
 558:quantum/rgblight.c **** 
 573               		.loc 1 558 3 view .LVU134
 558:quantum/rgblight.c **** 
 574               		.loc 1 558 23 is_stmt 0 view .LVU135
 575 0000 9091 0000 		lds r25,rgblight_config
 558:quantum/rgblight.c **** 
 576               		.loc 1 558 6 view .LVU136
 577 0004 90FF      		sbrs r25,0
 578 0006 00C0      		rjmp .L32
 579 0008 E0E0      		ldi r30,lo8(led)
 580 000a F0E0      		ldi r31,hi8(led)
 581               	.L34:
 582               	.LBB23:
 561:quantum/rgblight.c ****     led[i].g = g;
 583               		.loc 1 561 5 is_stmt 1 discriminator 3 view .LVU137
 561:quantum/rgblight.c ****     led[i].g = g;
 584               		.loc 1 561 14 is_stmt 0 discriminator 3 view .LVU138
 585 000c 8183      		std Z+1,r24
 562:quantum/rgblight.c ****     led[i].b = b;
 586               		.loc 1 562 5 is_stmt 1 discriminator 3 view .LVU139
 562:quantum/rgblight.c ****     led[i].b = b;
 587               		.loc 1 562 14 is_stmt 0 discriminator 3 view .LVU140
 588 000e 6083      		st Z,r22
 563:quantum/rgblight.c ****   }
 589               		.loc 1 563 5 is_stmt 1 discriminator 3 view .LVU141
 563:quantum/rgblight.c ****   }
 590               		.loc 1 563 14 is_stmt 0 discriminator 3 view .LVU142
 591 0010 4283      		std Z+2,r20
 592               	.LVL21:
 563:quantum/rgblight.c ****   }
 593               		.loc 1 563 14 discriminator 3 view .LVU143
 594 0012 3496      		adiw r30,4
 560:quantum/rgblight.c ****     led[i].r = r;
 595               		.loc 1 560 3 discriminator 3 view .LVU144
 596 0014 90E0      		ldi r25,hi8(led+60)
 597 0016 E030      		cpi r30,lo8(led+60)
 598 0018 F907      		cpc r31,r25
 599 001a 01F4      		brne .L34
 560:quantum/rgblight.c ****     led[i].r = r;
 600               		.loc 1 560 3 discriminator 3 view .LVU145
 601               	.LBE23:
 565:quantum/rgblight.c **** }
 602               		.loc 1 565 3 is_stmt 1 view .LVU146
 603 001c 0C94 0000 		jmp rgblight_set
 604               	.LVL22:
 605               	.L32:
 606               	/* epilogue start */
 566:quantum/rgblight.c **** 
 607               		.loc 1 566 1 is_stmt 0 view .LVU147
 608 0020 0895      		ret
 609               		.cfi_endproc
 610               	.LFE135:
 612               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 613               	.global	rgblight_sethsv_noeeprom_old
 615               	rgblight_sethsv_noeeprom_old:
 616               	.LVL23:
 617               	.LFB128:
 454:quantum/rgblight.c ****   if (rgblight_config.enable) {
 618               		.loc 1 454 74 is_stmt 1 view -0
 619               		.cfi_startproc
 454:quantum/rgblight.c ****   if (rgblight_config.enable) {
 620               		.loc 1 454 74 is_stmt 0 view .LVU149
 621 0000 CF93      		push r28
 622               	.LCFI6:
 623               		.cfi_def_cfa_offset 3
 624               		.cfi_offset 28, -2
 625 0002 DF93      		push r29
 626               	.LCFI7:
 627               		.cfi_def_cfa_offset 4
 628               		.cfi_offset 29, -3
 629 0004 00D0      		rcall .
 630 0006 00D0      		rcall .
 631               	.LCFI8:
 632               		.cfi_def_cfa_offset 8
 633 0008 CDB7      		in r28,__SP_L__
 634 000a DEB7      		in r29,__SP_H__
 635               	.LCFI9:
 636               		.cfi_def_cfa_register 28
 637               	/* prologue: function */
 638               	/* frame size = 4 */
 639               	/* stack size = 6 */
 640               	.L__stack_usage = 6
 455:quantum/rgblight.c ****     LED_TYPE tmp_led;
 641               		.loc 1 455 3 is_stmt 1 view .LVU150
 455:quantum/rgblight.c ****     LED_TYPE tmp_led;
 642               		.loc 1 455 7 is_stmt 0 view .LVU151
 643 000c 9091 0000 		lds r25,rgblight_config
 455:quantum/rgblight.c ****     LED_TYPE tmp_led;
 644               		.loc 1 455 6 view .LVU152
 645 0010 90FF      		sbrs r25,0
 646 0012 00C0      		rjmp .L36
 647               	.LBB24:
 456:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 648               		.loc 1 456 5 is_stmt 1 view .LVU153
 457:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 649               		.loc 1 457 5 view .LVU154
 650 0014 9E01      		movw r18,r28
 651 0016 2F5F      		subi r18,-1
 652 0018 3F4F      		sbci r19,-1
 653 001a 0E94 0000 		call sethsv
 654               	.LVL24:
 459:quantum/rgblight.c ****   }
 655               		.loc 1 459 5 view .LVU155
 656 001e 4B81      		ldd r20,Y+3
 657 0020 6981      		ldd r22,Y+1
 658 0022 8A81      		ldd r24,Y+2
 659 0024 0E94 0000 		call rgblight_setrgb
 660               	.LVL25:
 661               	.L36:
 662               	/* epilogue start */
 663               	.LBE24:
 461:quantum/rgblight.c **** 
 664               		.loc 1 461 1 is_stmt 0 view .LVU156
 665 0028 0F90      		pop __tmp_reg__
 666 002a 0F90      		pop __tmp_reg__
 667 002c 0F90      		pop __tmp_reg__
 668 002e 0F90      		pop __tmp_reg__
 669 0030 DF91      		pop r29
 670 0032 CF91      		pop r28
 671 0034 0895      		ret
 672               		.cfi_endproc
 673               	.LFE128:
 675               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 676               	.global	rgblight_effect_breathing
 678               	rgblight_effect_breathing:
 679               	.LVL26:
 680               	.LFB153:
 776:quantum/rgblight.c **** 
 777:quantum/rgblight.c **** void rgblight_task(void) {
 778:quantum/rgblight.c ****   if (rgblight_status.timer_enabled) {
 779:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 780:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 781:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 782:quantum/rgblight.c ****     animation_status.delta = delta;
 783:quantum/rgblight.c **** 
 784:quantum/rgblight.c ****     // static light mode, do nothing here
 785:quantum/rgblight.c ****     if ( 1 == 0 ) { //dummy
 786:quantum/rgblight.c ****     }
 787:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 788:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 789:quantum/rgblight.c ****       // breathing mode
 790:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 791:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 792:quantum/rgblight.c ****     }
 793:quantum/rgblight.c **** #endif
 794:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 795:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 796:quantum/rgblight.c ****       // rainbow mood mode
 797:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 798:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 799:quantum/rgblight.c ****     }
 800:quantum/rgblight.c **** #endif
 801:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 802:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 803:quantum/rgblight.c ****       // rainbow swirl mode
 804:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 805:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 806:quantum/rgblight.c ****     }
 807:quantum/rgblight.c **** #endif
 808:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 809:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 810:quantum/rgblight.c ****       // snake mode
 811:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 812:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 813:quantum/rgblight.c ****     }
 814:quantum/rgblight.c **** #endif
 815:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
 816:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 817:quantum/rgblight.c ****       // knight mode
 818:quantum/rgblight.c ****       interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 819:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 820:quantum/rgblight.c ****     }
 821:quantum/rgblight.c **** #endif
 822:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
 823:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 824:quantum/rgblight.c ****       // christmas mode
 825:quantum/rgblight.c ****       interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 826:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_christmas;
 827:quantum/rgblight.c ****     }
 828:quantum/rgblight.c **** #endif
 829:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
 830:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 831:quantum/rgblight.c ****       // RGB test mode
 832:quantum/rgblight.c ****       interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 833:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 834:quantum/rgblight.c ****     }
 835:quantum/rgblight.c **** #endif
 836:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
 837:quantum/rgblight.c ****     else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING){
 838:quantum/rgblight.c ****       interval_time = 500;
 839:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_alternating;
 840:quantum/rgblight.c ****     }
 841:quantum/rgblight.c **** #endif
 842:quantum/rgblight.c ****     if (animation_status.restart) {
 843:quantum/rgblight.c ****       animation_status.restart = false;
 844:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 845:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 846:quantum/rgblight.c ****     }
 847:quantum/rgblight.c ****     if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 848:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 849:quantum/rgblight.c ****       static uint16_t report_last_timer = 0;
 850:quantum/rgblight.c ****       static bool tick_flag = false;
 851:quantum/rgblight.c ****       uint16_t oldpos16;
 852:quantum/rgblight.c ****       if (tick_flag) {
 853:quantum/rgblight.c ****         tick_flag = false;
 854:quantum/rgblight.c ****         //dprintf("rgblight animation tick\n");
 855:quantum/rgblight.c ****         if (timer_elapsed(report_last_timer) >= 30000) {
 856:quantum/rgblight.c ****             report_last_timer = timer_read();
 857:quantum/rgblight.c ****             dprintf("rgblight animation tick report to slave\n");
 858:quantum/rgblight.c ****             RGBLIGHT_SPLIT_ANIMATION_TICK;
 859:quantum/rgblight.c ****         }
 860:quantum/rgblight.c ****       }
 861:quantum/rgblight.c ****       oldpos16 = animation_status.pos16;
 862:quantum/rgblight.c ****       //dprintf("call effect function\n");
 863:quantum/rgblight.c **** #endif
 864:quantum/rgblight.c ****       animation_status.last_timer += interval_time;
 865:quantum/rgblight.c ****       effect_func(&animation_status);
 866:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 867:quantum/rgblight.c ****       //dprintf("pos16, oldpos16 = %d %d\n",
 868:quantum/rgblight.c ****       //        animation_status.pos16,oldpos16);
 869:quantum/rgblight.c ****       if (animation_status.pos16 == 0 && oldpos16 != 0) {
 870:quantum/rgblight.c ****           //dprintf("flag on\n");
 871:quantum/rgblight.c ****           tick_flag = true;
 872:quantum/rgblight.c ****       }
 873:quantum/rgblight.c **** #endif
 874:quantum/rgblight.c ****     }
 875:quantum/rgblight.c ****   }
 876:quantum/rgblight.c **** }
 877:quantum/rgblight.c **** 
 878:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 879:quantum/rgblight.c **** 
 880:quantum/rgblight.c **** // Effects
 881:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 882:quantum/rgblight.c **** 
 883:quantum/rgblight.c **** #ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 884:quantum/rgblight.c ****   #ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 885:quantum/rgblight.c ****     #define RGBLIGHT_BREATHE_TABLE_SIZE 256 // 256 or 128 or 64
 886:quantum/rgblight.c ****   #endif
 887:quantum/rgblight.c ****   #include <rgblight_breathe_table.h>
 888:quantum/rgblight.c **** #endif
 889:quantum/rgblight.c **** 
 890:quantum/rgblight.c **** __attribute__ ((weak))
 891:quantum/rgblight.c **** const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 892:quantum/rgblight.c **** 
 893:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 681               		.loc 1 893 58 is_stmt 1 view -0
 682               		.cfi_startproc
 683               		.loc 1 893 58 is_stmt 0 view .LVU158
 684 0000 CF93      		push r28
 685               	.LCFI10:
 686               		.cfi_def_cfa_offset 3
 687               		.cfi_offset 28, -2
 688 0002 DF93      		push r29
 689               	.LCFI11:
 690               		.cfi_def_cfa_offset 4
 691               		.cfi_offset 29, -3
 692               	/* prologue: function */
 693               	/* frame size = 0 */
 694               	/* stack size = 2 */
 695               	.L__stack_usage = 2
 696 0004 EC01      		movw r28,r24
 894:quantum/rgblight.c ****   float val;
 697               		.loc 1 894 3 is_stmt 1 view .LVU159
 895:quantum/rgblight.c **** 
 896:quantum/rgblight.c ****   // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 897:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 898:quantum/rgblight.c ****   val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 698               		.loc 1 898 3 view .LVU160
 699               	.LBB25:
 700               		.loc 1 898 9 view .LVU161
 701               	.LVL27:
 702               		.loc 1 898 9 view .LVU162
 703               		.loc 1 898 9 view .LVU163
 704 0006 EC81      		ldd r30,Y+4
 705 0008 F0E0      		ldi r31,0
 706 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 707 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 708               	/* #APP */
 709               	 ;  898 "quantum/rgblight.c" 1
 710 000e 4491      		lpm r20, Z
 711               		
 712               	 ;  0 "" 2
 713               	.LVL28:
 714               		.loc 1 898 9 view .LVU164
 715               		.loc 1 898 9 is_stmt 0 view .LVU165
 716               	/* #NOAPP */
 717               	.LBE25:
 899:quantum/rgblight.c **** #else
 900:quantum/rgblight.c ****   val = (exp(sin((anim->pos/255.0)*M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER/M_E)*(RGBLIGHT_EFFECT_BR
 901:quantum/rgblight.c **** #endif
 902:quantum/rgblight.c ****   rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 718               		.loc 1 902 3 is_stmt 1 view .LVU166
 719 0010 E0E0      		ldi r30,lo8(rgblight_config)
 720 0012 F0E0      		ldi r31,hi8(rgblight_config)
 721 0014 6281      		ldd r22,Z+2
 722 0016 8181      		ldd r24,Z+1
 723               	.LVL29:
 724               		.loc 1 902 3 is_stmt 0 view .LVU167
 725 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 726               	.LVL30:
 903:quantum/rgblight.c ****   anim->pos = (anim->pos + 1);
 727               		.loc 1 903 3 is_stmt 1 view .LVU168
 728               		.loc 1 903 26 is_stmt 0 view .LVU169
 729 001c 8C81      		ldd r24,Y+4
 730 001e 8F5F      		subi r24,lo8(-(1))
 731               		.loc 1 903 13 view .LVU170
 732 0020 8C83      		std Y+4,r24
 733               	/* epilogue start */
 904:quantum/rgblight.c **** }
 734               		.loc 1 904 1 view .LVU171
 735 0022 DF91      		pop r29
 736 0024 CF91      		pop r28
 737               	.LVL31:
 738               		.loc 1 904 1 view .LVU172
 739 0026 0895      		ret
 740               		.cfi_endproc
 741               	.LFE153:
 743               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 744               	.global	rgblight_effect_rainbow_mood
 746               	rgblight_effect_rainbow_mood:
 747               	.LVL32:
 748               	.LFB154:
 905:quantum/rgblight.c **** #endif
 906:quantum/rgblight.c **** 
 907:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 908:quantum/rgblight.c **** __attribute__ ((weak))
 909:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 910:quantum/rgblight.c **** 
 911:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 749               		.loc 1 911 61 is_stmt 1 view -0
 750               		.cfi_startproc
 751               		.loc 1 911 61 is_stmt 0 view .LVU174
 752 0000 CF93      		push r28
 753               	.LCFI12:
 754               		.cfi_def_cfa_offset 3
 755               		.cfi_offset 28, -2
 756 0002 DF93      		push r29
 757               	.LCFI13:
 758               		.cfi_def_cfa_offset 4
 759               		.cfi_offset 29, -3
 760               	/* prologue: function */
 761               	/* frame size = 0 */
 762               	/* stack size = 2 */
 763               	.L__stack_usage = 2
 764 0004 EC01      		movw r28,r24
 912:quantum/rgblight.c ****   rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 765               		.loc 1 912 3 is_stmt 1 view .LVU175
 766 0006 E0E0      		ldi r30,lo8(rgblight_config)
 767 0008 F0E0      		ldi r31,hi8(rgblight_config)
 768 000a 4381      		ldd r20,Z+3
 769 000c 6281      		ldd r22,Z+2
 770 000e 8C81      		ldd r24,Y+4
 771               	.LVL33:
 772               		.loc 1 912 3 is_stmt 0 view .LVU176
 773 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 774               	.LVL34:
 913:quantum/rgblight.c ****   anim->current_hue++;
 775               		.loc 1 913 3 is_stmt 1 view .LVU177
 776               		.loc 1 913 20 is_stmt 0 view .LVU178
 777 0014 8C81      		ldd r24,Y+4
 778 0016 8F5F      		subi r24,lo8(-(1))
 779 0018 8C83      		std Y+4,r24
 780               	/* epilogue start */
 914:quantum/rgblight.c **** }
 781               		.loc 1 914 1 view .LVU179
 782 001a DF91      		pop r29
 783 001c CF91      		pop r28
 784               	.LVL35:
 785               		.loc 1 914 1 view .LVU180
 786 001e 0895      		ret
 787               		.cfi_endproc
 788               	.LFE154:
 790               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 791               	.global	rgblight_effect_rgbtest
 793               	rgblight_effect_rgbtest:
 794               	.LVL36:
 795               	.LFB159:
 915:quantum/rgblight.c **** #endif
 916:quantum/rgblight.c **** 
 917:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 918:quantum/rgblight.c **** #ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 919:quantum/rgblight.c ****   #define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 920:quantum/rgblight.c **** #endif
 921:quantum/rgblight.c **** 
 922:quantum/rgblight.c **** __attribute__ ((weak))
 923:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 924:quantum/rgblight.c **** 
 925:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 926:quantum/rgblight.c ****   uint8_t hue;
 927:quantum/rgblight.c ****   uint8_t i;
 928:quantum/rgblight.c **** 
 929:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 930:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / RGBLED_NUM * i + anim->current_hue);
 931:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 932:quantum/rgblight.c ****   }
 933:quantum/rgblight.c ****   rgblight_set();
 934:quantum/rgblight.c **** 
 935:quantum/rgblight.c ****   if (anim->delta % 2) {
 936:quantum/rgblight.c ****     anim->current_hue++;
 937:quantum/rgblight.c ****   } else {
 938:quantum/rgblight.c ****     anim->current_hue--;
 939:quantum/rgblight.c ****   }
 940:quantum/rgblight.c **** }
 941:quantum/rgblight.c **** #endif
 942:quantum/rgblight.c **** 
 943:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 944:quantum/rgblight.c **** __attribute__ ((weak))
 945:quantum/rgblight.c **** const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 946:quantum/rgblight.c **** 
 947:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 948:quantum/rgblight.c ****   static uint8_t pos = 0;
 949:quantum/rgblight.c ****   uint8_t i, j;
 950:quantum/rgblight.c ****   int8_t k;
 951:quantum/rgblight.c ****   int8_t increment = 1;
 952:quantum/rgblight.c **** 
 953:quantum/rgblight.c ****   if (anim->delta % 2) {
 954:quantum/rgblight.c ****     increment = -1;
 955:quantum/rgblight.c ****   }
 956:quantum/rgblight.c **** 
 957:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 958:quantum/rgblight.c ****   if (anim->pos == 0) { // restart signal
 959:quantum/rgblight.c ****     if (increment == 1) {
 960:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 961:quantum/rgblight.c ****     } else {
 962:quantum/rgblight.c ****       pos = 0;
 963:quantum/rgblight.c ****     }
 964:quantum/rgblight.c ****     anim->pos = 1;
 965:quantum/rgblight.c ****   }
 966:quantum/rgblight.c **** #endif
 967:quantum/rgblight.c **** 
 968:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 969:quantum/rgblight.c ****     led[i].r = 0;
 970:quantum/rgblight.c ****     led[i].g = 0;
 971:quantum/rgblight.c ****     led[i].b = 0;
 972:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 973:quantum/rgblight.c ****       k = pos + j * increment;
 974:quantum/rgblight.c ****       if (k < 0) {
 975:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 976:quantum/rgblight.c ****       }
 977:quantum/rgblight.c ****       if (i == k) {
 978:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 979:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 980:quantum/rgblight.c ****                (LED_TYPE *)&led[i]);
 981:quantum/rgblight.c ****       }
 982:quantum/rgblight.c ****     }
 983:quantum/rgblight.c ****   }
 984:quantum/rgblight.c ****   rgblight_set();
 985:quantum/rgblight.c ****   if (increment == 1) {
 986:quantum/rgblight.c ****     if (pos - 1 < 0) {
 987:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 988:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 989:quantum/rgblight.c ****       anim->pos = 0;
 990:quantum/rgblight.c **** #endif
 991:quantum/rgblight.c ****     } else {
 992:quantum/rgblight.c ****       pos -= 1;
 993:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 994:quantum/rgblight.c ****       anim->pos = 1;
 995:quantum/rgblight.c **** #endif
 996:quantum/rgblight.c ****     }
 997:quantum/rgblight.c ****   } else {
 998:quantum/rgblight.c ****     pos = (pos + 1) % RGBLED_NUM;
 999:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1000:quantum/rgblight.c ****     anim->pos = pos;
1001:quantum/rgblight.c **** #endif
1002:quantum/rgblight.c ****   }
1003:quantum/rgblight.c **** }
1004:quantum/rgblight.c **** #endif
1005:quantum/rgblight.c **** 
1006:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1007:quantum/rgblight.c **** __attribute__ ((weak))
1008:quantum/rgblight.c **** const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1009:quantum/rgblight.c **** 
1010:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1011:quantum/rgblight.c **** 
1012:quantum/rgblight.c ****   static int8_t low_bound = 0;
1013:quantum/rgblight.c ****   static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1014:quantum/rgblight.c ****   static int8_t increment = 1;
1015:quantum/rgblight.c ****   uint8_t i, cur;
1016:quantum/rgblight.c **** 
1017:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1018:quantum/rgblight.c ****   if (anim->pos == 0) { // restart signal
1019:quantum/rgblight.c ****       anim->pos = 1;
1020:quantum/rgblight.c ****       low_bound = 0;
1021:quantum/rgblight.c ****       high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1022:quantum/rgblight.c ****       increment = 1;
1023:quantum/rgblight.c ****   }
1024:quantum/rgblight.c **** #endif
1025:quantum/rgblight.c ****   // Set all the LEDs to 0
1026:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
1027:quantum/rgblight.c ****     led[i].r = 0;
1028:quantum/rgblight.c ****     led[i].g = 0;
1029:quantum/rgblight.c ****     led[i].b = 0;
1030:quantum/rgblight.c ****   }
1031:quantum/rgblight.c ****   // Determine which LEDs should be lit up
1032:quantum/rgblight.c ****   for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1033:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
1034:quantum/rgblight.c **** 
1035:quantum/rgblight.c ****     if (i >= low_bound && i <= high_bound) {
1036:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
1037:quantum/rgblight.c ****     } else {
1038:quantum/rgblight.c ****       led[cur].r = 0;
1039:quantum/rgblight.c ****       led[cur].g = 0;
1040:quantum/rgblight.c ****       led[cur].b = 0;
1041:quantum/rgblight.c ****     }
1042:quantum/rgblight.c ****   }
1043:quantum/rgblight.c ****   rgblight_set();
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c ****   // Move from low_bound to high_bound changing the direction we increment each
1046:quantum/rgblight.c ****   // time a boundary is hit.
1047:quantum/rgblight.c ****   low_bound += increment;
1048:quantum/rgblight.c ****   high_bound += increment;
1049:quantum/rgblight.c **** 
1050:quantum/rgblight.c ****   if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1051:quantum/rgblight.c ****     increment = -increment;
1052:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1053:quantum/rgblight.c ****     if (increment == 1) {
1054:quantum/rgblight.c ****         anim->pos = 0;
1055:quantum/rgblight.c ****     }
1056:quantum/rgblight.c **** #endif
1057:quantum/rgblight.c ****   }
1058:quantum/rgblight.c **** }
1059:quantum/rgblight.c **** #endif
1060:quantum/rgblight.c **** 
1061:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1062:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1063:quantum/rgblight.c ****   uint8_t hue;
1064:quantum/rgblight.c ****   uint8_t i;
1065:quantum/rgblight.c **** 
1066:quantum/rgblight.c ****   anim->current_offset = (anim->current_offset + 1) % 2;
1067:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
1068:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
1069:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
1070:quantum/rgblight.c ****   }
1071:quantum/rgblight.c ****   rgblight_set();
1072:quantum/rgblight.c **** }
1073:quantum/rgblight.c **** #endif
1074:quantum/rgblight.c **** 
1075:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1076:quantum/rgblight.c **** __attribute__ ((weak))
1077:quantum/rgblight.c **** const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1078:quantum/rgblight.c **** 
1079:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 796               		.loc 1 1079 56 is_stmt 1 view -0
 797               		.cfi_startproc
 798               		.loc 1 1079 56 is_stmt 0 view .LVU182
 799 0000 0F93      		push r16
 800               	.LCFI14:
 801               		.cfi_def_cfa_offset 3
 802               		.cfi_offset 16, -2
 803 0002 1F93      		push r17
 804               	.LCFI15:
 805               		.cfi_def_cfa_offset 4
 806               		.cfi_offset 17, -3
 807 0004 CF93      		push r28
 808               	.LCFI16:
 809               		.cfi_def_cfa_offset 5
 810               		.cfi_offset 28, -4
 811 0006 DF93      		push r29
 812               	.LCFI17:
 813               		.cfi_def_cfa_offset 6
 814               		.cfi_offset 29, -5
 815 0008 00D0      		rcall .
 816 000a 00D0      		rcall .
 817               	.LCFI18:
 818               		.cfi_def_cfa_offset 10
 819 000c CDB7      		in r28,__SP_L__
 820 000e DEB7      		in r29,__SP_H__
 821               	.LCFI19:
 822               		.cfi_def_cfa_register 28
 823               	/* prologue: function */
 824               	/* frame size = 4 */
 825               	/* stack size = 8 */
 826               	.L__stack_usage = 8
 827 0010 8C01      		movw r16,r24
1080:quantum/rgblight.c ****   static uint8_t maxval = 0;
 828               		.loc 1 1080 3 is_stmt 1 view .LVU183
1081:quantum/rgblight.c ****   uint8_t g; uint8_t r; uint8_t b;
 829               		.loc 1 1081 3 view .LVU184
 830               		.loc 1 1081 14 view .LVU185
 831               		.loc 1 1081 25 view .LVU186
1082:quantum/rgblight.c **** 
1083:quantum/rgblight.c ****   if( maxval == 0 ) {
 832               		.loc 1 1083 3 view .LVU187
 833               		.loc 1 1083 5 is_stmt 0 view .LVU188
 834 0012 8091 0000 		lds r24,maxval.3199
 835               	.LVL37:
 836               		.loc 1 1083 5 view .LVU189
 837 0016 8111      		cpse r24,__zero_reg__
 838 0018 00C0      		rjmp .L44
 839               	.LBB26:
1084:quantum/rgblight.c ****       LED_TYPE tmp_led;
 840               		.loc 1 1084 7 is_stmt 1 view .LVU190
1085:quantum/rgblight.c ****       sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 841               		.loc 1 1085 7 view .LVU191
 842 001a 9E01      		movw r18,r28
 843 001c 2F5F      		subi r18,-1
 844 001e 3F4F      		sbci r19,-1
 845 0020 4FEF      		ldi r20,lo8(-1)
 846 0022 6FEF      		ldi r22,lo8(-1)
 847 0024 0E94 0000 		call sethsv
 848               	.LVL38:
1086:quantum/rgblight.c ****       maxval = tmp_led.r;
 849               		.loc 1 1086 7 view .LVU192
 850               		.loc 1 1086 14 is_stmt 0 view .LVU193
 851 0028 8A81      		ldd r24,Y+2
 852 002a 8093 0000 		sts maxval.3199,r24
 853               	.L44:
 854               	.LBE26:
1087:quantum/rgblight.c ****   }
1088:quantum/rgblight.c ****   g = r = b = 0;
 855               		.loc 1 1088 3 is_stmt 1 view .LVU194
 856               	.LVL39:
1089:quantum/rgblight.c ****   switch( anim->pos ) {
 857               		.loc 1 1089 3 view .LVU195
 858               		.loc 1 1089 15 is_stmt 0 view .LVU196
 859 002e F801      		movw r30,r16
 860 0030 8481      		ldd r24,Z+4
 861 0032 8130      		cpi r24,lo8(1)
 862 0034 01F0      		breq .L45
 863               		.loc 1 1089 15 view .LVU197
 864 0036 8823      		tst r24
 865 0038 01F0      		breq .L46
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 866               		.loc 1 1088 13 view .LVU198
 867 003a 40E0      		ldi r20,0
 868 003c 8230      		cpi r24,lo8(2)
 869 003e 01F4      		brne .L49
1090:quantum/rgblight.c ****     case 0: r = maxval; break;
1091:quantum/rgblight.c ****     case 1: g = maxval; break;
1092:quantum/rgblight.c ****     case 2: b = maxval; break;
 870               		.loc 1 1092 13 is_stmt 1 view .LVU199
 871               		.loc 1 1092 15 is_stmt 0 view .LVU200
 872 0040 4091 0000 		lds r20,maxval.3199
 873               	.L49:
 874               	.LVL40:
 875               		.loc 1 1092 25 is_stmt 1 view .LVU201
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 876               		.loc 1 1088 9 is_stmt 0 view .LVU202
 877 0044 80E0      		ldi r24,0
 878 0046 00C0      		rjmp .L50
 879               	.LVL41:
 880               	.L46:
1090:quantum/rgblight.c ****     case 0: r = maxval; break;
 881               		.loc 1 1090 13 is_stmt 1 view .LVU203
1090:quantum/rgblight.c ****     case 0: r = maxval; break;
 882               		.loc 1 1090 15 is_stmt 0 view .LVU204
 883 0048 8091 0000 		lds r24,maxval.3199
 884               	.LVL42:
1090:quantum/rgblight.c ****     case 0: r = maxval; break;
 885               		.loc 1 1090 25 is_stmt 1 view .LVU205
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 886               		.loc 1 1088 13 is_stmt 0 view .LVU206
 887 004c 40E0      		ldi r20,0
 888               	.LVL43:
 889               	.L50:
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 890               		.loc 1 1088 5 view .LVU207
 891 004e 60E0      		ldi r22,0
 892               		.loc 1 1092 5 view .LVU208
 893 0050 00C0      		rjmp .L48
 894               	.LVL44:
 895               	.L45:
1091:quantum/rgblight.c ****     case 2: b = maxval; break;
 896               		.loc 1 1091 13 is_stmt 1 view .LVU209
1091:quantum/rgblight.c ****     case 2: b = maxval; break;
 897               		.loc 1 1091 15 is_stmt 0 view .LVU210
 898 0052 6091 0000 		lds r22,maxval.3199
 899               	.LVL45:
1091:quantum/rgblight.c ****     case 2: b = maxval; break;
 900               		.loc 1 1091 25 is_stmt 1 view .LVU211
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 901               		.loc 1 1088 13 is_stmt 0 view .LVU212
 902 0056 40E0      		ldi r20,0
1088:quantum/rgblight.c ****   switch( anim->pos ) {
 903               		.loc 1 1088 9 view .LVU213
 904 0058 80E0      		ldi r24,0
 905               	.LVL46:
 906               	.L48:
1093:quantum/rgblight.c ****   }
1094:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 907               		.loc 1 1094 3 is_stmt 1 view .LVU214
 908 005a 0E94 0000 		call rgblight_setrgb
 909               	.LVL47:
1095:quantum/rgblight.c ****   anim->pos = (anim->pos + 1) % 3;
 910               		.loc 1 1095 3 view .LVU215
 911               		.loc 1 1095 20 is_stmt 0 view .LVU216
 912 005e F801      		movw r30,r16
 913 0060 8481      		ldd r24,Z+4
 914 0062 90E0      		ldi r25,0
 915               		.loc 1 1095 26 view .LVU217
 916 0064 0196      		adiw r24,1
 917               		.loc 1 1095 31 view .LVU218
 918 0066 63E0      		ldi r22,lo8(3)
 919 0068 70E0      		ldi r23,0
 920 006a 0E94 0000 		call __divmodhi4
 921               		.loc 1 1095 13 view .LVU219
 922 006e 8483      		std Z+4,r24
 923               	/* epilogue start */
1096:quantum/rgblight.c **** }
 924               		.loc 1 1096 1 view .LVU220
 925 0070 0F90      		pop __tmp_reg__
 926 0072 0F90      		pop __tmp_reg__
 927 0074 0F90      		pop __tmp_reg__
 928 0076 0F90      		pop __tmp_reg__
 929 0078 DF91      		pop r29
 930 007a CF91      		pop r28
 931 007c 1F91      		pop r17
 932 007e 0F91      		pop r16
 933               	.LVL48:
 934               		.loc 1 1096 1 view .LVU221
 935 0080 0895      		ret
 936               		.cfi_endproc
 937               	.LFE159:
 939               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 940               	.global	rgblight_sethsv_eeprom_helper
 942               	rgblight_sethsv_eeprom_helper:
 943               	.LVL49:
 944               	.LFB129:
 463:quantum/rgblight.c ****   if (rgblight_config.enable) {
 945               		.loc 1 463 97 is_stmt 1 view -0
 946               		.cfi_startproc
 463:quantum/rgblight.c ****   if (rgblight_config.enable) {
 947               		.loc 1 463 97 is_stmt 0 view .LVU223
 948 0000 5F92      		push r5
 949               	.LCFI20:
 950               		.cfi_def_cfa_offset 3
 951               		.cfi_offset 5, -2
 952 0002 6F92      		push r6
 953               	.LCFI21:
 954               		.cfi_def_cfa_offset 4
 955               		.cfi_offset 6, -3
 956 0004 7F92      		push r7
 957               	.LCFI22:
 958               		.cfi_def_cfa_offset 5
 959               		.cfi_offset 7, -4
 960 0006 8F92      		push r8
 961               	.LCFI23:
 962               		.cfi_def_cfa_offset 6
 963               		.cfi_offset 8, -5
 964 0008 9F92      		push r9
 965               	.LCFI24:
 966               		.cfi_def_cfa_offset 7
 967               		.cfi_offset 9, -6
 968 000a AF92      		push r10
 969               	.LCFI25:
 970               		.cfi_def_cfa_offset 8
 971               		.cfi_offset 10, -7
 972 000c BF92      		push r11
 973               	.LCFI26:
 974               		.cfi_def_cfa_offset 9
 975               		.cfi_offset 11, -8
 976 000e CF92      		push r12
 977               	.LCFI27:
 978               		.cfi_def_cfa_offset 10
 979               		.cfi_offset 12, -9
 980 0010 DF92      		push r13
 981               	.LCFI28:
 982               		.cfi_def_cfa_offset 11
 983               		.cfi_offset 13, -10
 984 0012 EF92      		push r14
 985               	.LCFI29:
 986               		.cfi_def_cfa_offset 12
 987               		.cfi_offset 14, -11
 988 0014 FF92      		push r15
 989               	.LCFI30:
 990               		.cfi_def_cfa_offset 13
 991               		.cfi_offset 15, -12
 992 0016 0F93      		push r16
 993               	.LCFI31:
 994               		.cfi_def_cfa_offset 14
 995               		.cfi_offset 16, -13
 996 0018 1F93      		push r17
 997               	.LCFI32:
 998               		.cfi_def_cfa_offset 15
 999               		.cfi_offset 17, -14
 1000 001a CF93      		push r28
 1001               	.LCFI33:
 1002               		.cfi_def_cfa_offset 16
 1003               		.cfi_offset 28, -15
 1004 001c DF93      		push r29
 1005               	.LCFI34:
 1006               		.cfi_def_cfa_offset 17
 1007               		.cfi_offset 29, -16
 1008 001e 00D0      		rcall .
 1009 0020 00D0      		rcall .
 1010               	.LCFI35:
 1011               		.cfi_def_cfa_offset 21
 1012 0022 CDB7      		in r28,__SP_L__
 1013 0024 DEB7      		in r29,__SP_H__
 1014               	.LCFI36:
 1015               		.cfi_def_cfa_register 28
 1016               	/* prologue: function */
 1017               	/* frame size = 4 */
 1018               	/* stack size = 19 */
 1019               	.L__stack_usage = 19
 1020 0026 182F      		mov r17,r24
 1021 0028 762E      		mov r7,r22
 1022 002a 042F      		mov r16,r20
 1023 002c 622E      		mov r6,r18
 464:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1024               		.loc 1 464 3 is_stmt 1 view .LVU224
 464:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1025               		.loc 1 464 7 is_stmt 0 view .LVU225
 1026 002e 9091 0000 		lds r25,rgblight_config
 464:quantum/rgblight.c ****     rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1027               		.loc 1 464 6 view .LVU226
 1028 0032 90FF      		sbrs r25,0
 1029 0034 00C0      		rjmp .L51
 465:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1030               		.loc 1 465 5 is_stmt 1 view .LVU227
 465:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1031               		.loc 1 465 64 is_stmt 0 view .LVU228
 1032 0036 E92F      		mov r30,r25
 1033 0038 E695      		lsr r30
 1034 003a AE2F      		mov r26,r30
 1035 003c B0E0      		ldi r27,0
 465:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1036               		.loc 1 465 48 view .LVU229
 1037 003e A050      		subi r26,lo8(-(mode_base_table))
 1038 0040 B040      		sbci r27,hi8(-(mode_base_table))
 1039 0042 8C91      		ld r24,X
 1040               	.LVL50:
 465:quantum/rgblight.c ****     if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1041               		.loc 1 465 31 view .LVU230
 1042 0044 8093 0000 		sts rgblight_status,r24
 466:quantum/rgblight.c ****       // same static color
 1043               		.loc 1 466 5 is_stmt 1 view .LVU231
 466:quantum/rgblight.c ****       // same static color
 1044               		.loc 1 466 30 is_stmt 0 view .LVU232
 1045 0048 9E7F      		andi r25,lo8(-2)
 466:quantum/rgblight.c ****       // same static color
 1046               		.loc 1 466 8 view .LVU233
 1047 004a 9230      		cpi r25,lo8(2)
 1048 004c 01F4      		brne .L54
 1049               	.LBB27:
 468:quantum/rgblight.c ****       sethsv(hue, sat, val, &tmp_led);
 1050               		.loc 1 468 7 is_stmt 1 view .LVU234
 469:quantum/rgblight.c ****       rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1051               		.loc 1 469 7 view .LVU235
 1052 004e 9E01      		movw r18,r28
 1053               	.LVL51:
 469:quantum/rgblight.c ****       rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1054               		.loc 1 469 7 is_stmt 0 view .LVU236
 1055 0050 2F5F      		subi r18,-1
 1056 0052 3F4F      		sbci r19,-1
 1057 0054 812F      		mov r24,r17
 1058 0056 0E94 0000 		call sethsv
 1059               	.LVL52:
 470:quantum/rgblight.c ****     } else {
 1060               		.loc 1 470 7 is_stmt 1 view .LVU237
 1061 005a 4B81      		ldd r20,Y+3
 1062 005c 6981      		ldd r22,Y+1
 1063 005e 8A81      		ldd r24,Y+2
 1064 0060 0E94 0000 		call rgblight_setrgb
 1065               	.LVL53:
 1066               	.L55:
 470:quantum/rgblight.c ****     } else {
 1067               		.loc 1 470 7 is_stmt 0 view .LVU238
 1068               	.LBE27:
 525:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1069               		.loc 1 525 5 is_stmt 1 view .LVU239
 525:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1070               		.loc 1 525 25 is_stmt 0 view .LVU240
 1071 0064 1093 0000 		sts rgblight_config+1,r17
 526:quantum/rgblight.c ****     rgblight_config.val = val;
 1072               		.loc 1 526 5 is_stmt 1 view .LVU241
 526:quantum/rgblight.c ****     rgblight_config.val = val;
 1073               		.loc 1 526 25 is_stmt 0 view .LVU242
 1074 0068 7092 0000 		sts rgblight_config+2,r7
 527:quantum/rgblight.c ****     if (write_to_eeprom) {
 1075               		.loc 1 527 5 is_stmt 1 view .LVU243
 527:quantum/rgblight.c ****     if (write_to_eeprom) {
 1076               		.loc 1 527 25 is_stmt 0 view .LVU244
 1077 006c 0093 0000 		sts rgblight_config+3,r16
 528:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 1078               		.loc 1 528 5 is_stmt 1 view .LVU245
 528:quantum/rgblight.c ****       eeconfig_update_rgblight(rgblight_config.raw);
 1079               		.loc 1 528 8 is_stmt 0 view .LVU246
 1080 0070 6620      		tst r6
 1081 0072 01F0      		breq .L51
 529:quantum/rgblight.c ****       xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rg
 1082               		.loc 1 529 7 is_stmt 1 view .LVU247
 1083 0074 6091 0000 		lds r22,rgblight_config
 1084 0078 7091 0000 		lds r23,rgblight_config+1
 1085 007c 8091 0000 		lds r24,rgblight_config+2
 1086 0080 9091 0000 		lds r25,rgblight_config+3
 1087 0084 0E94 0000 		call eeconfig_update_rgblight
 1088               	.LVL54:
 530:quantum/rgblight.c ****     } else {
 1089               		.loc 1 530 118 view .LVU248
 532:quantum/rgblight.c ****     }
 1090               		.loc 1 532 120 view .LVU249
 1091               	.L51:
 1092               	/* epilogue start */
 535:quantum/rgblight.c **** 
 1093               		.loc 1 535 1 is_stmt 0 view .LVU250
 1094 0088 0F90      		pop __tmp_reg__
 1095 008a 0F90      		pop __tmp_reg__
 1096 008c 0F90      		pop __tmp_reg__
 1097 008e 0F90      		pop __tmp_reg__
 1098 0090 DF91      		pop r29
 1099 0092 CF91      		pop r28
 1100 0094 1F91      		pop r17
 1101               	.LVL55:
 535:quantum/rgblight.c **** 
 1102               		.loc 1 535 1 view .LVU251
 1103 0096 0F91      		pop r16
 1104               	.LVL56:
 535:quantum/rgblight.c **** 
 1105               		.loc 1 535 1 view .LVU252
 1106 0098 FF90      		pop r15
 1107 009a EF90      		pop r14
 1108 009c DF90      		pop r13
 1109 009e CF90      		pop r12
 1110 00a0 BF90      		pop r11
 1111 00a2 AF90      		pop r10
 1112 00a4 9F90      		pop r9
 1113 00a6 8F90      		pop r8
 1114 00a8 7F90      		pop r7
 1115               	.LVL57:
 535:quantum/rgblight.c **** 
 1116               		.loc 1 535 1 view .LVU253
 1117 00aa 6F90      		pop r6
 1118               	.LVL58:
 535:quantum/rgblight.c **** 
 1119               		.loc 1 535 1 view .LVU254
 1120 00ac 5F90      		pop r5
 1121 00ae 0895      		ret
 1122               	.LVL59:
 1123               	.L54:
 473:quantum/rgblight.c ****       }
 1124               		.loc 1 473 7 is_stmt 1 view .LVU255
 476:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1125               		.loc 1 476 12 view .LVU256
 476:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1126               		.loc 1 476 15 is_stmt 0 view .LVU257
 1127 00b0 8230      		cpi r24,lo8(2)
 1128 00b2 01F4      		brne .L56
 478:quantum/rgblight.c ****       }
 1129               		.loc 1 478 9 is_stmt 1 view .LVU258
 478:quantum/rgblight.c ****       }
 1130               		.loc 1 478 13 is_stmt 0 view .LVU259
 1131 00b4 0091 0000 		lds r16,rgblight_config+3
 1132               	.LVL60:
 478:quantum/rgblight.c ****       }
 1133               		.loc 1 478 13 view .LVU260
 1134 00b8 00C0      		rjmp .L55
 1135               	.L56:
 482:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 1136               		.loc 1 482 12 is_stmt 1 view .LVU261
 482:quantum/rgblight.c ****         // rainbow mood, ignore the change of hue
 1137               		.loc 1 482 15 is_stmt 0 view .LVU262
 1138 00ba 8630      		cpi r24,lo8(6)
 1139 00bc 01F4      		brne .L57
 1140               	.L58:
 484:quantum/rgblight.c ****       }
 1141               		.loc 1 484 9 is_stmt 1 view .LVU263
 484:quantum/rgblight.c ****       }
 1142               		.loc 1 484 13 is_stmt 0 view .LVU264
 1143 00be 1091 0000 		lds r17,rgblight_config+1
 1144               	.LVL61:
 484:quantum/rgblight.c ****       }
 1145               		.loc 1 484 13 view .LVU265
 1146 00c2 00C0      		rjmp .L55
 1147               	.L57:
 488:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 1148               		.loc 1 488 12 is_stmt 1 view .LVU266
 488:quantum/rgblight.c ****         // rainbow swirl, ignore the change of hue
 1149               		.loc 1 488 15 is_stmt 0 view .LVU267
 1150 00c4 8930      		cpi r24,lo8(9)
 1151 00c6 01F0      		breq .L58
 494:quantum/rgblight.c ****         // static gradient
 1152               		.loc 1 494 12 is_stmt 1 view .LVU268
 494:quantum/rgblight.c ****         // static gradient
 1153               		.loc 1 494 15 is_stmt 0 view .LVU269
 1154 00c8 8931      		cpi r24,lo8(25)
 1155 00ca 01F4      		brne .L55
 1156               	.LBB28:
 496:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 1157               		.loc 1 496 9 is_stmt 1 view .LVU270
 496:quantum/rgblight.c ****         bool direction = (delta % 2) == 0;
 1158               		.loc 1 496 17 is_stmt 0 view .LVU271
 1159 00cc E951      		subi r30,lo8(-(-25))
 1160               	.LVL62:
 497:quantum/rgblight.c **** #ifdef __AVR__
 1161               		.loc 1 497 9 is_stmt 1 view .LVU272
 497:quantum/rgblight.c **** #ifdef __AVR__
 1162               		.loc 1 497 38 is_stmt 0 view .LVU273
 1163 00ce 8E2F      		mov r24,r30
 1164 00d0 8170      		andi r24,lo8(1)
 1165 00d2 582E      		mov r5,r24
 1166               	.LVL63:
 500:quantum/rgblight.c **** #else
 1167               		.loc 1 500 9 is_stmt 1 view .LVU274
 1168               	.LBB29:
 500:quantum/rgblight.c **** #else
 1169               		.loc 1 500 25 view .LVU275
 1170 00d4 E695      		lsr r30
 1171               	.LVL64:
 500:quantum/rgblight.c **** #else
 1172               		.loc 1 500 25 is_stmt 0 view .LVU276
 1173 00d6 F0E0      		ldi r31,0
 1174 00d8 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1175 00da F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1176               	.LVL65:
 500:quantum/rgblight.c **** #else
 1177               		.loc 1 500 25 is_stmt 1 view .LVU277
 500:quantum/rgblight.c **** #else
 1178               		.loc 1 500 25 view .LVU278
 1179               	/* #APP */
 1180               	 ;  500 "quantum/rgblight.c" 1
 1181 00dc A590      		lpm r10, Z+
 1182 00de B490      		lpm r11, Z
 1183               		
 1184               	 ;  0 "" 2
 1185               	.LVL66:
 500:quantum/rgblight.c **** #else
 1186               		.loc 1 500 25 view .LVU279
 500:quantum/rgblight.c **** #else
 1187               		.loc 1 500 25 is_stmt 0 view .LVU280
 1188               	/* #NOAPP */
 1189               	.LBE29:
 504:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 1190               		.loc 1 504 9 is_stmt 1 view .LVU281
 1191               	.LBB30:
 504:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 1192               		.loc 1 504 14 view .LVU282
 504:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 1193               		.loc 1 504 14 is_stmt 0 view .LVU283
 1194 00e0 BB24      		clr r11
 1195               	.LVL67:
 504:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 1196               		.loc 1 504 14 view .LVU284
 1197 00e2 80E0      		ldi r24,lo8(led)
 1198 00e4 E82E      		mov r14,r24
 1199 00e6 80E0      		ldi r24,hi8(led)
 1200 00e8 F82E      		mov r15,r24
 1201               	.LBE30:
 1202               	.LBB33:
 500:quantum/rgblight.c **** #else
 1203               		.loc 1 500 25 view .LVU285
 1204 00ea D12C      		mov r13,__zero_reg__
 1205 00ec C12C      		mov r12,__zero_reg__
 1206               	.LBE33:
 1207               	.LBB34:
 1208               	.LBB31:
 505:quantum/rgblight.c ****           if (direction) {
 1209               		.loc 1 505 58 view .LVU286
 1210 00ee 9FE0      		ldi r25,lo8(15)
 1211 00f0 892E      		mov r8,r25
 1212 00f2 912C      		mov r9,__zero_reg__
 1213               	.LVL68:
 1214               	.L61:
 505:quantum/rgblight.c ****           if (direction) {
 1215               		.loc 1 505 11 is_stmt 1 view .LVU287
 505:quantum/rgblight.c ****           if (direction) {
 1216               		.loc 1 505 58 is_stmt 0 view .LVU288
 1217 00f4 C601      		movw r24,r12
 1218 00f6 B401      		movw r22,r8
 1219 00f8 0E94 0000 		call __udivmodhi4
 1220               	.LVL69:
 506:quantum/rgblight.c ****             _hue = hue + _hue;
 1221               		.loc 1 506 11 is_stmt 1 view .LVU289
 507:quantum/rgblight.c ****           } else {
 1222               		.loc 1 507 18 is_stmt 0 view .LVU290
 1223 00fc 812F      		mov r24,r17
 506:quantum/rgblight.c ****             _hue = hue + _hue;
 1224               		.loc 1 506 14 view .LVU291
 1225 00fe 5110      		cpse r5,__zero_reg__
 1226 0100 00C0      		rjmp .L59
 507:quantum/rgblight.c ****           } else {
 1227               		.loc 1 507 13 is_stmt 1 view .LVU292
 507:quantum/rgblight.c ****           } else {
 1228               		.loc 1 507 18 is_stmt 0 view .LVU293
 1229 0102 860F      		add r24,r22
 1230               	.LVL70:
 1231               	.L60:
 511:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i]);
 1232               		.loc 1 511 88 is_stmt 1 discriminator 2 view .LVU294
 512:quantum/rgblight.c ****         }
 1233               		.loc 1 512 11 discriminator 2 view .LVU295
 1234 0104 9701      		movw r18,r14
 1235 0106 402F      		mov r20,r16
 1236 0108 672D      		mov r22,r7
 1237 010a 0E94 0000 		call sethsv
 1238               	.LVL71:
 512:quantum/rgblight.c ****         }
 1239               		.loc 1 512 11 is_stmt 0 discriminator 2 view .LVU296
 1240 010e CA0C      		add r12,r10
 1241 0110 DB1C      		adc r13,r11
 1242 0112 84E0      		ldi r24,4
 1243 0114 E80E      		add r14,r24
 1244 0116 F11C      		adc r15,__zero_reg__
 1245               	.LBE31:
 504:quantum/rgblight.c ****           uint8_t _hue = ((uint16_t)i * (uint16_t)range) / RGBLED_NUM;
 1246               		.loc 1 504 9 discriminator 2 view .LVU297
 1247 0118 80E0      		ldi r24,lo8(led+60)
 1248 011a E816      		cp r14,r24
 1249 011c 80E0      		ldi r24,hi8(led+60)
 1250 011e F806      		cpc r15,r24
 1251 0120 01F4      		brne .L61
 1252               	.LBE34:
 514:quantum/rgblight.c ****       }
 1253               		.loc 1 514 9 is_stmt 1 view .LVU298
 1254 0122 0E94 0000 		call rgblight_set
 1255               	.LVL72:
 1256 0126 00C0      		rjmp .L55
 1257               	.LVL73:
 1258               	.L59:
 1259               	.LBB35:
 1260               	.LBB32:
 509:quantum/rgblight.c ****           }
 1261               		.loc 1 509 13 view .LVU299
 509:quantum/rgblight.c ****           }
 1262               		.loc 1 509 18 is_stmt 0 view .LVU300
 1263 0128 861B      		sub r24,r22
 1264               	.LVL74:
 509:quantum/rgblight.c ****           }
 1265               		.loc 1 509 18 view .LVU301
 1266 012a 00C0      		rjmp .L60
 1267               	.LBE32:
 1268               	.LBE35:
 1269               	.LBE28:
 1270               		.cfi_endproc
 1271               	.LFE129:
 1273               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1274               	.global	rgblight_increase_hue_helper
 1276               	rgblight_increase_hue_helper:
 1277               	.LVL75:
 1278               	.LFB108:
 380:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1279               		.loc 1 380 57 is_stmt 1 view -0
 1280               		.cfi_startproc
 1281               	/* prologue: function */
 1282               	/* frame size = 0 */
 1283               	/* stack size = 0 */
 1284               	.L__stack_usage = 0
 381:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1285               		.loc 1 381 3 view .LVU303
 382:quantum/rgblight.c **** }
 1286               		.loc 1 382 3 view .LVU304
 1287 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1288 0002 F0E0      		ldi r31,hi8(rgblight_config)
 381:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1289               		.loc 1 381 11 is_stmt 0 view .LVU305
 1290 0004 9181      		ldd r25,Z+1
 382:quantum/rgblight.c **** }
 1291               		.loc 1 382 3 view .LVU306
 1292 0006 282F      		mov r18,r24
 1293 0008 4381      		ldd r20,Z+3
 1294 000a 6281      		ldd r22,Z+2
 1295 000c 8CE0      		ldi r24,lo8(12)
 1296               	.LVL76:
 382:quantum/rgblight.c **** }
 1297               		.loc 1 382 3 view .LVU307
 1298 000e 890F      		add r24,r25
 1299               	.LVL77:
 382:quantum/rgblight.c **** }
 1300               		.loc 1 382 3 view .LVU308
 1301 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1302               	.LVL78:
 382:quantum/rgblight.c **** }
 1303               		.loc 1 382 3 view .LVU309
 1304               		.cfi_endproc
 1305               	.LFE108:
 1307               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1308               	.global	rgblight_increase_hue_noeeprom
 1310               	rgblight_increase_hue_noeeprom:
 1311               	.LFB109:
 384:quantum/rgblight.c ****   rgblight_increase_hue_helper(false);
 1312               		.loc 1 384 43 is_stmt 1 view -0
 1313               		.cfi_startproc
 1314               	/* prologue: function */
 1315               	/* frame size = 0 */
 1316               	/* stack size = 0 */
 1317               	.L__stack_usage = 0
 385:quantum/rgblight.c **** }
 1318               		.loc 1 385 3 view .LVU311
 1319 0000 80E0      		ldi r24,0
 1320 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1321               	.LVL79:
 1322               		.cfi_endproc
 1323               	.LFE109:
 1325               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1326               	.global	rgblight_increase_hue
 1328               	rgblight_increase_hue:
 1329               	.LFB110:
 387:quantum/rgblight.c ****   rgblight_increase_hue_helper(true);
 1330               		.loc 1 387 34 view -0
 1331               		.cfi_startproc
 1332               	/* prologue: function */
 1333               	/* frame size = 0 */
 1334               	/* stack size = 0 */
 1335               	.L__stack_usage = 0
 388:quantum/rgblight.c **** }
 1336               		.loc 1 388 3 view .LVU313
 1337 0000 81E0      		ldi r24,lo8(1)
 1338 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1339               	.LVL80:
 1340               		.cfi_endproc
 1341               	.LFE110:
 1343               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1344               	.global	rgblight_decrease_hue_helper
 1346               	rgblight_decrease_hue_helper:
 1347               	.LVL81:
 1348               	.LFB111:
 390:quantum/rgblight.c ****   uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1349               		.loc 1 390 57 view -0
 1350               		.cfi_startproc
 1351               	/* prologue: function */
 1352               	/* frame size = 0 */
 1353               	/* stack size = 0 */
 1354               	.L__stack_usage = 0
 391:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1355               		.loc 1 391 3 view .LVU315
 392:quantum/rgblight.c **** }
 1356               		.loc 1 392 3 view .LVU316
 1357 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1358 0002 F0E0      		ldi r31,hi8(rgblight_config)
 391:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1359               		.loc 1 391 11 is_stmt 0 view .LVU317
 1360 0004 9181      		ldd r25,Z+1
 392:quantum/rgblight.c **** }
 1361               		.loc 1 392 3 view .LVU318
 1362 0006 282F      		mov r18,r24
 1363 0008 4381      		ldd r20,Z+3
 1364 000a 6281      		ldd r22,Z+2
 1365 000c 84EF      		ldi r24,lo8(-12)
 1366               	.LVL82:
 392:quantum/rgblight.c **** }
 1367               		.loc 1 392 3 view .LVU319
 1368 000e 890F      		add r24,r25
 1369               	.LVL83:
 392:quantum/rgblight.c **** }
 1370               		.loc 1 392 3 view .LVU320
 1371 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1372               	.LVL84:
 392:quantum/rgblight.c **** }
 1373               		.loc 1 392 3 view .LVU321
 1374               		.cfi_endproc
 1375               	.LFE111:
 1377               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1378               	.global	rgblight_decrease_hue_noeeprom
 1380               	rgblight_decrease_hue_noeeprom:
 1381               	.LFB112:
 394:quantum/rgblight.c ****   rgblight_decrease_hue_helper(false);
 1382               		.loc 1 394 43 is_stmt 1 view -0
 1383               		.cfi_startproc
 1384               	/* prologue: function */
 1385               	/* frame size = 0 */
 1386               	/* stack size = 0 */
 1387               	.L__stack_usage = 0
 395:quantum/rgblight.c **** }
 1388               		.loc 1 395 3 view .LVU323
 1389 0000 80E0      		ldi r24,0
 1390 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1391               	.LVL85:
 1392               		.cfi_endproc
 1393               	.LFE112:
 1395               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1396               	.global	rgblight_decrease_hue
 1398               	rgblight_decrease_hue:
 1399               	.LFB113:
 397:quantum/rgblight.c ****   rgblight_decrease_hue_helper(true);
 1400               		.loc 1 397 34 view -0
 1401               		.cfi_startproc
 1402               	/* prologue: function */
 1403               	/* frame size = 0 */
 1404               	/* stack size = 0 */
 1405               	.L__stack_usage = 0
 398:quantum/rgblight.c **** }
 1406               		.loc 1 398 3 view .LVU325
 1407 0000 81E0      		ldi r24,lo8(1)
 1408 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1409               	.LVL86:
 1410               		.cfi_endproc
 1411               	.LFE113:
 1413               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1414               	.global	rgblight_increase_sat_helper
 1416               	rgblight_increase_sat_helper:
 1417               	.LVL87:
 1418               	.LFB114:
 400:quantum/rgblight.c ****   uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1419               		.loc 1 400 57 view -0
 1420               		.cfi_startproc
 1421               	/* prologue: function */
 1422               	/* frame size = 0 */
 1423               	/* stack size = 0 */
 1424               	.L__stack_usage = 0
 401:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1425               		.loc 1 401 3 view .LVU327
 1426               	.LBB36:
 1427               	.LBI36:
 1428               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1429               		.loc 2 23 34 view .LVU328
 1430               	.LBB37:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1431               		.loc 2 30 5 view .LVU329
 1432               	.LBE37:
 1433               	.LBE36:
 401:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1434               		.loc 1 401 17 is_stmt 0 view .LVU330
 1435 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1436 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1437               	.LBB39:
 1438               	.LBB38:
 1439               		.loc 2 30 5 view .LVU331
 1440 0004 6281      		ldd r22,Z+2
 1441 0006 2FEF      		ldi r18,lo8(-1)
 1442               	/* #APP */
 1443               	 ;  30 "./lib/lib8tion/math8.h" 1
 1444 0008 620F      		add r22, r18    
 1445 000a 00F4      		brcc L_1115     
 1446 000c 6FEF      		ldi r22, 0xFF  
 1447               		L_1115: 
 1448               	 ;  0 "" 2
 1449               	.LVL88:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1450               		.loc 2 43 5 is_stmt 1 view .LVU332
 1451               		.loc 2 43 5 is_stmt 0 view .LVU333
 1452               	/* #NOAPP */
 1453               	.LBE38:
 1454               	.LBE39:
 402:quantum/rgblight.c **** }
 1455               		.loc 1 402 3 is_stmt 1 view .LVU334
 1456 000e 282F      		mov r18,r24
 1457 0010 4381      		ldd r20,Z+3
 1458 0012 8181      		ldd r24,Z+1
 1459               	.LVL89:
 402:quantum/rgblight.c **** }
 1460               		.loc 1 402 3 is_stmt 0 view .LVU335
 1461 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1462               	.LVL90:
 402:quantum/rgblight.c **** }
 1463               		.loc 1 402 3 view .LVU336
 1464               		.cfi_endproc
 1465               	.LFE114:
 1467               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1468               	.global	rgblight_increase_sat_noeeprom
 1470               	rgblight_increase_sat_noeeprom:
 1471               	.LFB115:
 404:quantum/rgblight.c ****   rgblight_increase_sat_helper(false);
 1472               		.loc 1 404 43 is_stmt 1 view -0
 1473               		.cfi_startproc
 1474               	/* prologue: function */
 1475               	/* frame size = 0 */
 1476               	/* stack size = 0 */
 1477               	.L__stack_usage = 0
 405:quantum/rgblight.c **** }
 1478               		.loc 1 405 3 view .LVU338
 1479 0000 80E0      		ldi r24,0
 1480 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1481               	.LVL91:
 1482               		.cfi_endproc
 1483               	.LFE115:
 1485               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1486               	.global	rgblight_increase_sat
 1488               	rgblight_increase_sat:
 1489               	.LFB116:
 407:quantum/rgblight.c ****   rgblight_increase_sat_helper(true);
 1490               		.loc 1 407 34 view -0
 1491               		.cfi_startproc
 1492               	/* prologue: function */
 1493               	/* frame size = 0 */
 1494               	/* stack size = 0 */
 1495               	.L__stack_usage = 0
 408:quantum/rgblight.c **** }
 1496               		.loc 1 408 3 view .LVU340
 1497 0000 81E0      		ldi r24,lo8(1)
 1498 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1499               	.LVL92:
 1500               		.cfi_endproc
 1501               	.LFE116:
 1503               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1504               	.global	rgblight_decrease_sat_helper
 1506               	rgblight_decrease_sat_helper:
 1507               	.LVL93:
 1508               	.LFB117:
 410:quantum/rgblight.c ****   uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1509               		.loc 1 410 57 view -0
 1510               		.cfi_startproc
 1511               	/* prologue: function */
 1512               	/* frame size = 0 */
 1513               	/* stack size = 0 */
 1514               	.L__stack_usage = 0
 411:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1515               		.loc 1 411 3 view .LVU342
 1516               	.LBB40:
 1517               	.LBI40:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1518               		.loc 2 88 34 view .LVU343
 1519               	.LBB41:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1520               		.loc 2 96 5 view .LVU344
 1521               	.LBE41:
 1522               	.LBE40:
 411:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1523               		.loc 1 411 17 is_stmt 0 view .LVU345
 1524 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1525 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1526               	.LBB43:
 1527               	.LBB42:
 1528               		.loc 2 96 5 view .LVU346
 1529 0004 6281      		ldd r22,Z+2
 1530 0006 2FEF      		ldi r18,lo8(-1)
 1531               	/* #APP */
 1532               	 ;  96 "./lib/lib8tion/math8.h" 1
 1533 0008 621B      		sub r22, r18    
 1534 000a 00F4      		brcc L_1171     
 1535 000c 60E0      		ldi r22, 0x00  
 1536               		L_1171: 
 1537               	 ;  0 "" 2
 1538               	.LVL94:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1539               		.loc 2 110 5 is_stmt 1 view .LVU347
 1540               		.loc 2 110 5 is_stmt 0 view .LVU348
 1541               	/* #NOAPP */
 1542               	.LBE42:
 1543               	.LBE43:
 412:quantum/rgblight.c **** }
 1544               		.loc 1 412 3 is_stmt 1 view .LVU349
 1545 000e 282F      		mov r18,r24
 1546 0010 4381      		ldd r20,Z+3
 1547 0012 8181      		ldd r24,Z+1
 1548               	.LVL95:
 412:quantum/rgblight.c **** }
 1549               		.loc 1 412 3 is_stmt 0 view .LVU350
 1550 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1551               	.LVL96:
 412:quantum/rgblight.c **** }
 1552               		.loc 1 412 3 view .LVU351
 1553               		.cfi_endproc
 1554               	.LFE117:
 1556               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1557               	.global	rgblight_decrease_sat_noeeprom
 1559               	rgblight_decrease_sat_noeeprom:
 1560               	.LFB118:
 414:quantum/rgblight.c ****   rgblight_decrease_sat_helper(false);
 1561               		.loc 1 414 43 is_stmt 1 view -0
 1562               		.cfi_startproc
 1563               	/* prologue: function */
 1564               	/* frame size = 0 */
 1565               	/* stack size = 0 */
 1566               	.L__stack_usage = 0
 415:quantum/rgblight.c **** }
 1567               		.loc 1 415 3 view .LVU353
 1568 0000 80E0      		ldi r24,0
 1569 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1570               	.LVL97:
 1571               		.cfi_endproc
 1572               	.LFE118:
 1574               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1575               	.global	rgblight_decrease_sat
 1577               	rgblight_decrease_sat:
 1578               	.LFB119:
 417:quantum/rgblight.c ****   rgblight_decrease_sat_helper(true);
 1579               		.loc 1 417 34 view -0
 1580               		.cfi_startproc
 1581               	/* prologue: function */
 1582               	/* frame size = 0 */
 1583               	/* stack size = 0 */
 1584               	.L__stack_usage = 0
 418:quantum/rgblight.c **** }
 1585               		.loc 1 418 3 view .LVU355
 1586 0000 81E0      		ldi r24,lo8(1)
 1587 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1588               	.LVL98:
 1589               		.cfi_endproc
 1590               	.LFE119:
 1592               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1593               	.global	rgblight_increase_val_helper
 1595               	rgblight_increase_val_helper:
 1596               	.LVL99:
 1597               	.LFB120:
 420:quantum/rgblight.c ****   uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1598               		.loc 1 420 57 view -0
 1599               		.cfi_startproc
 1600               	/* prologue: function */
 1601               	/* frame size = 0 */
 1602               	/* stack size = 0 */
 1603               	.L__stack_usage = 0
 421:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1604               		.loc 1 421 3 view .LVU357
 1605               	.LBB44:
 1606               	.LBI44:
  23:./lib/lib8tion/math8.h **** {
 1607               		.loc 2 23 34 view .LVU358
 1608               	.LBB45:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1609               		.loc 2 30 5 view .LVU359
 1610               	.LBE45:
 1611               	.LBE44:
 421:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1612               		.loc 1 421 17 is_stmt 0 view .LVU360
 1613 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1614 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1615               	.LBB47:
 1616               	.LBB46:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1617               		.loc 2 30 5 view .LVU361
 1618 0004 4381      		ldd r20,Z+3
 1619 0006 2CE0      		ldi r18,lo8(12)
 1620               	/* #APP */
 1621               	 ;  30 "./lib/lib8tion/math8.h" 1
 1622 0008 420F      		add r20, r18    
 1623 000a 00F4      		brcc L_1227     
 1624 000c 4FEF      		ldi r20, 0xFF  
 1625               		L_1227: 
 1626               	 ;  0 "" 2
 1627               	.LVL100:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1628               		.loc 2 43 5 is_stmt 1 view .LVU362
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1629               		.loc 2 43 5 is_stmt 0 view .LVU363
 1630               	/* #NOAPP */
 1631               	.LBE46:
 1632               	.LBE47:
 422:quantum/rgblight.c **** }
 1633               		.loc 1 422 3 is_stmt 1 view .LVU364
 1634 000e 282F      		mov r18,r24
 1635 0010 6281      		ldd r22,Z+2
 1636 0012 8181      		ldd r24,Z+1
 1637               	.LVL101:
 422:quantum/rgblight.c **** }
 1638               		.loc 1 422 3 is_stmt 0 view .LVU365
 1639 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1640               	.LVL102:
 422:quantum/rgblight.c **** }
 1641               		.loc 1 422 3 view .LVU366
 1642               		.cfi_endproc
 1643               	.LFE120:
 1645               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 1646               	.global	rgblight_increase_val_noeeprom
 1648               	rgblight_increase_val_noeeprom:
 1649               	.LFB121:
 424:quantum/rgblight.c ****   rgblight_increase_val_helper(false);
 1650               		.loc 1 424 43 is_stmt 1 view -0
 1651               		.cfi_startproc
 1652               	/* prologue: function */
 1653               	/* frame size = 0 */
 1654               	/* stack size = 0 */
 1655               	.L__stack_usage = 0
 425:quantum/rgblight.c **** }
 1656               		.loc 1 425 3 view .LVU368
 1657 0000 80E0      		ldi r24,0
 1658 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1659               	.LVL103:
 1660               		.cfi_endproc
 1661               	.LFE121:
 1663               		.section	.text.rgblight_increase_val,"ax",@progbits
 1664               	.global	rgblight_increase_val
 1666               	rgblight_increase_val:
 1667               	.LFB122:
 427:quantum/rgblight.c ****   rgblight_increase_val_helper(true);
 1668               		.loc 1 427 34 view -0
 1669               		.cfi_startproc
 1670               	/* prologue: function */
 1671               	/* frame size = 0 */
 1672               	/* stack size = 0 */
 1673               	.L__stack_usage = 0
 428:quantum/rgblight.c **** }
 1674               		.loc 1 428 3 view .LVU370
 1675 0000 81E0      		ldi r24,lo8(1)
 1676 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1677               	.LVL104:
 1678               		.cfi_endproc
 1679               	.LFE122:
 1681               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 1682               	.global	rgblight_decrease_val_helper
 1684               	rgblight_decrease_val_helper:
 1685               	.LVL105:
 1686               	.LFB123:
 430:quantum/rgblight.c ****   uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1687               		.loc 1 430 57 view -0
 1688               		.cfi_startproc
 1689               	/* prologue: function */
 1690               	/* frame size = 0 */
 1691               	/* stack size = 0 */
 1692               	.L__stack_usage = 0
 431:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1693               		.loc 1 431 3 view .LVU372
 1694               	.LBB48:
 1695               	.LBI48:
  88:./lib/lib8tion/math8.h **** {
 1696               		.loc 2 88 34 view .LVU373
 1697               	.LBB49:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1698               		.loc 2 96 5 view .LVU374
 1699               	.LBE49:
 1700               	.LBE48:
 431:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1701               		.loc 1 431 17 is_stmt 0 view .LVU375
 1702 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1703 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1704               	.LBB51:
 1705               	.LBB50:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1706               		.loc 2 96 5 view .LVU376
 1707 0004 4381      		ldd r20,Z+3
 1708 0006 2CE0      		ldi r18,lo8(12)
 1709               	/* #APP */
 1710               	 ;  96 "./lib/lib8tion/math8.h" 1
 1711 0008 421B      		sub r20, r18    
 1712 000a 00F4      		brcc L_1283     
 1713 000c 40E0      		ldi r20, 0x00  
 1714               		L_1283: 
 1715               	 ;  0 "" 2
 1716               	.LVL106:
 1717               		.loc 2 110 5 is_stmt 1 view .LVU377
 1718               		.loc 2 110 5 is_stmt 0 view .LVU378
 1719               	/* #NOAPP */
 1720               	.LBE50:
 1721               	.LBE51:
 432:quantum/rgblight.c **** }
 1722               		.loc 1 432 3 is_stmt 1 view .LVU379
 1723 000e 282F      		mov r18,r24
 1724 0010 6281      		ldd r22,Z+2
 1725 0012 8181      		ldd r24,Z+1
 1726               	.LVL107:
 432:quantum/rgblight.c **** }
 1727               		.loc 1 432 3 is_stmt 0 view .LVU380
 1728 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1729               	.LVL108:
 432:quantum/rgblight.c **** }
 1730               		.loc 1 432 3 view .LVU381
 1731               		.cfi_endproc
 1732               	.LFE123:
 1734               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 1735               	.global	rgblight_decrease_val_noeeprom
 1737               	rgblight_decrease_val_noeeprom:
 1738               	.LFB124:
 434:quantum/rgblight.c ****   rgblight_decrease_val_helper(false);
 1739               		.loc 1 434 43 is_stmt 1 view -0
 1740               		.cfi_startproc
 1741               	/* prologue: function */
 1742               	/* frame size = 0 */
 1743               	/* stack size = 0 */
 1744               	.L__stack_usage = 0
 435:quantum/rgblight.c **** }
 1745               		.loc 1 435 3 view .LVU383
 1746 0000 80E0      		ldi r24,0
 1747 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1748               	.LVL109:
 1749               		.cfi_endproc
 1750               	.LFE124:
 1752               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1753               	.global	rgblight_decrease_val
 1755               	rgblight_decrease_val:
 1756               	.LFB125:
 437:quantum/rgblight.c ****   rgblight_decrease_val_helper(true);
 1757               		.loc 1 437 34 view -0
 1758               		.cfi_startproc
 1759               	/* prologue: function */
 1760               	/* frame size = 0 */
 1761               	/* stack size = 0 */
 1762               	.L__stack_usage = 0
 438:quantum/rgblight.c **** }
 1763               		.loc 1 438 3 view .LVU385
 1764 0000 81E0      		ldi r24,lo8(1)
 1765 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1766               	.LVL110:
 1767               		.cfi_endproc
 1768               	.LFE125:
 1770               		.section	.text.rgblight_sethsv,"ax",@progbits
 1771               	.global	rgblight_sethsv
 1773               	rgblight_sethsv:
 1774               	.LVL111:
 1775               	.LFB130:
 537:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, true);
 1776               		.loc 1 537 61 view -0
 1777               		.cfi_startproc
 1778               	/* prologue: function */
 1779               	/* frame size = 0 */
 1780               	/* stack size = 0 */
 1781               	.L__stack_usage = 0
 538:quantum/rgblight.c **** }
 1782               		.loc 1 538 3 view .LVU387
 1783 0000 21E0      		ldi r18,lo8(1)
 1784 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1785               	.LVL112:
 538:quantum/rgblight.c **** }
 1786               		.loc 1 538 3 is_stmt 0 view .LVU388
 1787               		.cfi_endproc
 1788               	.LFE130:
 1790               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 1791               	.global	rgblight_sethsv_noeeprom
 1793               	rgblight_sethsv_noeeprom:
 1794               	.LVL113:
 1795               	.LFB131:
 541:quantum/rgblight.c ****   rgblight_sethsv_eeprom_helper(hue, sat, val, false);
 1796               		.loc 1 541 70 is_stmt 1 view -0
 1797               		.cfi_startproc
 1798               	/* prologue: function */
 1799               	/* frame size = 0 */
 1800               	/* stack size = 0 */
 1801               	.L__stack_usage = 0
 542:quantum/rgblight.c **** }
 1802               		.loc 1 542 3 view .LVU390
 1803 0000 20E0      		ldi r18,0
 1804 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1805               	.LVL114:
 542:quantum/rgblight.c **** }
 1806               		.loc 1 542 3 is_stmt 0 view .LVU391
 1807               		.cfi_endproc
 1808               	.LFE131:
 1810               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 1811               	.global	rgblight_setrgb_at
 1813               	rgblight_setrgb_at:
 1814               	.LVL115:
 1815               	.LFB136:
 568:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 1816               		.loc 1 568 73 is_stmt 1 view -0
 1817               		.cfi_startproc
 1818               	/* prologue: function */
 1819               	/* frame size = 0 */
 1820               	/* stack size = 0 */
 1821               	.L__stack_usage = 0
 569:quantum/rgblight.c **** 
 1822               		.loc 1 569 3 view .LVU393
 569:quantum/rgblight.c **** 
 1823               		.loc 1 569 23 is_stmt 0 view .LVU394
 1824 0000 9091 0000 		lds r25,rgblight_config
 569:quantum/rgblight.c **** 
 1825               		.loc 1 569 6 view .LVU395
 1826 0004 90FF      		sbrs r25,0
 1827 0006 00C0      		rjmp .L90
 569:quantum/rgblight.c **** 
 1828               		.loc 1 569 31 discriminator 2 view .LVU396
 1829 0008 2F30      		cpi r18,lo8(15)
 1830 000a 00F4      		brsh .L90
 571:quantum/rgblight.c ****   led[index].g = g;
 1831               		.loc 1 571 3 is_stmt 1 view .LVU397
 571:quantum/rgblight.c ****   led[index].g = g;
 1832               		.loc 1 571 16 is_stmt 0 view .LVU398
 1833 000c 94E0      		ldi r25,lo8(4)
 1834 000e 299F      		mul r18,r25
 1835 0010 F001      		movw r30,r0
 1836 0012 1124      		clr __zero_reg__
 1837 0014 E050      		subi r30,lo8(-(led))
 1838 0016 F040      		sbci r31,hi8(-(led))
 1839 0018 8183      		std Z+1,r24
 572:quantum/rgblight.c ****   led[index].b = b;
 1840               		.loc 1 572 3 is_stmt 1 view .LVU399
 572:quantum/rgblight.c ****   led[index].b = b;
 1841               		.loc 1 572 16 is_stmt 0 view .LVU400
 1842 001a 6083      		st Z,r22
 573:quantum/rgblight.c ****   rgblight_set();
 1843               		.loc 1 573 3 is_stmt 1 view .LVU401
 573:quantum/rgblight.c ****   rgblight_set();
 1844               		.loc 1 573 16 is_stmt 0 view .LVU402
 1845 001c 4283      		std Z+2,r20
 574:quantum/rgblight.c **** }
 1846               		.loc 1 574 3 is_stmt 1 view .LVU403
 1847 001e 0C94 0000 		jmp rgblight_set
 1848               	.LVL116:
 1849               	.L90:
 1850               	/* epilogue start */
 575:quantum/rgblight.c **** 
 1851               		.loc 1 575 1 is_stmt 0 view .LVU404
 1852 0022 0895      		ret
 1853               		.cfi_endproc
 1854               	.LFE136:
 1856               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 1857               	.global	rgblight_sethsv_at
 1859               	rgblight_sethsv_at:
 1860               	.LVL117:
 1861               	.LFB137:
 577:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 1862               		.loc 1 577 79 is_stmt 1 view -0
 1863               		.cfi_startproc
 577:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 1864               		.loc 1 577 79 is_stmt 0 view .LVU406
 1865 0000 1F93      		push r17
 1866               	.LCFI37:
 1867               		.cfi_def_cfa_offset 3
 1868               		.cfi_offset 17, -2
 1869 0002 CF93      		push r28
 1870               	.LCFI38:
 1871               		.cfi_def_cfa_offset 4
 1872               		.cfi_offset 28, -3
 1873 0004 DF93      		push r29
 1874               	.LCFI39:
 1875               		.cfi_def_cfa_offset 5
 1876               		.cfi_offset 29, -4
 1877 0006 00D0      		rcall .
 1878 0008 00D0      		rcall .
 1879               	.LCFI40:
 1880               		.cfi_def_cfa_offset 9
 1881 000a CDB7      		in r28,__SP_L__
 1882 000c DEB7      		in r29,__SP_H__
 1883               	.LCFI41:
 1884               		.cfi_def_cfa_register 28
 1885               	/* prologue: function */
 1886               	/* frame size = 4 */
 1887               	/* stack size = 7 */
 1888               	.L__stack_usage = 7
 1889 000e 122F      		mov r17,r18
 578:quantum/rgblight.c **** 
 1890               		.loc 1 578 3 is_stmt 1 view .LVU407
 578:quantum/rgblight.c **** 
 1891               		.loc 1 578 23 is_stmt 0 view .LVU408
 1892 0010 9091 0000 		lds r25,rgblight_config
 578:quantum/rgblight.c **** 
 1893               		.loc 1 578 6 view .LVU409
 1894 0014 90FF      		sbrs r25,0
 1895 0016 00C0      		rjmp .L95
 580:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 1896               		.loc 1 580 3 is_stmt 1 view .LVU410
 581:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 1897               		.loc 1 581 3 view .LVU411
 1898 0018 9E01      		movw r18,r28
 1899               	.LVL118:
 581:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 1900               		.loc 1 581 3 is_stmt 0 view .LVU412
 1901 001a 2F5F      		subi r18,-1
 1902 001c 3F4F      		sbci r19,-1
 1903 001e 0E94 0000 		call sethsv
 1904               	.LVL119:
 582:quantum/rgblight.c **** }
 1905               		.loc 1 582 3 is_stmt 1 view .LVU413
 1906 0022 212F      		mov r18,r17
 1907 0024 4B81      		ldd r20,Y+3
 1908 0026 6981      		ldd r22,Y+1
 1909 0028 8A81      		ldd r24,Y+2
 1910 002a 0E94 0000 		call rgblight_setrgb_at
 1911               	.LVL120:
 1912               	.L95:
 1913               	/* epilogue start */
 583:quantum/rgblight.c **** 
 1914               		.loc 1 583 1 is_stmt 0 view .LVU414
 1915 002e 0F90      		pop __tmp_reg__
 1916 0030 0F90      		pop __tmp_reg__
 1917 0032 0F90      		pop __tmp_reg__
 1918 0034 0F90      		pop __tmp_reg__
 1919 0036 DF91      		pop r29
 1920 0038 CF91      		pop r28
 1921 003a 1F91      		pop r17
 1922               	.LVL121:
 583:quantum/rgblight.c **** 
 1923               		.loc 1 583 1 view .LVU415
 1924 003c 0895      		ret
 1925               		.cfi_endproc
 1926               	.LFE137:
 1928               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 1929               	.global	rgblight_setrgb_range
 1931               	rgblight_setrgb_range:
 1932               	.LVL122:
 1933               	.LFB139:
 598:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 1934               		.loc 1 598 89 is_stmt 1 view -0
 1935               		.cfi_startproc
 598:quantum/rgblight.c ****   if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) { return; }
 1936               		.loc 1 598 89 is_stmt 0 view .LVU417
 1937 0000 0F93      		push r16
 1938               	.LCFI42:
 1939               		.cfi_def_cfa_offset 3
 1940               		.cfi_offset 16, -2
 1941               	/* prologue: function */
 1942               	/* frame size = 0 */
 1943               	/* stack size = 1 */
 1944               	.L__stack_usage = 1
 599:quantum/rgblight.c **** 
 1945               		.loc 1 599 3 is_stmt 1 view .LVU418
 599:quantum/rgblight.c **** 
 1946               		.loc 1 599 23 is_stmt 0 view .LVU419
 1947 0002 9091 0000 		lds r25,rgblight_config
 599:quantum/rgblight.c **** 
 1948               		.loc 1 599 6 view .LVU420
 1949 0006 90FF      		sbrs r25,0
 1950 0008 00C0      		rjmp .L98
 599:quantum/rgblight.c **** 
 1951               		.loc 1 599 44 discriminator 2 view .LVU421
 1952 000a 2017      		cp r18,r16
 1953 000c 00F4      		brsh .L98
 599:quantum/rgblight.c **** 
 1954               		.loc 1 599 60 discriminator 4 view .LVU422
 1955 000e 0031      		cpi r16,lo8(16)
 1956 0010 00F4      		brsh .L98
 1957 0012 94E0      		ldi r25,lo8(4)
 1958 0014 299F      		mul r18,r25
 1959 0016 F001      		movw r30,r0
 1960 0018 1124      		clr __zero_reg__
 1961 001a E050      		subi r30,lo8(-(led))
 1962 001c F040      		sbci r31,hi8(-(led))
 1963               	.LVL123:
 1964               	.L100:
 1965               	.LBB52:
 602:quantum/rgblight.c ****     led[i].g = g;
 1966               		.loc 1 602 5 is_stmt 1 discriminator 3 view .LVU423
 602:quantum/rgblight.c ****     led[i].g = g;
 1967               		.loc 1 602 14 is_stmt 0 discriminator 3 view .LVU424
 1968 001e 8183      		std Z+1,r24
 603:quantum/rgblight.c ****     led[i].b = b;
 1969               		.loc 1 603 5 is_stmt 1 discriminator 3 view .LVU425
 603:quantum/rgblight.c ****     led[i].b = b;
 1970               		.loc 1 603 14 is_stmt 0 discriminator 3 view .LVU426
 1971 0020 6083      		st Z,r22
 604:quantum/rgblight.c ****   }
 1972               		.loc 1 604 5 is_stmt 1 discriminator 3 view .LVU427
 604:quantum/rgblight.c ****   }
 1973               		.loc 1 604 14 is_stmt 0 discriminator 3 view .LVU428
 1974 0022 4283      		std Z+2,r20
 601:quantum/rgblight.c ****     led[i].r = r;
 1975               		.loc 1 601 37 discriminator 3 view .LVU429
 1976 0024 2F5F      		subi r18,lo8(-(1))
 1977               	.LVL124:
 601:quantum/rgblight.c ****     led[i].r = r;
 1978               		.loc 1 601 37 discriminator 3 view .LVU430
 1979 0026 3496      		adiw r30,4
 601:quantum/rgblight.c ****     led[i].r = r;
 1980               		.loc 1 601 3 discriminator 3 view .LVU431
 1981 0028 0213      		cpse r16,r18
 1982 002a 00C0      		rjmp .L100
 601:quantum/rgblight.c ****     led[i].r = r;
 1983               		.loc 1 601 3 discriminator 3 view .LVU432
 1984               	.LBE52:
 606:quantum/rgblight.c ****   wait_ms(1);
 1985               		.loc 1 606 3 is_stmt 1 view .LVU433
 1986 002c 0E94 0000 		call rgblight_set
 1987               	.LVL125:
 607:quantum/rgblight.c **** }
 1988               		.loc 1 607 3 view .LVU434
 1989               	.LBB53:
 1990               	.LBI53:
 1991               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 1992               		.loc 3 166 1 view .LVU435
 1993               	.LBB54:
 167:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	double __tmp ;
 1994               		.loc 3 168 2 view .LVU436
 169:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 1995               		.loc 3 172 2 view .LVU437
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1996               		.loc 3 173 2 view .LVU438
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 1997               		.loc 3 174 2 view .LVU439
 175:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 1998               		.loc 3 184 3 view .LVU440
 185:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1999               		.loc 3 187 2 view .LVU441
 2000 0030 8FE9      		ldi r24,lo8(3999)
 2001 0032 9FE0      		ldi r25,hi8(3999)
 2002 0034 0197      	1:	sbiw r24,1
 2003 0036 01F4      		brne 1b
 2004 0038 00C0      		rjmp .
 2005 003a 0000      		nop
 2006               	.LVL126:
 2007               	.L98:
 2008               	/* epilogue start */
 2009               		.loc 3 187 2 is_stmt 0 view .LVU442
 2010               	.LBE54:
 2011               	.LBE53:
 608:quantum/rgblight.c **** 
 2012               		.loc 1 608 1 view .LVU443
 2013 003c 0F91      		pop r16
 2014               	.LVL127:
 608:quantum/rgblight.c **** 
 2015               		.loc 1 608 1 view .LVU444
 2016 003e 0895      		ret
 2017               		.cfi_endproc
 2018               	.LFE139:
 2020               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2021               	.global	rgblight_sethsv_range
 2023               	rgblight_sethsv_range:
 2024               	.LVL128:
 2025               	.LFB140:
 610:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2026               		.loc 1 610 95 is_stmt 1 view -0
 2027               		.cfi_startproc
 610:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2028               		.loc 1 610 95 is_stmt 0 view .LVU446
 2029 0000 0F93      		push r16
 2030               	.LCFI43:
 2031               		.cfi_def_cfa_offset 3
 2032               		.cfi_offset 16, -2
 2033 0002 1F93      		push r17
 2034               	.LCFI44:
 2035               		.cfi_def_cfa_offset 4
 2036               		.cfi_offset 17, -3
 2037 0004 CF93      		push r28
 2038               	.LCFI45:
 2039               		.cfi_def_cfa_offset 5
 2040               		.cfi_offset 28, -4
 2041 0006 DF93      		push r29
 2042               	.LCFI46:
 2043               		.cfi_def_cfa_offset 6
 2044               		.cfi_offset 29, -5
 2045 0008 00D0      		rcall .
 2046 000a 00D0      		rcall .
 2047               	.LCFI47:
 2048               		.cfi_def_cfa_offset 10
 2049 000c CDB7      		in r28,__SP_L__
 2050 000e DEB7      		in r29,__SP_H__
 2051               	.LCFI48:
 2052               		.cfi_def_cfa_register 28
 2053               	/* prologue: function */
 2054               	/* frame size = 4 */
 2055               	/* stack size = 8 */
 2056               	.L__stack_usage = 8
 2057 0010 122F      		mov r17,r18
 611:quantum/rgblight.c **** 
 2058               		.loc 1 611 3 is_stmt 1 view .LVU447
 611:quantum/rgblight.c **** 
 2059               		.loc 1 611 23 is_stmt 0 view .LVU448
 2060 0012 9091 0000 		lds r25,rgblight_config
 611:quantum/rgblight.c **** 
 2061               		.loc 1 611 6 view .LVU449
 2062 0016 90FF      		sbrs r25,0
 2063 0018 00C0      		rjmp .L105
 613:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 2064               		.loc 1 613 3 is_stmt 1 view .LVU450
 614:quantum/rgblight.c ****   rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2065               		.loc 1 614 3 view .LVU451
 2066 001a 9E01      		movw r18,r28
 2067               	.LVL129:
 614:quantum/rgblight.c ****   rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2068               		.loc 1 614 3 is_stmt 0 view .LVU452
 2069 001c 2F5F      		subi r18,-1
 2070 001e 3F4F      		sbci r19,-1
 2071 0020 0E94 0000 		call sethsv
 2072               	.LVL130:
 615:quantum/rgblight.c **** }
 2073               		.loc 1 615 3 is_stmt 1 view .LVU453
 2074 0024 212F      		mov r18,r17
 2075 0026 4B81      		ldd r20,Y+3
 2076 0028 6981      		ldd r22,Y+1
 2077 002a 8A81      		ldd r24,Y+2
 2078 002c 0E94 0000 		call rgblight_setrgb_range
 2079               	.LVL131:
 2080               	.L105:
 2081               	/* epilogue start */
 616:quantum/rgblight.c **** 
 2082               		.loc 1 616 1 is_stmt 0 view .LVU454
 2083 0030 0F90      		pop __tmp_reg__
 2084 0032 0F90      		pop __tmp_reg__
 2085 0034 0F90      		pop __tmp_reg__
 2086 0036 0F90      		pop __tmp_reg__
 2087 0038 DF91      		pop r29
 2088 003a CF91      		pop r28
 2089 003c 1F91      		pop r17
 2090               	.LVL132:
 616:quantum/rgblight.c **** 
 2091               		.loc 1 616 1 view .LVU455
 2092 003e 0F91      		pop r16
 2093               	.LVL133:
 616:quantum/rgblight.c **** 
 2094               		.loc 1 616 1 view .LVU456
 2095 0040 0895      		ret
 2096               		.cfi_endproc
 2097               	.LFE140:
 2099               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2100               	.global	rgblight_sethsv_master
 2102               	rgblight_sethsv_master:
 2103               	.LVL134:
 2104               	.LFB143:
 626:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 2105               		.loc 1 626 68 is_stmt 1 view -0
 2106               		.cfi_startproc
 626:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, 0, (uint8_t) RGBLED_NUM/2);
 2107               		.loc 1 626 68 is_stmt 0 view .LVU458
 2108 0000 0F93      		push r16
 2109               	.LCFI49:
 2110               		.cfi_def_cfa_offset 3
 2111               		.cfi_offset 16, -2
 2112               	/* prologue: function */
 2113               	/* frame size = 0 */
 2114               	/* stack size = 1 */
 2115               	.L__stack_usage = 1
 627:quantum/rgblight.c **** }
 2116               		.loc 1 627 3 is_stmt 1 view .LVU459
 2117 0002 07E0      		ldi r16,lo8(7)
 2118 0004 20E0      		ldi r18,0
 2119 0006 0E94 0000 		call rgblight_sethsv_range
 2120               	.LVL135:
 2121               	/* epilogue start */
 628:quantum/rgblight.c **** 
 2122               		.loc 1 628 1 is_stmt 0 view .LVU460
 2123 000a 0F91      		pop r16
 2124 000c 0895      		ret
 2125               		.cfi_endproc
 2126               	.LFE143:
 2128               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2129               	.global	rgblight_sethsv_slave
 2131               	rgblight_sethsv_slave:
 2132               	.LVL136:
 2133               	.LFB144:
 630:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2134               		.loc 1 630 67 is_stmt 1 view -0
 2135               		.cfi_startproc
 630:quantum/rgblight.c ****   rgblight_sethsv_range(hue, sat, val, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2136               		.loc 1 630 67 is_stmt 0 view .LVU462
 2137 0000 0F93      		push r16
 2138               	.LCFI50:
 2139               		.cfi_def_cfa_offset 3
 2140               		.cfi_offset 16, -2
 2141               	/* prologue: function */
 2142               	/* frame size = 0 */
 2143               	/* stack size = 1 */
 2144               	.L__stack_usage = 1
 631:quantum/rgblight.c **** }
 2145               		.loc 1 631 3 is_stmt 1 view .LVU463
 2146 0002 0FE0      		ldi r16,lo8(15)
 2147 0004 27E0      		ldi r18,lo8(7)
 2148 0006 0E94 0000 		call rgblight_sethsv_range
 2149               	.LVL137:
 2150               	/* epilogue start */
 632:quantum/rgblight.c **** 
 2151               		.loc 1 632 1 is_stmt 0 view .LVU464
 2152 000a 0F91      		pop r16
 2153 000c 0895      		ret
 2154               		.cfi_endproc
 2155               	.LFE144:
 2157               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2158               	.global	rgblight_setrgb_master
 2160               	rgblight_setrgb_master:
 2161               	.LVL138:
 2162               	.LFB141:
 618:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 2163               		.loc 1 618 62 is_stmt 1 view -0
 2164               		.cfi_startproc
 618:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, 0 , (uint8_t) RGBLED_NUM/2);
 2165               		.loc 1 618 62 is_stmt 0 view .LVU466
 2166 0000 0F93      		push r16
 2167               	.LCFI51:
 2168               		.cfi_def_cfa_offset 3
 2169               		.cfi_offset 16, -2
 2170               	/* prologue: function */
 2171               	/* frame size = 0 */
 2172               	/* stack size = 1 */
 2173               	.L__stack_usage = 1
 619:quantum/rgblight.c **** }
 2174               		.loc 1 619 3 is_stmt 1 view .LVU467
 2175 0002 07E0      		ldi r16,lo8(7)
 2176 0004 20E0      		ldi r18,0
 2177 0006 0E94 0000 		call rgblight_setrgb_range
 2178               	.LVL139:
 2179               	/* epilogue start */
 620:quantum/rgblight.c **** 
 2180               		.loc 1 620 1 is_stmt 0 view .LVU468
 2181 000a 0F91      		pop r16
 2182 000c 0895      		ret
 2183               		.cfi_endproc
 2184               	.LFE141:
 2186               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2187               	.global	rgblight_setrgb_slave
 2189               	rgblight_setrgb_slave:
 2190               	.LVL140:
 2191               	.LFB142:
 622:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2192               		.loc 1 622 61 is_stmt 1 view -0
 2193               		.cfi_startproc
 622:quantum/rgblight.c ****   rgblight_setrgb_range(r, g, b, (uint8_t) RGBLED_NUM/2, (uint8_t) RGBLED_NUM);
 2194               		.loc 1 622 61 is_stmt 0 view .LVU470
 2195 0000 0F93      		push r16
 2196               	.LCFI52:
 2197               		.cfi_def_cfa_offset 3
 2198               		.cfi_offset 16, -2
 2199               	/* prologue: function */
 2200               	/* frame size = 0 */
 2201               	/* stack size = 1 */
 2202               	.L__stack_usage = 1
 623:quantum/rgblight.c **** }
 2203               		.loc 1 623 3 is_stmt 1 view .LVU471
 2204 0002 0FE0      		ldi r16,lo8(15)
 2205 0004 27E0      		ldi r18,lo8(7)
 2206 0006 0E94 0000 		call rgblight_setrgb_range
 2207               	.LVL141:
 2208               	/* epilogue start */
 624:quantum/rgblight.c **** 
 2209               		.loc 1 624 1 is_stmt 0 view .LVU472
 2210 000a 0F91      		pop r16
 2211 000c 0895      		ret
 2212               		.cfi_endproc
 2213               	.LFE142:
 2215               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2216               	.global	rgblight_effect_rainbow_swirl
 2218               	rgblight_effect_rainbow_swirl:
 2219               	.LVL142:
 2220               	.LFB155:
 925:quantum/rgblight.c ****   uint8_t hue;
 2221               		.loc 1 925 62 is_stmt 1 view -0
 2222               		.cfi_startproc
 925:quantum/rgblight.c ****   uint8_t hue;
 2223               		.loc 1 925 62 is_stmt 0 view .LVU474
 2224 0000 EF92      		push r14
 2225               	.LCFI53:
 2226               		.cfi_def_cfa_offset 3
 2227               		.cfi_offset 14, -2
 2228 0002 FF92      		push r15
 2229               	.LCFI54:
 2230               		.cfi_def_cfa_offset 4
 2231               		.cfi_offset 15, -3
 2232 0004 1F93      		push r17
 2233               	.LCFI55:
 2234               		.cfi_def_cfa_offset 5
 2235               		.cfi_offset 17, -4
 2236 0006 CF93      		push r28
 2237               	.LCFI56:
 2238               		.cfi_def_cfa_offset 6
 2239               		.cfi_offset 28, -5
 2240 0008 DF93      		push r29
 2241               	.LCFI57:
 2242               		.cfi_def_cfa_offset 7
 2243               		.cfi_offset 29, -6
 2244               	/* prologue: function */
 2245               	/* frame size = 0 */
 2246               	/* stack size = 5 */
 2247               	.L__stack_usage = 5
 2248 000a EC01      		movw r28,r24
 926:quantum/rgblight.c ****   uint8_t i;
 2249               		.loc 1 926 3 is_stmt 1 view .LVU475
 927:quantum/rgblight.c **** 
 2250               		.loc 1 927 3 view .LVU476
 929:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / RGBLED_NUM * i + anim->current_hue);
 2251               		.loc 1 929 3 view .LVU477
 2252               	.LVL143:
 929:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / RGBLED_NUM * i + anim->current_hue);
 2253               		.loc 1 929 3 is_stmt 0 view .LVU478
 2254 000c 80E0      		ldi r24,lo8(led)
 2255 000e E82E      		mov r14,r24
 2256 0010 80E0      		ldi r24,hi8(led)
 2257 0012 F82E      		mov r15,r24
 2258               	.LVL144:
 925:quantum/rgblight.c ****   uint8_t hue;
 2259               		.loc 1 925 62 view .LVU479
 2260 0014 10E0      		ldi r17,0
 2261               	.LVL145:
 2262               	.L113:
 930:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2263               		.loc 1 930 5 is_stmt 1 discriminator 3 view .LVU480
 931:quantum/rgblight.c ****   }
 2264               		.loc 1 931 5 discriminator 3 view .LVU481
 930:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2265               		.loc 1 930 9 is_stmt 0 discriminator 3 view .LVU482
 2266 0016 8C81      		ldd r24,Y+4
 931:quantum/rgblight.c ****   }
 2267               		.loc 1 931 5 discriminator 3 view .LVU483
 2268 0018 9701      		movw r18,r14
 2269 001a 4091 0000 		lds r20,rgblight_config+3
 2270 001e 6091 0000 		lds r22,rgblight_config+2
 2271 0022 810F      		add r24,r17
 2272               	.LVL146:
 931:quantum/rgblight.c ****   }
 2273               		.loc 1 931 5 discriminator 3 view .LVU484
 2274 0024 0E94 0000 		call sethsv
 2275               	.LVL147:
 931:quantum/rgblight.c ****   }
 2276               		.loc 1 931 5 discriminator 3 view .LVU485
 2277 0028 1F5E      		subi r17,lo8(-(17))
 2278 002a 84E0      		ldi r24,4
 2279 002c E80E      		add r14,r24
 2280 002e F11C      		adc r15,__zero_reg__
 929:quantum/rgblight.c ****     hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / RGBLED_NUM * i + anim->current_hue);
 2281               		.loc 1 929 3 discriminator 3 view .LVU486
 2282 0030 1F3F      		cpi r17,lo8(-1)
 2283 0032 01F4      		brne .L113
 933:quantum/rgblight.c **** 
 2284               		.loc 1 933 3 is_stmt 1 view .LVU487
 2285 0034 0E94 0000 		call rgblight_set
 2286               	.LVL148:
 935:quantum/rgblight.c ****     anim->current_hue++;
 2287               		.loc 1 935 3 view .LVU488
 935:quantum/rgblight.c ****     anim->current_hue++;
 2288               		.loc 1 935 7 is_stmt 0 view .LVU489
 2289 0038 9A81      		ldd r25,Y+2
 2290 003a 8C81      		ldd r24,Y+4
 935:quantum/rgblight.c ****     anim->current_hue++;
 2291               		.loc 1 935 6 view .LVU490
 2292 003c 90FF      		sbrs r25,0
 2293 003e 00C0      		rjmp .L114
 936:quantum/rgblight.c ****   } else {
 2294               		.loc 1 936 5 is_stmt 1 view .LVU491
 936:quantum/rgblight.c ****   } else {
 2295               		.loc 1 936 22 is_stmt 0 view .LVU492
 2296 0040 8F5F      		subi r24,lo8(-(1))
 2297               	.L117:
 938:quantum/rgblight.c ****   }
 2298               		.loc 1 938 22 view .LVU493
 2299 0042 8C83      		std Y+4,r24
 2300               	/* epilogue start */
 940:quantum/rgblight.c **** #endif
 2301               		.loc 1 940 1 view .LVU494
 2302 0044 DF91      		pop r29
 2303 0046 CF91      		pop r28
 2304               	.LVL149:
 940:quantum/rgblight.c **** #endif
 2305               		.loc 1 940 1 view .LVU495
 2306 0048 1F91      		pop r17
 2307 004a FF90      		pop r15
 2308 004c EF90      		pop r14
 2309 004e 0895      		ret
 2310               	.LVL150:
 2311               	.L114:
 938:quantum/rgblight.c ****   }
 2312               		.loc 1 938 5 is_stmt 1 view .LVU496
 938:quantum/rgblight.c ****   }
 2313               		.loc 1 938 22 is_stmt 0 view .LVU497
 2314 0050 8150      		subi r24,lo8(-(-1))
 2315 0052 00C0      		rjmp .L117
 2316               		.cfi_endproc
 2317               	.LFE155:
 2319               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2320               	.global	rgblight_effect_snake
 2322               	rgblight_effect_snake:
 2323               	.LVL151:
 2324               	.LFB156:
 947:quantum/rgblight.c ****   static uint8_t pos = 0;
 2325               		.loc 1 947 54 is_stmt 1 view -0
 2326               		.cfi_startproc
 947:quantum/rgblight.c ****   static uint8_t pos = 0;
 2327               		.loc 1 947 54 is_stmt 0 view .LVU499
 2328 0000 CF92      		push r12
 2329               	.LCFI58:
 2330               		.cfi_def_cfa_offset 3
 2331               		.cfi_offset 12, -2
 2332 0002 DF92      		push r13
 2333               	.LCFI59:
 2334               		.cfi_def_cfa_offset 4
 2335               		.cfi_offset 13, -3
 2336 0004 EF92      		push r14
 2337               	.LCFI60:
 2338               		.cfi_def_cfa_offset 5
 2339               		.cfi_offset 14, -4
 2340 0006 FF92      		push r15
 2341               	.LCFI61:
 2342               		.cfi_def_cfa_offset 6
 2343               		.cfi_offset 15, -5
 2344 0008 0F93      		push r16
 2345               	.LCFI62:
 2346               		.cfi_def_cfa_offset 7
 2347               		.cfi_offset 16, -6
 2348 000a 1F93      		push r17
 2349               	.LCFI63:
 2350               		.cfi_def_cfa_offset 8
 2351               		.cfi_offset 17, -7
 2352 000c CF93      		push r28
 2353               	.LCFI64:
 2354               		.cfi_def_cfa_offset 9
 2355               		.cfi_offset 28, -8
 2356 000e DF93      		push r29
 2357               	.LCFI65:
 2358               		.cfi_def_cfa_offset 10
 2359               		.cfi_offset 29, -9
 2360               	/* prologue: function */
 2361               	/* frame size = 0 */
 2362               	/* stack size = 8 */
 2363               	.L__stack_usage = 8
 948:quantum/rgblight.c ****   uint8_t i, j;
 2364               		.loc 1 948 3 is_stmt 1 view .LVU500
 949:quantum/rgblight.c ****   int8_t k;
 2365               		.loc 1 949 3 view .LVU501
 950:quantum/rgblight.c ****   int8_t increment = 1;
 2366               		.loc 1 950 3 view .LVU502
 951:quantum/rgblight.c **** 
 2367               		.loc 1 951 3 view .LVU503
 2368               	.LVL152:
 953:quantum/rgblight.c ****     increment = -1;
 2369               		.loc 1 953 3 view .LVU504
 953:quantum/rgblight.c ****     increment = -1;
 2370               		.loc 1 953 7 is_stmt 0 view .LVU505
 2371 0010 FC01      		movw r30,r24
 2372 0012 8281      		ldd r24,Z+2
 2373               	.LVL153:
 954:quantum/rgblight.c ****   }
 2374               		.loc 1 954 15 view .LVU506
 2375 0014 DD24      		clr r13
 2376 0016 DA94      		dec r13
 953:quantum/rgblight.c ****     increment = -1;
 2377               		.loc 1 953 6 view .LVU507
 2378 0018 80FD      		sbrc r24,0
 2379 001a 00C0      		rjmp .L119
 951:quantum/rgblight.c **** 
 2380               		.loc 1 951 10 view .LVU508
 2381 001c DD24      		clr r13
 2382 001e D394      		inc r13
 2383               	.L119:
 2384               	.LVL154:
 968:quantum/rgblight.c ****     led[i].r = 0;
 2385               		.loc 1 968 3 is_stmt 1 view .LVU509
 968:quantum/rgblight.c ****     led[i].r = 0;
 2386               		.loc 1 968 3 is_stmt 0 view .LVU510
 2387 0020 00E0      		ldi r16,lo8(led)
 2388 0022 10E0      		ldi r17,hi8(led)
 954:quantum/rgblight.c ****   }
 2389               		.loc 1 954 15 view .LVU511
 2390 0024 D0E0      		ldi r29,0
 2391 0026 C0E0      		ldi r28,0
 2392               	.LVL155:
 2393               	.L123:
 969:quantum/rgblight.c ****     led[i].g = 0;
 2394               		.loc 1 969 5 is_stmt 1 view .LVU512
 969:quantum/rgblight.c ****     led[i].g = 0;
 2395               		.loc 1 969 14 is_stmt 0 view .LVU513
 2396 0028 F801      		movw r30,r16
 2397 002a 1182      		std Z+1,__zero_reg__
 970:quantum/rgblight.c ****     led[i].b = 0;
 2398               		.loc 1 970 5 is_stmt 1 view .LVU514
 970:quantum/rgblight.c ****     led[i].b = 0;
 2399               		.loc 1 970 14 is_stmt 0 view .LVU515
 2400 002c 1082      		st Z,__zero_reg__
 971:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2401               		.loc 1 971 5 is_stmt 1 view .LVU516
 971:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2402               		.loc 1 971 14 is_stmt 0 view .LVU517
 2403 002e 1282      		std Z+2,__zero_reg__
 972:quantum/rgblight.c ****       k = pos + j * increment;
 2404               		.loc 1 972 5 is_stmt 1 view .LVU518
 2405               	.LVL156:
 971:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2406               		.loc 1 971 14 is_stmt 0 view .LVU519
 2407 0030 94E0      		ldi r25,lo8(4)
 2408 0032 E92E      		mov r14,r25
 2409 0034 F12C      		mov r15,__zero_reg__
 2410 0036 C12C      		mov r12,__zero_reg__
 2411               	.LVL157:
 2412               	.L122:
 973:quantum/rgblight.c ****       if (k < 0) {
 2413               		.loc 1 973 7 is_stmt 1 view .LVU520
 973:quantum/rgblight.c ****       if (k < 0) {
 2414               		.loc 1 973 15 is_stmt 0 view .LVU521
 2415 0038 8091 0000 		lds r24,pos.3161
 2416 003c 8C0D      		add r24,r12
 2417               	.LVL158:
 974:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 2418               		.loc 1 974 7 is_stmt 1 view .LVU522
 974:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 2419               		.loc 1 974 10 is_stmt 0 view .LVU523
 2420 003e 87FD      		sbrc r24,7
 975:quantum/rgblight.c ****       }
 2421               		.loc 1 975 9 is_stmt 1 view .LVU524
 975:quantum/rgblight.c ****       }
 2422               		.loc 1 975 15 is_stmt 0 view .LVU525
 2423 0040 815F      		subi r24,lo8(-(15))
 2424               	.LVL159:
 2425               	.L120:
 977:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 2426               		.loc 1 977 7 is_stmt 1 view .LVU526
 977:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 2427               		.loc 1 977 13 is_stmt 0 view .LVU527
 2428 0042 082E      		mov __tmp_reg__,r24
 2429 0044 000C      		lsl r0
 2430 0046 990B      		sbc r25,r25
 977:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat,
 2431               		.loc 1 977 10 view .LVU528
 2432 0048 8C17      		cp r24,r28
 2433 004a 9D07      		cpc r25,r29
 2434 004c 01F4      		brne .L121
 978:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 2435               		.loc 1 978 9 is_stmt 1 view .LVU529
 979:quantum/rgblight.c ****                (LED_TYPE *)&led[i]);
 2436               		.loc 1 979 41 is_stmt 0 view .LVU530
 2437 004e 8091 0000 		lds r24,rgblight_config+3
 2438               	.LVL160:
 979:quantum/rgblight.c ****                (LED_TYPE *)&led[i]);
 2439               		.loc 1 979 45 view .LVU531
 2440 0052 8E9D      		mul r24,r14
 2441 0054 A001      		movw r20,r0
 2442 0056 8F9D      		mul r24,r15
 2443 0058 500D      		add r21,r0
 2444 005a 1124      		clr __zero_reg__
 979:quantum/rgblight.c ****                (LED_TYPE *)&led[i]);
 2445               		.loc 1 979 78 view .LVU532
 2446 005c 5595      		asr r21
 2447 005e 4795      		ror r20
 2448 0060 5595      		asr r21
 2449 0062 4795      		ror r20
 978:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 2450               		.loc 1 978 9 view .LVU533
 2451 0064 9801      		movw r18,r16
 2452 0066 6091 0000 		lds r22,rgblight_config+2
 2453 006a 8091 0000 		lds r24,rgblight_config+1
 2454 006e 0E94 0000 		call sethsv
 2455               	.LVL161:
 2456               	.L121:
 978:quantum/rgblight.c ****                (uint8_t)(rgblight_config.val*(RGBLIGHT_EFFECT_SNAKE_LENGTH-j)/RGBLIGHT_EFFECT_SNAKE
 2457               		.loc 1 978 9 view .LVU534
 2458 0072 CD0C      		add r12,r13
 2459 0074 F1E0      		ldi r31,1
 2460 0076 EF1A      		sub r14,r31
 2461 0078 F108      		sbc r15,__zero_reg__
 972:quantum/rgblight.c ****       k = pos + j * increment;
 2462               		.loc 1 972 5 discriminator 2 view .LVU535
 2463 007a 01F4      		brne .L122
 2464               	.LVL162:
 972:quantum/rgblight.c ****       k = pos + j * increment;
 2465               		.loc 1 972 5 discriminator 2 view .LVU536
 2466 007c 2196      		adiw r28,1
 2467               	.LVL163:
 972:quantum/rgblight.c ****       k = pos + j * increment;
 2468               		.loc 1 972 5 discriminator 2 view .LVU537
 2469 007e 0C5F      		subi r16,-4
 2470 0080 1F4F      		sbci r17,-1
 968:quantum/rgblight.c ****     led[i].r = 0;
 2471               		.loc 1 968 3 discriminator 2 view .LVU538
 2472 0082 CF30      		cpi r28,15
 2473 0084 D105      		cpc r29,__zero_reg__
 2474 0086 01F4      		brne .L123
 984:quantum/rgblight.c ****   if (increment == 1) {
 2475               		.loc 1 984 3 is_stmt 1 view .LVU539
 2476 0088 0E94 0000 		call rgblight_set
 2477               	.LVL164:
 985:quantum/rgblight.c ****     if (pos - 1 < 0) {
 2478               		.loc 1 985 3 view .LVU540
 2479 008c 8091 0000 		lds r24,pos.3161
 985:quantum/rgblight.c ****     if (pos - 1 < 0) {
 2480               		.loc 1 985 6 is_stmt 0 view .LVU541
 2481 0090 91E0      		ldi r25,lo8(1)
 2482 0092 D912      		cpse r13,r25
 2483 0094 00C0      		rjmp .L124
 986:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 2484               		.loc 1 986 5 is_stmt 1 view .LVU542
 986:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 2485               		.loc 1 986 8 is_stmt 0 view .LVU543
 2486 0096 8111      		cpse r24,__zero_reg__
 2487 0098 00C0      		rjmp .L125
 987:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2488               		.loc 1 987 7 is_stmt 1 view .LVU544
 987:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2489               		.loc 1 987 11 is_stmt 0 view .LVU545
 2490 009a 8EE0      		ldi r24,lo8(14)
 2491               	.L130:
 998:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2492               		.loc 1 998 9 view .LVU546
 2493 009c 8093 0000 		sts pos.3161,r24
 2494               	/* epilogue start */
1003:quantum/rgblight.c **** #endif
 2495               		.loc 1 1003 1 view .LVU547
 2496 00a0 DF91      		pop r29
 2497 00a2 CF91      		pop r28
 2498               	.LVL165:
1003:quantum/rgblight.c **** #endif
 2499               		.loc 1 1003 1 view .LVU548
 2500 00a4 1F91      		pop r17
 2501 00a6 0F91      		pop r16
 2502 00a8 FF90      		pop r15
 2503 00aa EF90      		pop r14
 2504 00ac DF90      		pop r13
 2505               	.LVL166:
1003:quantum/rgblight.c **** #endif
 2506               		.loc 1 1003 1 view .LVU549
 2507 00ae CF90      		pop r12
 2508 00b0 0895      		ret
 2509               	.LVL167:
 2510               	.L125:
 992:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2511               		.loc 1 992 7 is_stmt 1 view .LVU550
 992:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2512               		.loc 1 992 11 is_stmt 0 view .LVU551
 2513 00b2 8150      		subi r24,lo8(-(-1))
 2514 00b4 00C0      		rjmp .L130
 2515               	.L124:
 998:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2516               		.loc 1 998 5 is_stmt 1 view .LVU552
 998:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2517               		.loc 1 998 16 is_stmt 0 view .LVU553
 2518 00b6 90E0      		ldi r25,0
 2519 00b8 0196      		adiw r24,1
 998:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2520               		.loc 1 998 21 view .LVU554
 2521 00ba BE01      		movw r22,r28
 2522 00bc 0E94 0000 		call __divmodhi4
 2523 00c0 00C0      		rjmp .L130
 2524               		.cfi_endproc
 2525               	.LFE156:
 2527               		.section	.text.rgblight_effect_knight,"ax",@progbits
 2528               	.global	rgblight_effect_knight
 2530               	rgblight_effect_knight:
 2531               	.LVL168:
 2532               	.LFB157:
1010:quantum/rgblight.c **** 
 2533               		.loc 1 1010 55 is_stmt 1 view -0
 2534               		.cfi_startproc
1010:quantum/rgblight.c **** 
 2535               		.loc 1 1010 55 is_stmt 0 view .LVU556
 2536 0000 0F93      		push r16
 2537               	.LCFI66:
 2538               		.cfi_def_cfa_offset 3
 2539               		.cfi_offset 16, -2
 2540 0002 1F93      		push r17
 2541               	.LCFI67:
 2542               		.cfi_def_cfa_offset 4
 2543               		.cfi_offset 17, -3
 2544 0004 CF93      		push r28
 2545               	.LCFI68:
 2546               		.cfi_def_cfa_offset 5
 2547               		.cfi_offset 28, -4
 2548 0006 DF93      		push r29
 2549               	.LCFI69:
 2550               		.cfi_def_cfa_offset 6
 2551               		.cfi_offset 29, -5
 2552               	/* prologue: function */
 2553               	/* frame size = 0 */
 2554               	/* stack size = 4 */
 2555               	.L__stack_usage = 4
1012:quantum/rgblight.c ****   static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2556               		.loc 1 1012 3 is_stmt 1 view .LVU557
1013:quantum/rgblight.c ****   static int8_t increment = 1;
 2557               		.loc 1 1013 3 view .LVU558
1014:quantum/rgblight.c ****   uint8_t i, cur;
 2558               		.loc 1 1014 3 view .LVU559
1015:quantum/rgblight.c **** 
 2559               		.loc 1 1015 3 view .LVU560
1026:quantum/rgblight.c ****     led[i].r = 0;
 2560               		.loc 1 1026 3 view .LVU561
 2561               	.LVL169:
1026:quantum/rgblight.c ****     led[i].r = 0;
 2562               		.loc 1 1026 3 is_stmt 0 view .LVU562
 2563 0008 C0E0      		ldi r28,lo8(led)
 2564 000a D0E0      		ldi r29,hi8(led)
1010:quantum/rgblight.c **** 
 2565               		.loc 1 1010 55 view .LVU563
 2566 000c FE01      		movw r30,r28
 2567               	.LVL170:
 2568               	.L132:
1027:quantum/rgblight.c ****     led[i].g = 0;
 2569               		.loc 1 1027 5 is_stmt 1 discriminator 3 view .LVU564
1027:quantum/rgblight.c ****     led[i].g = 0;
 2570               		.loc 1 1027 14 is_stmt 0 discriminator 3 view .LVU565
 2571 000e 1182      		std Z+1,__zero_reg__
1028:quantum/rgblight.c ****     led[i].b = 0;
 2572               		.loc 1 1028 5 is_stmt 1 discriminator 3 view .LVU566
1028:quantum/rgblight.c ****     led[i].b = 0;
 2573               		.loc 1 1028 14 is_stmt 0 discriminator 3 view .LVU567
 2574 0010 1082      		st Z,__zero_reg__
1029:quantum/rgblight.c ****   }
 2575               		.loc 1 1029 5 is_stmt 1 discriminator 3 view .LVU568
1029:quantum/rgblight.c ****   }
 2576               		.loc 1 1029 14 is_stmt 0 discriminator 3 view .LVU569
 2577 0012 1282      		std Z+2,__zero_reg__
1029:quantum/rgblight.c ****   }
 2578               		.loc 1 1029 14 discriminator 3 view .LVU570
 2579 0014 3496      		adiw r30,4
1026:quantum/rgblight.c ****     led[i].r = 0;
 2580               		.loc 1 1026 3 discriminator 3 view .LVU571
 2581 0016 80E0      		ldi r24,hi8(led+60)
 2582 0018 E030      		cpi r30,lo8(led+60)
 2583 001a F807      		cpc r31,r24
 2584 001c 01F4      		brne .L132
 2585 001e 10E0      		ldi r17,0
 2586 0020 00E0      		ldi r16,0
 2587               	.L135:
 2588               	.LVL171:
1033:quantum/rgblight.c **** 
 2589               		.loc 1 1033 5 is_stmt 1 view .LVU572
1035:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 2590               		.loc 1 1035 5 view .LVU573
1035:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 2591               		.loc 1 1035 11 is_stmt 0 view .LVU574
 2592 0022 8091 0000 		lds r24,low_bound.3176
 2593 0026 082E      		mov __tmp_reg__,r24
 2594 0028 000C      		lsl r0
 2595 002a 990B      		sbc r25,r25
1035:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 2596               		.loc 1 1035 8 view .LVU575
 2597 002c 0817      		cp r16,r24
 2598 002e 1907      		cpc r17,r25
 2599 0030 04F0      		brlt .L133
1035:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 2600               		.loc 1 1035 29 discriminator 1 view .LVU576
 2601 0032 8091 0000 		lds r24,high_bound.3177
 2602 0036 082E      		mov __tmp_reg__,r24
 2603 0038 000C      		lsl r0
 2604 003a 990B      		sbc r25,r25
1035:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 2605               		.loc 1 1035 24 discriminator 1 view .LVU577
 2606 003c 8017      		cp r24,r16
 2607 003e 9107      		cpc r25,r17
 2608 0040 04F0      		brlt .L133
1036:quantum/rgblight.c ****     } else {
 2609               		.loc 1 1036 7 is_stmt 1 view .LVU578
 2610 0042 9E01      		movw r18,r28
 2611 0044 4091 0000 		lds r20,rgblight_config+3
 2612 0048 6091 0000 		lds r22,rgblight_config+2
 2613 004c 8091 0000 		lds r24,rgblight_config+1
 2614 0050 0E94 0000 		call sethsv
 2615               	.LVL172:
 2616               	.L134:
1036:quantum/rgblight.c ****     } else {
 2617               		.loc 1 1036 7 is_stmt 0 view .LVU579
 2618 0054 0F5F      		subi r16,-1
 2619 0056 1F4F      		sbci r17,-1
 2620               	.LVL173:
1036:quantum/rgblight.c ****     } else {
 2621               		.loc 1 1036 7 view .LVU580
 2622 0058 2496      		adiw r28,4
1032:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
 2623               		.loc 1 1032 3 discriminator 2 view .LVU581
 2624 005a 0F30      		cpi r16,15
 2625 005c 1105      		cpc r17,__zero_reg__
 2626 005e 01F4      		brne .L135
1043:quantum/rgblight.c **** 
 2627               		.loc 1 1043 3 is_stmt 1 view .LVU582
 2628 0060 0E94 0000 		call rgblight_set
 2629               	.LVL174:
1047:quantum/rgblight.c ****   high_bound += increment;
 2630               		.loc 1 1047 3 view .LVU583
1047:quantum/rgblight.c ****   high_bound += increment;
 2631               		.loc 1 1047 13 is_stmt 0 view .LVU584
 2632 0064 8091 0000 		lds r24,increment.3178
 2633 0068 9091 0000 		lds r25,low_bound.3176
 2634 006c 980F      		add r25,r24
 2635 006e 9093 0000 		sts low_bound.3176,r25
1048:quantum/rgblight.c **** 
 2636               		.loc 1 1048 3 is_stmt 1 view .LVU585
1048:quantum/rgblight.c **** 
 2637               		.loc 1 1048 14 is_stmt 0 view .LVU586
 2638 0072 2091 0000 		lds r18,high_bound.3177
 2639 0076 280F      		add r18,r24
 2640 0078 2093 0000 		sts high_bound.3177,r18
1050:quantum/rgblight.c ****     increment = -increment;
 2641               		.loc 1 1050 3 is_stmt 1 view .LVU587
1050:quantum/rgblight.c ****     increment = -increment;
 2642               		.loc 1 1050 6 is_stmt 0 view .LVU588
 2643 007c 1216      		cp __zero_reg__,r18
 2644 007e 04F4      		brge .L136
1050:quantum/rgblight.c ****     increment = -increment;
 2645               		.loc 1 1050 23 discriminator 1 view .LVU589
 2646 0080 9E30      		cpi r25,lo8(14)
 2647 0082 04F0      		brlt .L131
 2648               	.L136:
1051:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2649               		.loc 1 1051 5 is_stmt 1 view .LVU590
1051:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2650               		.loc 1 1051 15 is_stmt 0 view .LVU591
 2651 0084 8195      		neg r24
 2652 0086 8093 0000 		sts increment.3178,r24
 2653               	.L131:
 2654               	/* epilogue start */
1058:quantum/rgblight.c **** #endif
 2655               		.loc 1 1058 1 view .LVU592
 2656 008a DF91      		pop r29
 2657 008c CF91      		pop r28
 2658 008e 1F91      		pop r17
 2659 0090 0F91      		pop r16
 2660               	.LVL175:
1058:quantum/rgblight.c **** #endif
 2661               		.loc 1 1058 1 view .LVU593
 2662 0092 0895      		ret
 2663               	.LVL176:
 2664               	.L133:
1038:quantum/rgblight.c ****       led[cur].g = 0;
 2665               		.loc 1 1038 7 is_stmt 1 view .LVU594
1038:quantum/rgblight.c ****       led[cur].g = 0;
 2666               		.loc 1 1038 18 is_stmt 0 view .LVU595
 2667 0094 1982      		std Y+1,__zero_reg__
1039:quantum/rgblight.c ****       led[cur].b = 0;
 2668               		.loc 1 1039 7 is_stmt 1 view .LVU596
1039:quantum/rgblight.c ****       led[cur].b = 0;
 2669               		.loc 1 1039 18 is_stmt 0 view .LVU597
 2670 0096 1882      		st Y,__zero_reg__
1040:quantum/rgblight.c ****     }
 2671               		.loc 1 1040 7 is_stmt 1 view .LVU598
1040:quantum/rgblight.c ****     }
 2672               		.loc 1 1040 18 is_stmt 0 view .LVU599
 2673 0098 1A82      		std Y+2,__zero_reg__
 2674 009a 00C0      		rjmp .L134
 2675               		.cfi_endproc
 2676               	.LFE157:
 2678               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 2679               	.global	rgblight_effect_christmas
 2681               	rgblight_effect_christmas:
 2682               	.LVL177:
 2683               	.LFB158:
1062:quantum/rgblight.c ****   uint8_t hue;
 2684               		.loc 1 1062 58 is_stmt 1 view -0
 2685               		.cfi_startproc
1062:quantum/rgblight.c ****   uint8_t hue;
 2686               		.loc 1 1062 58 is_stmt 0 view .LVU601
 2687 0000 EF92      		push r14
 2688               	.LCFI70:
 2689               		.cfi_def_cfa_offset 3
 2690               		.cfi_offset 14, -2
 2691 0002 FF92      		push r15
 2692               	.LCFI71:
 2693               		.cfi_def_cfa_offset 4
 2694               		.cfi_offset 15, -3
 2695 0004 0F93      		push r16
 2696               	.LCFI72:
 2697               		.cfi_def_cfa_offset 5
 2698               		.cfi_offset 16, -4
 2699 0006 1F93      		push r17
 2700               	.LCFI73:
 2701               		.cfi_def_cfa_offset 6
 2702               		.cfi_offset 17, -5
 2703 0008 CF93      		push r28
 2704               	.LCFI74:
 2705               		.cfi_def_cfa_offset 7
 2706               		.cfi_offset 28, -6
 2707 000a DF93      		push r29
 2708               	.LCFI75:
 2709               		.cfi_def_cfa_offset 8
 2710               		.cfi_offset 29, -7
 2711               	/* prologue: function */
 2712               	/* frame size = 0 */
 2713               	/* stack size = 6 */
 2714               	.L__stack_usage = 6
 2715 000c EC01      		movw r28,r24
1063:quantum/rgblight.c ****   uint8_t i;
 2716               		.loc 1 1063 3 is_stmt 1 view .LVU602
1064:quantum/rgblight.c **** 
 2717               		.loc 1 1064 3 view .LVU603
1066:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2718               		.loc 1 1066 3 view .LVU604
1066:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2719               		.loc 1 1066 48 is_stmt 0 view .LVU605
 2720 000e 8C81      		ldd r24,Y+4
 2721 0010 9D81      		ldd r25,Y+5
 2722               	.LVL178:
1066:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2723               		.loc 1 1066 48 view .LVU606
 2724 0012 0196      		adiw r24,1
1066:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2725               		.loc 1 1066 53 view .LVU607
 2726 0014 8170      		andi r24,1
 2727 0016 9927      		clr r25
1066:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2728               		.loc 1 1066 24 view .LVU608
 2729 0018 9D83      		std Y+5,r25
 2730 001a 8C83      		std Y+4,r24
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2731               		.loc 1 1067 3 is_stmt 1 view .LVU609
 2732               	.LVL179:
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2733               		.loc 1 1067 3 is_stmt 0 view .LVU610
 2734 001c 80E0      		ldi r24,lo8(led)
 2735 001e E82E      		mov r14,r24
 2736 0020 80E0      		ldi r24,hi8(led)
 2737 0022 F82E      		mov r15,r24
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2738               		.loc 1 1067 10 view .LVU611
 2739 0024 10E0      		ldi r17,0
1068:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2740               		.loc 1 1068 9 view .LVU612
 2741 0026 05E5      		ldi r16,lo8(85)
 2742               	.LVL180:
 2743               	.L141:
1068:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2744               		.loc 1 1068 5 is_stmt 1 discriminator 3 view .LVU613
1069:quantum/rgblight.c ****   }
 2745               		.loc 1 1069 5 discriminator 3 view .LVU614
1068:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2746               		.loc 1 1068 18 is_stmt 0 discriminator 3 view .LVU615
 2747 0028 812F      		mov r24,r17
 2748 002a 8695      		lsr r24
1068:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2749               		.loc 1 1068 50 discriminator 3 view .LVU616
 2750 002c 2C81      		ldd r18,Y+4
 2751 002e 3D81      		ldd r19,Y+5
 2752 0030 820F      		add r24,r18
 2753 0032 932F      		mov r25,r19
 2754 0034 911D      		adc r25,__zero_reg__
1068:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2755               		.loc 1 1068 9 discriminator 3 view .LVU617
 2756 0036 8170      		andi r24,lo8(1)
1069:quantum/rgblight.c ****   }
 2757               		.loc 1 1069 5 discriminator 3 view .LVU618
 2758 0038 9701      		movw r18,r14
 2759 003a 4091 0000 		lds r20,rgblight_config+3
 2760 003e 6091 0000 		lds r22,rgblight_config+2
 2761 0042 809F      		mul r24,r16
 2762 0044 802D      		mov r24,r0
 2763 0046 1124      		clr r1
 2764 0048 0E94 0000 		call sethsv
 2765               	.LVL181:
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2766               		.loc 1 1067 32 discriminator 3 view .LVU619
 2767 004c 1F5F      		subi r17,lo8(-(1))
 2768               	.LVL182:
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2769               		.loc 1 1067 32 discriminator 3 view .LVU620
 2770 004e 84E0      		ldi r24,4
 2771 0050 E80E      		add r14,r24
 2772 0052 F11C      		adc r15,__zero_reg__
1067:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2773               		.loc 1 1067 3 discriminator 3 view .LVU621
 2774 0054 1F30      		cpi r17,lo8(15)
 2775 0056 01F4      		brne .L141
1071:quantum/rgblight.c **** }
 2776               		.loc 1 1071 3 is_stmt 1 view .LVU622
 2777               	/* epilogue start */
1072:quantum/rgblight.c **** #endif
 2778               		.loc 1 1072 1 is_stmt 0 view .LVU623
 2779 0058 DF91      		pop r29
 2780 005a CF91      		pop r28
 2781               	.LVL183:
1072:quantum/rgblight.c **** #endif
 2782               		.loc 1 1072 1 view .LVU624
 2783 005c 1F91      		pop r17
 2784               	.LVL184:
1072:quantum/rgblight.c **** #endif
 2785               		.loc 1 1072 1 view .LVU625
 2786 005e 0F91      		pop r16
 2787 0060 FF90      		pop r15
 2788 0062 EF90      		pop r14
1071:quantum/rgblight.c **** }
 2789               		.loc 1 1071 3 view .LVU626
 2790 0064 0C94 0000 		jmp rgblight_set
 2791               	.LVL185:
 2792               		.cfi_endproc
 2793               	.LFE158:
 2795               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 2796               	.global	rgblight_effect_alternating
 2798               	rgblight_effect_alternating:
 2799               	.LVL186:
 2800               	.LFB160:
1097:quantum/rgblight.c **** #endif
1098:quantum/rgblight.c **** 
1099:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1100:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 2801               		.loc 1 1100 60 is_stmt 1 view -0
 2802               		.cfi_startproc
 2803               		.loc 1 1100 60 is_stmt 0 view .LVU628
 2804 0000 EF92      		push r14
 2805               	.LCFI76:
 2806               		.cfi_def_cfa_offset 3
 2807               		.cfi_offset 14, -2
 2808 0002 FF92      		push r15
 2809               	.LCFI77:
 2810               		.cfi_def_cfa_offset 4
 2811               		.cfi_offset 15, -3
 2812 0004 0F93      		push r16
 2813               	.LCFI78:
 2814               		.cfi_def_cfa_offset 5
 2815               		.cfi_offset 16, -4
 2816 0006 1F93      		push r17
 2817               	.LCFI79:
 2818               		.cfi_def_cfa_offset 6
 2819               		.cfi_offset 17, -5
 2820 0008 CF93      		push r28
 2821               	.LCFI80:
 2822               		.cfi_def_cfa_offset 7
 2823               		.cfi_offset 28, -6
 2824 000a DF93      		push r29
 2825               	.LCFI81:
 2826               		.cfi_def_cfa_offset 8
 2827               		.cfi_offset 29, -7
 2828               	/* prologue: function */
 2829               	/* frame size = 0 */
 2830               	/* stack size = 6 */
 2831               	.L__stack_usage = 6
 2832 000c 8C01      		movw r16,r24
1101:quantum/rgblight.c **** 
1102:quantum/rgblight.c ****   for(int i = 0; i<RGBLED_NUM; i++){
 2833               		.loc 1 1102 3 is_stmt 1 view .LVU629
 2834               	.LBB55:
 2835               		.loc 1 1102 7 view .LVU630
 2836               	.LVL187:
 2837               		.loc 1 1102 7 is_stmt 0 view .LVU631
 2838 000e C0E0      		ldi r28,lo8(led)
 2839 0010 D0E0      		ldi r29,hi8(led)
 2840               		.loc 1 1102 11 view .LVU632
 2841 0012 F12C      		mov r15,__zero_reg__
 2842 0014 E12C      		mov r14,__zero_reg__
 2843               	.LVL188:
 2844               	.L147:
1103:quantum/rgblight.c ****       if(i<RGBLED_NUM/2 && anim->pos){
 2845               		.loc 1 1103 7 is_stmt 1 view .LVU633
 2846 0016 F801      		movw r30,r16
 2847 0018 9481      		ldd r25,Z+4
 2848 001a 6091 0000 		lds r22,rgblight_config+2
 2849 001e 8091 0000 		lds r24,rgblight_config+1
 2850               		.loc 1 1103 9 is_stmt 0 view .LVU634
 2851 0022 F7E0      		ldi r31,7
 2852 0024 EF16      		cp r14,r31
 2853 0026 F104      		cpc r15,__zero_reg__
 2854 0028 04F4      		brge .L144
 2855               		.loc 1 1103 25 discriminator 1 view .LVU635
 2856 002a 9923      		tst r25
 2857 002c 01F0      		breq .L145
 2858               	.L153:
1104:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]
1105:quantum/rgblight.c ****       }else if (i>=RGBLED_NUM/2 && !anim->pos){
1106:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]
 2859               		.loc 1 1106 11 is_stmt 1 view .LVU636
 2860 002e 9E01      		movw r18,r28
 2861 0030 4091 0000 		lds r20,rgblight_config+3
 2862               	.L152:
1107:quantum/rgblight.c ****       }else{
1108:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, 0, (LED_TYPE *)&led[i]);
 2863               		.loc 1 1108 11 is_stmt 0 view .LVU637
 2864 0034 0E94 0000 		call sethsv
 2865               	.LVL189:
1102:quantum/rgblight.c ****       if(i<RGBLED_NUM/2 && anim->pos){
 2866               		.loc 1 1102 33 view .LVU638
 2867 0038 2FEF      		ldi r18,-1
 2868 003a E21A      		sub r14,r18
 2869 003c F20A      		sbc r15,r18
 2870               	.LVL190:
1102:quantum/rgblight.c ****       if(i<RGBLED_NUM/2 && anim->pos){
 2871               		.loc 1 1102 33 view .LVU639
 2872 003e 2496      		adiw r28,4
1102:quantum/rgblight.c ****       if(i<RGBLED_NUM/2 && anim->pos){
 2873               		.loc 1 1102 3 view .LVU640
 2874 0040 8FE0      		ldi r24,15
 2875 0042 E816      		cp r14,r24
 2876 0044 F104      		cpc r15,__zero_reg__
 2877 0046 01F4      		brne .L147
 2878               	.LBE55:
1109:quantum/rgblight.c ****       }
1110:quantum/rgblight.c ****   }
1111:quantum/rgblight.c ****   rgblight_set();
 2879               		.loc 1 1111 3 is_stmt 1 view .LVU641
 2880 0048 0E94 0000 		call rgblight_set
 2881               	.LVL191:
1112:quantum/rgblight.c ****   anim->pos = (anim->pos + 1) % 2;
 2882               		.loc 1 1112 3 view .LVU642
 2883               		.loc 1 1112 20 is_stmt 0 view .LVU643
 2884 004c F801      		movw r30,r16
 2885 004e 8481      		ldd r24,Z+4
 2886 0050 90E0      		ldi r25,0
 2887               		.loc 1 1112 26 view .LVU644
 2888 0052 0196      		adiw r24,1
 2889               		.loc 1 1112 31 view .LVU645
 2890 0054 8170      		andi r24,1
 2891 0056 9927      		clr r25
 2892               		.loc 1 1112 13 view .LVU646
 2893 0058 8483      		std Z+4,r24
 2894               	/* epilogue start */
1113:quantum/rgblight.c **** }
 2895               		.loc 1 1113 1 view .LVU647
 2896 005a DF91      		pop r29
 2897 005c CF91      		pop r28
 2898 005e 1F91      		pop r17
 2899 0060 0F91      		pop r16
 2900               	.LVL192:
 2901               		.loc 1 1113 1 view .LVU648
 2902 0062 FF90      		pop r15
 2903 0064 EF90      		pop r14
 2904               	.LVL193:
 2905               		.loc 1 1113 1 view .LVU649
 2906 0066 0895      		ret
 2907               	.LVL194:
 2908               	.L144:
 2909               	.LBB56:
1105:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]
 2910               		.loc 1 1105 13 is_stmt 1 discriminator 1 view .LVU650
1105:quantum/rgblight.c ****           sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]
 2911               		.loc 1 1105 33 is_stmt 0 discriminator 1 view .LVU651
 2912 0068 9923      		tst r25
 2913 006a 01F0      		breq .L153
 2914               	.L145:
1108:quantum/rgblight.c ****       }
 2915               		.loc 1 1108 11 is_stmt 1 view .LVU652
 2916 006c 9E01      		movw r18,r28
 2917 006e 40E0      		ldi r20,0
 2918 0070 00C0      		rjmp .L152
 2919               	.LBE56:
 2920               		.cfi_endproc
 2921               	.LFE160:
 2923               		.section	.text.rgblight_disable,"ax",@progbits
 2924               	.global	rgblight_disable
 2926               	rgblight_disable:
 2927               	.LFB106:
 357:quantum/rgblight.c ****   rgblight_config.enable = 0;
 2928               		.loc 1 357 29 view -0
 2929               		.cfi_startproc
 2930               	/* prologue: function */
 2931               	/* frame size = 0 */
 2932               	/* stack size = 0 */
 2933               	.L__stack_usage = 0
 358:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2934               		.loc 1 358 3 view .LVU654
 358:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2935               		.loc 1 358 26 is_stmt 0 view .LVU655
 2936 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2937 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2938 0004 8081      		ld r24,Z
 2939 0006 8E7F      		andi r24,lo8(~(1<<0))
 2940 0008 8083      		st Z,r24
 359:quantum/rgblight.c ****   xprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2941               		.loc 1 359 3 is_stmt 1 view .LVU656
 2942 000a 6081      		ld r22,Z
 2943 000c 7181      		ldd r23,Z+1
 2944 000e 8281      		ldd r24,Z+2
 2945 0010 9381      		ldd r25,Z+3
 2946 0012 0E94 0000 		call eeconfig_update_rgblight
 2947               	.LVL195:
 360:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2948               		.loc 1 360 94 view .LVU657
 362:quantum/rgblight.c **** #endif
 2949               		.loc 1 362 7 view .LVU658
 2950               	.LBB61:
 2951               	.LBI61:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 2952               		.loc 1 717 6 view .LVU659
 2953               	.LBB62:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2954               		.loc 1 734 3 view .LVU660
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2955               		.loc 1 734 33 is_stmt 0 view .LVU661
 2956 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 2957               		.loc 1 735 41 is_stmt 1 view .LVU662
 2958               	.LBE62:
 2959               	.LBE61:
 364:quantum/rgblight.c ****   wait_ms(50);
 2960               		.loc 1 364 33 view .LVU663
 365:quantum/rgblight.c ****   rgblight_set();
 2961               		.loc 1 365 3 view .LVU664
 2962               	.LVL196:
 2963               	.LBB63:
 2964               	.LBI63:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 2965               		.loc 3 166 1 view .LVU665
 2966               	.LBB64:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2967               		.loc 3 168 2 view .LVU666
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2968               		.loc 3 172 2 view .LVU667
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2969               		.loc 3 173 2 view .LVU668
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 2970               		.loc 3 174 2 view .LVU669
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 2971               		.loc 3 184 3 view .LVU670
 2972               		.loc 3 187 2 view .LVU671
 2973 001a 2FEF      		ldi r18,lo8(159999)
 2974 001c 80E7      		ldi r24,hi8(159999)
 2975 001e 92E0      		ldi r25,hlo8(159999)
 2976 0020 2150      	1:	subi r18,1
 2977 0022 8040      		sbci r24,0
 2978 0024 9040      		sbci r25,0
 2979 0026 01F4      		brne 1b
 2980 0028 00C0      		rjmp .
 2981 002a 0000      		nop
 2982               	.LVL197:
 2983               		.loc 3 187 2 is_stmt 0 view .LVU672
 2984               	.LBE64:
 2985               	.LBE63:
 366:quantum/rgblight.c **** }
 2986               		.loc 1 366 3 is_stmt 1 view .LVU673
 2987 002c 0C94 0000 		jmp rgblight_set
 2988               	.LVL198:
 2989               		.cfi_endproc
 2990               	.LFE106:
 2992               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 2993               	.global	rgblight_disable_noeeprom
 2995               	rgblight_disable_noeeprom:
 2996               	.LFB107:
 369:quantum/rgblight.c ****   rgblight_config.enable = 0;
 2997               		.loc 1 369 38 view -0
 2998               		.cfi_startproc
 2999               	/* prologue: function */
 3000               	/* frame size = 0 */
 3001               	/* stack size = 0 */
 3002               	.L__stack_usage = 0
 370:quantum/rgblight.c ****   xprintf("rgblight disable [noEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3003               		.loc 1 370 3 view .LVU675
 370:quantum/rgblight.c ****   xprintf("rgblight disable [noEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3004               		.loc 1 370 26 is_stmt 0 view .LVU676
 3005 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3006 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3007 0004 8081      		ld r24,Z
 3008 0006 8E7F      		andi r24,lo8(~(1<<0))
 3009 0008 8083      		st Z,r24
 371:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3010               		.loc 1 371 96 is_stmt 1 view .LVU677
 373:quantum/rgblight.c **** #endif
 3011               		.loc 1 373 5 view .LVU678
 3012               	.LBB69:
 3013               	.LBI69:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3014               		.loc 1 717 6 view .LVU679
 3015               	.LBB70:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3016               		.loc 1 734 3 view .LVU680
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3017               		.loc 1 734 33 is_stmt 0 view .LVU681
 3018 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3019               		.loc 1 735 41 is_stmt 1 view .LVU682
 3020               	.LBE70:
 3021               	.LBE69:
 375:quantum/rgblight.c ****   wait_ms(50);
 3022               		.loc 1 375 33 view .LVU683
 376:quantum/rgblight.c ****   rgblight_set();
 3023               		.loc 1 376 3 view .LVU684
 3024               	.LVL199:
 3025               	.LBB71:
 3026               	.LBI71:
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 3027               		.loc 3 166 1 view .LVU685
 3028               	.LBB72:
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 3029               		.loc 3 168 2 view .LVU686
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 3030               		.loc 3 172 2 view .LVU687
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 3031               		.loc 3 173 2 view .LVU688
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 3032               		.loc 3 174 2 view .LVU689
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 3033               		.loc 3 184 3 view .LVU690
 3034               		.loc 3 187 2 view .LVU691
 3035 000e 2FEF      		ldi r18,lo8(159999)
 3036 0010 80E7      		ldi r24,hi8(159999)
 3037 0012 92E0      		ldi r25,hlo8(159999)
 3038 0014 2150      	1:	subi r18,1
 3039 0016 8040      		sbci r24,0
 3040 0018 9040      		sbci r25,0
 3041 001a 01F4      		brne 1b
 3042 001c 00C0      		rjmp .
 3043 001e 0000      		nop
 3044               	.LVL200:
 3045               		.loc 3 187 2 is_stmt 0 view .LVU692
 3046               	.LBE72:
 3047               	.LBE71:
 377:quantum/rgblight.c **** }
 3048               		.loc 1 377 3 is_stmt 1 view .LVU693
 3049 0020 0C94 0000 		jmp rgblight_set
 3050               	.LVL201:
 3051               		.cfi_endproc
 3052               	.LFE107:
 3054               		.section	.text.rgblight_timer_init,"ax",@progbits
 3055               	.global	rgblight_timer_init
 3057               	rgblight_timer_init:
 3058               	.LFB146:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3059               		.loc 1 717 32 view -0
 3060               		.cfi_startproc
 3061               	/* prologue: function */
 3062               	/* frame size = 0 */
 3063               	/* stack size = 0 */
 3064               	.L__stack_usage = 0
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3065               		.loc 1 734 3 view .LVU695
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3066               		.loc 1 734 33 is_stmt 0 view .LVU696
 3067 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3068               		.loc 1 735 41 is_stmt 1 view .LVU697
 3069               	/* epilogue start */
 736:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 3070               		.loc 1 736 1 is_stmt 0 view .LVU698
 3071 0004 0895      		ret
 3072               		.cfi_endproc
 3073               	.LFE146:
 3075               		.section	.text.rgblight_timer_enable,"ax",@progbits
 3076               	.global	rgblight_timer_enable
 3078               	rgblight_timer_enable:
 3079               	.LFB147:
 737:quantum/rgblight.c ****   if( !is_static_effect(rgblight_config.mode) ) {
 3080               		.loc 1 737 34 is_stmt 1 view -0
 3081               		.cfi_startproc
 3082               	/* prologue: function */
 3083               	/* frame size = 0 */
 3084               	/* stack size = 0 */
 3085               	.L__stack_usage = 0
 738:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3086               		.loc 1 738 3 view .LVU700
 3087               	.LVL202:
 3088               	.LBB75:
 3089               	.LBI75:
  75:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
 3090               		.loc 1 75 19 view .LVU701
 3091               	.LBB76:
  76:quantum/rgblight.c **** }
 3092               		.loc 1 76 5 view .LVU702
 3093               	.LBE76:
 3094               	.LBE75:
 738:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3095               		.loc 1 738 40 is_stmt 0 view .LVU703
 3096 0000 6091 0000 		lds r22,rgblight_config
 3097 0004 6695      		lsr r22
 3098               	.LBB78:
 3099               	.LBB77:
  76:quantum/rgblight.c **** }
 3100               		.loc 1 76 12 view .LVU704
 3101 0006 70E0      		ldi r23,0
 3102 0008 4BE0      		ldi r20,lo8(11)
 3103 000a 50E0      		ldi r21,0
 3104 000c 80E0      		ldi r24,lo8(static_effect_table)
 3105 000e 90E0      		ldi r25,hi8(static_effect_table)
 3106 0010 0E94 0000 		call memchr
 3107               	.LVL203:
  76:quantum/rgblight.c **** }
 3108               		.loc 1 76 12 view .LVU705
 3109               	.LBE77:
 3110               	.LBE78:
 738:quantum/rgblight.c ****       rgblight_status.timer_enabled = true;
 3111               		.loc 1 738 5 view .LVU706
 3112 0014 892B      		or r24,r25
 3113 0016 01F4      		brne .L158
 739:quantum/rgblight.c ****   }
 3114               		.loc 1 739 7 is_stmt 1 view .LVU707
 739:quantum/rgblight.c ****   }
 3115               		.loc 1 739 37 is_stmt 0 view .LVU708
 3116 0018 81E0      		ldi r24,lo8(1)
 3117 001a 8093 0000 		sts rgblight_status+1,r24
 3118               	.L158:
 741:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3119               		.loc 1 741 3 is_stmt 1 view .LVU709
 741:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3120               		.loc 1 741 33 is_stmt 0 view .LVU710
 3121 001e 0E94 0000 		call timer_read
 3122               	.LVL204:
 741:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3123               		.loc 1 741 31 view .LVU711
 3124 0022 9093 0000 		sts animation_status+1,r25
 3125 0026 8093 0000 		sts animation_status,r24
 742:quantum/rgblight.c ****   dprintf("rgblight timer enabled.\n");
 3126               		.loc 1 742 41 is_stmt 1 view .LVU712
 743:quantum/rgblight.c **** }
 3127               		.loc 1 743 39 view .LVU713
 3128               	/* epilogue start */
 744:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 3129               		.loc 1 744 1 is_stmt 0 view .LVU714
 3130 002a 0895      		ret
 3131               		.cfi_endproc
 3132               	.LFE147:
 3134               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 3135               	.global	rgblight_mode_eeprom_helper
 3137               	rgblight_mode_eeprom_helper:
 3138               	.LVL205:
 3139               	.LFB99:
 281:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 3140               		.loc 1 281 70 is_stmt 1 view -0
 3141               		.cfi_startproc
 3142               	/* prologue: function */
 3143               	/* frame size = 0 */
 3144               	/* stack size = 0 */
 3145               	.L__stack_usage = 0
 282:quantum/rgblight.c ****     return;
 3146               		.loc 1 282 3 view .LVU716
 282:quantum/rgblight.c ****     return;
 3147               		.loc 1 282 23 is_stmt 0 view .LVU717
 3148 0000 9091 0000 		lds r25,rgblight_config
 282:quantum/rgblight.c ****     return;
 3149               		.loc 1 282 6 view .LVU718
 3150 0004 90FF      		sbrs r25,0
 3151 0006 00C0      		rjmp .L159
 285:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3152               		.loc 1 285 3 is_stmt 1 view .LVU719
 3153 0008 9170      		andi r25,lo8(1)
 285:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3154               		.loc 1 285 6 is_stmt 0 view .LVU720
 3155 000a 8111      		cpse r24,__zero_reg__
 3156 000c 00C0      		rjmp .L161
 286:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 3157               		.loc 1 286 5 is_stmt 1 view .LVU721
 286:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 3158               		.loc 1 286 26 is_stmt 0 view .LVU722
 3159 000e 9260      		ori r25,lo8(2)
 3160               	.LVL206:
 3161               	.L170:
 290:quantum/rgblight.c ****   }
 3162               		.loc 1 290 26 view .LVU723
 3163 0010 9093 0000 		sts rgblight_config,r25
 292:quantum/rgblight.c ****   if (write_to_eeprom) {
 3164               		.loc 1 292 33 is_stmt 1 view .LVU724
 293:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3165               		.loc 1 293 3 view .LVU725
 293:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3166               		.loc 1 293 6 is_stmt 0 view .LVU726
 3167 0014 6623      		tst r22
 3168 0016 01F0      		breq .L164
 294:quantum/rgblight.c ****     xprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3169               		.loc 1 294 5 is_stmt 1 view .LVU727
 3170 0018 6091 0000 		lds r22,rgblight_config
 3171 001c 7091 0000 		lds r23,rgblight_config+1
 3172 0020 8091 0000 		lds r24,rgblight_config+2
 3173 0024 9091 0000 		lds r25,rgblight_config+3
 3174               	.LVL207:
 294:quantum/rgblight.c ****     xprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3175               		.loc 1 294 5 is_stmt 0 view .LVU728
 3176 0028 0E94 0000 		call eeconfig_update_rgblight
 3177               	.LVL208:
 295:quantum/rgblight.c ****   } else {
 3178               		.loc 1 295 66 is_stmt 1 view .LVU729
 3179               	.L164:
 297:quantum/rgblight.c ****   }
 3180               		.loc 1 297 68 view .LVU730
 299:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3181               		.loc 1 299 3 view .LVU731
 3182               	.LBB83:
 3183               	.LBI83:
  75:quantum/rgblight.c ****     return memchr(static_effect_table, mode, sizeof(static_effect_table)) != NULL;
 3184               		.loc 1 75 19 view .LVU732
 3185               	.LBB84:
  76:quantum/rgblight.c **** }
 3186               		.loc 1 76 5 view .LVU733
 3187               	.LBE84:
 3188               	.LBE83:
 299:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3189               		.loc 1 299 39 is_stmt 0 view .LVU734
 3190 002c 6091 0000 		lds r22,rgblight_config
 3191 0030 6695      		lsr r22
 3192               	.LBB86:
 3193               	.LBB85:
  76:quantum/rgblight.c **** }
 3194               		.loc 1 76 12 view .LVU735
 3195 0032 70E0      		ldi r23,0
 3196 0034 4BE0      		ldi r20,lo8(11)
 3197 0036 50E0      		ldi r21,0
 3198 0038 80E0      		ldi r24,lo8(static_effect_table)
 3199 003a 90E0      		ldi r25,hi8(static_effect_table)
 3200 003c 0E94 0000 		call memchr
 3201               	.LVL209:
  76:quantum/rgblight.c **** }
 3202               		.loc 1 76 12 view .LVU736
 3203               	.LBE85:
 3204               	.LBE86:
 299:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3205               		.loc 1 299 5 view .LVU737
 3206 0040 892B      		or r24,r25
 3207 0042 01F0      		breq .L165
 301:quantum/rgblight.c **** #endif
 3208               		.loc 1 301 7 is_stmt 1 view .LVU738
 3209               	.LBB87:
 3210               	.LBI87:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3211               		.loc 1 717 6 view .LVU739
 3212               	.LBB88:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3213               		.loc 1 734 3 view .LVU740
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3214               		.loc 1 734 33 is_stmt 0 view .LVU741
 3215 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3216               		.loc 1 735 41 is_stmt 1 view .LVU742
 3217               	.L166:
 3218               	.LBE88:
 3219               	.LBE87:
 309:quantum/rgblight.c **** #endif
 3220               		.loc 1 309 5 view .LVU743
 309:quantum/rgblight.c **** #endif
 3221               		.loc 1 309 30 is_stmt 0 view .LVU744
 3222 0048 81E0      		ldi r24,lo8(1)
 3223 004a 8093 0000 		sts animation_status+3,r24
 311:quantum/rgblight.c **** }
 3224               		.loc 1 311 3 is_stmt 1 view .LVU745
 3225 004e 4091 0000 		lds r20,rgblight_config+3
 3226 0052 6091 0000 		lds r22,rgblight_config+2
 3227 0056 8091 0000 		lds r24,rgblight_config+1
 3228 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 3229               	.LVL210:
 3230               	.L161:
 287:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 3231               		.loc 1 287 10 view .LVU746
 287:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 3232               		.loc 1 287 13 is_stmt 0 view .LVU747
 3233 005e 8532      		cpi r24,lo8(37)
 3234 0060 00F0      		brlo .L163
 288:quantum/rgblight.c ****   } else {
 3235               		.loc 1 288 5 is_stmt 1 view .LVU748
 288:quantum/rgblight.c ****   } else {
 3236               		.loc 1 288 26 is_stmt 0 view .LVU749
 3237 0062 9864      		ori r25,lo8(72)
 3238 0064 00C0      		rjmp .L170
 3239               	.L163:
 290:quantum/rgblight.c ****   }
 3240               		.loc 1 290 5 is_stmt 1 view .LVU750
 290:quantum/rgblight.c ****   }
 3241               		.loc 1 290 26 is_stmt 0 view .LVU751
 3242 0066 880F      		lsl r24
 3243               	.LVL211:
 290:quantum/rgblight.c ****   }
 3244               		.loc 1 290 26 view .LVU752
 3245 0068 982B      		or r25,r24
 3246 006a 00C0      		rjmp .L170
 3247               	.LVL212:
 3248               	.L165:
 305:quantum/rgblight.c **** #endif
 3249               		.loc 1 305 7 is_stmt 1 view .LVU753
 3250 006c 0E94 0000 		call rgblight_timer_enable
 3251               	.LVL213:
 3252 0070 00C0      		rjmp .L166
 3253               	.LVL214:
 3254               	.L159:
 3255               	/* epilogue start */
 312:quantum/rgblight.c **** 
 3256               		.loc 1 312 1 is_stmt 0 view .LVU754
 3257 0072 0895      		ret
 3258               		.cfi_endproc
 3259               	.LFE99:
 3261               		.section	.text.rgblight_step_helper,"ax",@progbits
 3262               	.global	rgblight_step_helper
 3264               	rgblight_step_helper:
 3265               	.LVL215:
 3266               	.LFB92:
 244:quantum/rgblight.c ****   uint8_t mode = 0;
 3267               		.loc 1 244 49 is_stmt 1 view -0
 3268               		.cfi_startproc
 3269               	/* prologue: function */
 3270               	/* frame size = 0 */
 3271               	/* stack size = 0 */
 3272               	.L__stack_usage = 0
 244:quantum/rgblight.c ****   uint8_t mode = 0;
 3273               		.loc 1 244 49 is_stmt 0 view .LVU756
 3274 0000 682F      		mov r22,r24
 245:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 3275               		.loc 1 245 3 is_stmt 1 view .LVU757
 3276               	.LVL216:
 246:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3277               		.loc 1 246 3 view .LVU758
 246:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3278               		.loc 1 246 25 is_stmt 0 view .LVU759
 3279 0002 9091 0000 		lds r25,rgblight_config
 3280 0006 9695      		lsr r25
 246:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3281               		.loc 1 246 8 view .LVU760
 3282 0008 81E0      		ldi r24,lo8(1)
 3283               	.LVL217:
 246:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 3284               		.loc 1 246 8 view .LVU761
 3285 000a 890F      		add r24,r25
 3286               	.LVL218:
 247:quantum/rgblight.c ****     mode = 1;
 3287               		.loc 1 247 3 is_stmt 1 view .LVU762
 247:quantum/rgblight.c ****     mode = 1;
 3288               		.loc 1 247 6 is_stmt 0 view .LVU763
 3289 000c 8532      		cpi r24,lo8(37)
 3290 000e 00F0      		brlo .L172
 248:quantum/rgblight.c ****   }
 3291               		.loc 1 248 10 view .LVU764
 3292 0010 81E0      		ldi r24,lo8(1)
 3293               	.LVL219:
 3294               	.L172:
 250:quantum/rgblight.c **** }
 3295               		.loc 1 250 3 is_stmt 1 view .LVU765
 3296 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3297               	.LVL220:
 250:quantum/rgblight.c **** }
 3298               		.loc 1 250 3 is_stmt 0 view .LVU766
 3299               		.cfi_endproc
 3300               	.LFE92:
 3302               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 3303               	.global	rgblight_step_noeeprom
 3305               	rgblight_step_noeeprom:
 3306               	.LFB93:
 252:quantum/rgblight.c ****   rgblight_step_helper(false);
 3307               		.loc 1 252 35 is_stmt 1 view -0
 3308               		.cfi_startproc
 3309               	/* prologue: function */
 3310               	/* frame size = 0 */
 3311               	/* stack size = 0 */
 3312               	.L__stack_usage = 0
 253:quantum/rgblight.c **** }
 3313               		.loc 1 253 3 view .LVU768
 3314 0000 80E0      		ldi r24,0
 3315 0002 0C94 0000 		jmp rgblight_step_helper
 3316               	.LVL221:
 3317               		.cfi_endproc
 3318               	.LFE93:
 3320               		.section	.text.rgblight_step,"ax",@progbits
 3321               	.global	rgblight_step
 3323               	rgblight_step:
 3324               	.LFB94:
 255:quantum/rgblight.c ****   rgblight_step_helper(true);
 3325               		.loc 1 255 26 view -0
 3326               		.cfi_startproc
 3327               	/* prologue: function */
 3328               	/* frame size = 0 */
 3329               	/* stack size = 0 */
 3330               	.L__stack_usage = 0
 256:quantum/rgblight.c **** }
 3331               		.loc 1 256 3 view .LVU770
 3332 0000 81E0      		ldi r24,lo8(1)
 3333 0002 0C94 0000 		jmp rgblight_step_helper
 3334               	.LVL222:
 3335               		.cfi_endproc
 3336               	.LFE94:
 3338               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 3339               	.global	rgblight_step_reverse_helper
 3341               	rgblight_step_reverse_helper:
 3342               	.LVL223:
 3343               	.LFB95:
 258:quantum/rgblight.c ****   uint8_t mode = 0;
 3344               		.loc 1 258 57 view -0
 3345               		.cfi_startproc
 3346               	/* prologue: function */
 3347               	/* frame size = 0 */
 3348               	/* stack size = 0 */
 3349               	.L__stack_usage = 0
 258:quantum/rgblight.c ****   uint8_t mode = 0;
 3350               		.loc 1 258 57 is_stmt 0 view .LVU772
 3351 0000 682F      		mov r22,r24
 259:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 3352               		.loc 1 259 3 is_stmt 1 view .LVU773
 3353               	.LVL224:
 260:quantum/rgblight.c ****   if (mode < 1) {
 3354               		.loc 1 260 3 view .LVU774
 260:quantum/rgblight.c ****   if (mode < 1) {
 3355               		.loc 1 260 25 is_stmt 0 view .LVU775
 3356 0002 9091 0000 		lds r25,rgblight_config
 3357 0006 9695      		lsr r25
 260:quantum/rgblight.c ****   if (mode < 1) {
 3358               		.loc 1 260 8 view .LVU776
 3359 0008 8FEF      		ldi r24,lo8(-1)
 3360               	.LVL225:
 260:quantum/rgblight.c ****   if (mode < 1) {
 3361               		.loc 1 260 8 view .LVU777
 3362 000a 890F      		add r24,r25
 3363               	.LVL226:
 261:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 3364               		.loc 1 261 3 is_stmt 1 view .LVU778
 261:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 3365               		.loc 1 261 6 is_stmt 0 view .LVU779
 3366 000c 01F4      		brne .L176
 262:quantum/rgblight.c ****   }
 3367               		.loc 1 262 10 view .LVU780
 3368 000e 84E2      		ldi r24,lo8(36)
 3369               	.LVL227:
 3370               	.L176:
 264:quantum/rgblight.c **** }
 3371               		.loc 1 264 3 is_stmt 1 view .LVU781
 3372 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3373               	.LVL228:
 264:quantum/rgblight.c **** }
 3374               		.loc 1 264 3 is_stmt 0 view .LVU782
 3375               		.cfi_endproc
 3376               	.LFE95:
 3378               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 3379               	.global	rgblight_step_reverse_noeeprom
 3381               	rgblight_step_reverse_noeeprom:
 3382               	.LFB96:
 266:quantum/rgblight.c ****   rgblight_step_reverse_helper(false);
 3383               		.loc 1 266 43 is_stmt 1 view -0
 3384               		.cfi_startproc
 3385               	/* prologue: function */
 3386               	/* frame size = 0 */
 3387               	/* stack size = 0 */
 3388               	.L__stack_usage = 0
 267:quantum/rgblight.c **** }
 3389               		.loc 1 267 3 view .LVU784
 3390 0000 80E0      		ldi r24,0
 3391 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3392               	.LVL229:
 3393               		.cfi_endproc
 3394               	.LFE96:
 3396               		.section	.text.rgblight_step_reverse,"ax",@progbits
 3397               	.global	rgblight_step_reverse
 3399               	rgblight_step_reverse:
 3400               	.LFB97:
 269:quantum/rgblight.c ****   rgblight_step_reverse_helper(true);
 3401               		.loc 1 269 34 view -0
 3402               		.cfi_startproc
 3403               	/* prologue: function */
 3404               	/* frame size = 0 */
 3405               	/* stack size = 0 */
 3406               	.L__stack_usage = 0
 270:quantum/rgblight.c **** }
 3407               		.loc 1 270 3 view .LVU786
 3408 0000 81E0      		ldi r24,lo8(1)
 3409 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3410               	.LVL230:
 3411               		.cfi_endproc
 3412               	.LFE97:
 3414               		.section	.text.rgblight_mode,"ax",@progbits
 3415               	.global	rgblight_mode
 3417               	rgblight_mode:
 3418               	.LVL231:
 3419               	.LFB100:
 314:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, true);
 3420               		.loc 1 314 34 view -0
 3421               		.cfi_startproc
 3422               	/* prologue: function */
 3423               	/* frame size = 0 */
 3424               	/* stack size = 0 */
 3425               	.L__stack_usage = 0
 315:quantum/rgblight.c **** }
 3426               		.loc 1 315 3 view .LVU788
 3427 0000 61E0      		ldi r22,lo8(1)
 3428 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3429               	.LVL232:
 315:quantum/rgblight.c **** }
 3430               		.loc 1 315 3 is_stmt 0 view .LVU789
 3431               		.cfi_endproc
 3432               	.LFE100:
 3434               		.section	.text.rgblight_increase,"ax",@progbits
 3435               	.global	rgblight_increase
 3437               	rgblight_increase:
 3438               	.LFB90:
 229:quantum/rgblight.c ****   uint8_t mode = 0;
 3439               		.loc 1 229 30 is_stmt 1 view -0
 3440               		.cfi_startproc
 3441               	/* prologue: function */
 3442               	/* frame size = 0 */
 3443               	/* stack size = 0 */
 3444               	.L__stack_usage = 0
 230:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 3445               		.loc 1 230 3 view .LVU791
 3446               	.LVL233:
 231:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 3447               		.loc 1 231 3 view .LVU792
 231:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 3448               		.loc 1 231 22 is_stmt 0 view .LVU793
 3449 0000 8091 0000 		lds r24,rgblight_config
 3450 0004 8695      		lsr r24
 231:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 3451               		.loc 1 231 6 view .LVU794
 3452 0006 8432      		cpi r24,lo8(36)
 3453 0008 00F4      		brsh .L182
 232:quantum/rgblight.c ****   }
 3454               		.loc 1 232 5 is_stmt 1 view .LVU795
 232:quantum/rgblight.c ****   }
 3455               		.loc 1 232 10 is_stmt 0 view .LVU796
 3456 000a 8F5F      		subi r24,lo8(-(1))
 3457               	.LVL234:
 3458               	.L181:
 234:quantum/rgblight.c **** }
 3459               		.loc 1 234 3 is_stmt 1 view .LVU797
 3460 000c 0C94 0000 		jmp rgblight_mode
 3461               	.LVL235:
 3462               	.L182:
 230:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 3463               		.loc 1 230 11 is_stmt 0 view .LVU798
 3464 0010 80E0      		ldi r24,0
 3465 0012 00C0      		rjmp .L181
 3466               		.cfi_endproc
 3467               	.LFE90:
 3469               		.section	.text.rgblight_decrease,"ax",@progbits
 3470               	.global	rgblight_decrease
 3472               	rgblight_decrease:
 3473               	.LFB91:
 236:quantum/rgblight.c ****   uint8_t mode = 0;
 3474               		.loc 1 236 30 is_stmt 1 view -0
 3475               		.cfi_startproc
 3476               	/* prologue: function */
 3477               	/* frame size = 0 */
 3478               	/* stack size = 0 */
 3479               	.L__stack_usage = 0
 237:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3480               		.loc 1 237 3 view .LVU800
 3481               	.LVL236:
 239:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 3482               		.loc 1 239 3 view .LVU801
 239:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 3483               		.loc 1 239 22 is_stmt 0 view .LVU802
 3484 0000 8091 0000 		lds r24,rgblight_config
 3485 0004 8695      		lsr r24
 239:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 3486               		.loc 1 239 6 view .LVU803
 3487 0006 8230      		cpi r24,lo8(2)
 3488 0008 00F0      		brlo .L185
 240:quantum/rgblight.c ****   }
 3489               		.loc 1 240 5 is_stmt 1 view .LVU804
 240:quantum/rgblight.c ****   }
 3490               		.loc 1 240 10 is_stmt 0 view .LVU805
 3491 000a 8150      		subi r24,lo8(-(-1))
 3492               	.LVL237:
 3493               	.L184:
 242:quantum/rgblight.c **** }
 3494               		.loc 1 242 3 is_stmt 1 view .LVU806
 3495 000c 0C94 0000 		jmp rgblight_mode
 3496               	.LVL238:
 3497               	.L185:
 237:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3498               		.loc 1 237 11 is_stmt 0 view .LVU807
 3499 0010 80E0      		ldi r24,0
 3500 0012 00C0      		rjmp .L184
 3501               		.cfi_endproc
 3502               	.LFE91:
 3504               		.section	.text.rgblight_enable,"ax",@progbits
 3505               	.global	rgblight_enable
 3507               	rgblight_enable:
 3508               	.LFB104:
 343:quantum/rgblight.c ****   rgblight_config.enable = 1;
 3509               		.loc 1 343 28 is_stmt 1 view -0
 3510               		.cfi_startproc
 3511               	/* prologue: function */
 3512               	/* frame size = 0 */
 3513               	/* stack size = 0 */
 3514               	.L__stack_usage = 0
 344:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 3515               		.loc 1 344 3 view .LVU809
 344:quantum/rgblight.c ****   // No need to update EEPROM here. rgblight_mode() will do that, actually
 3516               		.loc 1 344 26 is_stmt 0 view .LVU810
 3517 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3518 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3519 0004 8081      		ld r24,Z
 3520 0006 8160      		ori r24,lo8(1<<0)
 3521 0008 8083      		st Z,r24
 347:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 3522               		.loc 1 347 93 is_stmt 1 view .LVU811
 348:quantum/rgblight.c **** }
 3523               		.loc 1 348 3 view .LVU812
 3524 000a 8695      		lsr r24
 3525 000c 0C94 0000 		jmp rgblight_mode
 3526               	.LVL239:
 3527               		.cfi_endproc
 3528               	.LFE104:
 3530               		.section	.text.rgblight_toggle,"ax",@progbits
 3531               	.global	rgblight_toggle
 3533               	rgblight_toggle:
 3534               	.LFB102:
 323:quantum/rgblight.c ****   xprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3535               		.loc 1 323 28 view -0
 3536               		.cfi_startproc
 3537               	/* prologue: function */
 3538               	/* frame size = 0 */
 3539               	/* stack size = 0 */
 3540               	.L__stack_usage = 0
 324:quantum/rgblight.c ****   if (rgblight_config.enable) {
 3541               		.loc 1 324 94 view .LVU814
 325:quantum/rgblight.c ****     rgblight_disable();
 3542               		.loc 1 325 3 view .LVU815
 325:quantum/rgblight.c ****     rgblight_disable();
 3543               		.loc 1 325 7 is_stmt 0 view .LVU816
 3544 0000 8091 0000 		lds r24,rgblight_config
 325:quantum/rgblight.c ****     rgblight_disable();
 3545               		.loc 1 325 6 view .LVU817
 3546 0004 80FD      		sbrc r24,0
 326:quantum/rgblight.c ****   }
 3547               		.loc 1 326 5 is_stmt 1 view .LVU818
 3548 0006 0C94 0000 		jmp rgblight_disable
 3549               	.LVL240:
 3550               	.L188:
 329:quantum/rgblight.c ****   }
 3551               		.loc 1 329 5 view .LVU819
 3552 000a 0C94 0000 		jmp rgblight_enable
 3553               	.LVL241:
 3554               		.cfi_endproc
 3555               	.LFE102:
 3557               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 3558               	.global	rgblight_mode_noeeprom
 3560               	rgblight_mode_noeeprom:
 3561               	.LVL242:
 3562               	.LFB101:
 318:quantum/rgblight.c ****   rgblight_mode_eeprom_helper(mode, false);
 3563               		.loc 1 318 43 view -0
 3564               		.cfi_startproc
 3565               	/* prologue: function */
 3566               	/* frame size = 0 */
 3567               	/* stack size = 0 */
 3568               	.L__stack_usage = 0
 319:quantum/rgblight.c **** }
 3569               		.loc 1 319 3 view .LVU821
 3570 0000 60E0      		ldi r22,0
 3571 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3572               	.LVL243:
 319:quantum/rgblight.c **** }
 3573               		.loc 1 319 3 is_stmt 0 view .LVU822
 3574               		.cfi_endproc
 3575               	.LFE101:
 3577               		.section	.text.rgblight_init,"ax",@progbits
 3578               	.global	rgblight_init
 3580               	rgblight_init:
 3581               	.LFB87:
 175:quantum/rgblight.c ****   /* if already initialized, don't do it again.
 3582               		.loc 1 175 26 is_stmt 1 view -0
 3583               		.cfi_startproc
 3584               	/* prologue: function */
 3585               	/* frame size = 0 */
 3586               	/* stack size = 0 */
 3587               	.L__stack_usage = 0
 179:quantum/rgblight.c **** 
 3588               		.loc 1 179 3 view .LVU824
 179:quantum/rgblight.c **** 
 3589               		.loc 1 179 6 is_stmt 0 view .LVU825
 3590 0000 8091 0000 		lds r24,is_rgblight_initialized
 3591 0004 8111      		cpse r24,__zero_reg__
 3592 0006 00C0      		rjmp .L190
 181:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 3593               		.loc 1 181 3 is_stmt 1 view .LVU826
 181:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 3594               		.loc 1 181 16 is_stmt 0 view .LVU827
 3595 0008 8091 0000 		lds r24,debug_config
 3596 000c 8160      		ori r24,lo8(1<<0)
 3597 000e 8093 0000 		sts debug_config,r24
 182:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 3598               		.loc 1 182 37 is_stmt 1 view .LVU828
 183:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 3599               		.loc 1 183 36 view .LVU829
 184:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 3600               		.loc 1 184 3 view .LVU830
 184:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 3601               		.loc 1 184 8 is_stmt 0 view .LVU831
 3602 0012 0E94 0000 		call eeconfig_is_enabled
 3603               	.LVL244:
 184:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 3604               		.loc 1 184 6 view .LVU832
 3605 0016 8111      		cpse r24,__zero_reg__
 3606 0018 00C0      		rjmp .L192
 185:quantum/rgblight.c ****     eeconfig_init();
 3607               		.loc 1 185 56 is_stmt 1 view .LVU833
 186:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 3608               		.loc 1 186 5 view .LVU834
 3609 001a 0E94 0000 		call eeconfig_init
 3610               	.LVL245:
 187:quantum/rgblight.c ****   }
 3611               		.loc 1 187 5 view .LVU835
 3612 001e 0E94 0000 		call eeconfig_update_rgblight_default
 3613               	.LVL246:
 3614               	.L192:
 189:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3615               		.loc 1 189 3 view .LVU836
 189:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3616               		.loc 1 189 25 is_stmt 0 view .LVU837
 3617 0022 0E94 0000 		call eeconfig_read_rgblight
 3618               	.LVL247:
 189:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3619               		.loc 1 189 23 view .LVU838
 3620 0026 6093 0000 		sts rgblight_config,r22
 3621 002a 7093 0000 		sts rgblight_config+1,r23
 3622 002e 8093 0000 		sts rgblight_config+2,r24
 3623 0032 9093 0000 		sts rgblight_config+3,r25
 190:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 3624               		.loc 1 190 37 is_stmt 1 view .LVU839
 191:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3625               		.loc 1 191 3 view .LVU840
 191:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3626               		.loc 1 191 7 is_stmt 0 view .LVU841
 3627 0036 6E7F      		andi r22,lo8(-2)
 191:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3628               		.loc 1 191 6 view .LVU842
 3629 0038 01F4      		brne .L193
 192:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 3630               		.loc 1 192 89 is_stmt 1 view .LVU843
 193:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 3631               		.loc 1 193 5 view .LVU844
 3632 003a 0E94 0000 		call eeconfig_update_rgblight_default
 3633               	.LVL248:
 194:quantum/rgblight.c ****   }
 3634               		.loc 1 194 5 view .LVU845
 194:quantum/rgblight.c ****   }
 3635               		.loc 1 194 27 is_stmt 0 view .LVU846
 3636 003e 0E94 0000 		call eeconfig_read_rgblight
 3637               	.LVL249:
 194:quantum/rgblight.c ****   }
 3638               		.loc 1 194 25 view .LVU847
 3639 0042 6093 0000 		sts rgblight_config,r22
 3640 0046 7093 0000 		sts rgblight_config+1,r23
 3641 004a 8093 0000 		sts rgblight_config+2,r24
 3642 004e 9093 0000 		sts rgblight_config+3,r25
 3643               	.L193:
 196:quantum/rgblight.c **** 
 3644               		.loc 1 196 3 is_stmt 1 view .LVU848
 3645 0052 0E94 0000 		call rgblight_check_config
 3646               	.LVL250:
 198:quantum/rgblight.c **** 
 3647               		.loc 1 198 3 view .LVU849
 201:quantum/rgblight.c **** #endif
 3648               		.loc 1 201 5 view .LVU850
 3649               	.LBB91:
 3650               	.LBI91:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3651               		.loc 1 717 6 view .LVU851
 3652               	.LBB92:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3653               		.loc 1 734 3 view .LVU852
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3654               		.loc 1 734 33 is_stmt 0 view .LVU853
 3655 0056 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3656               		.loc 1 735 41 is_stmt 1 view .LVU854
 3657               	.LBE92:
 3658               	.LBE91:
 204:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3659               		.loc 1 204 3 view .LVU855
 204:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3660               		.loc 1 204 7 is_stmt 0 view .LVU856
 3661 005a 8091 0000 		lds r24,rgblight_config
 204:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3662               		.loc 1 204 6 view .LVU857
 3663 005e 80FF      		sbrs r24,0
 3664 0060 00C0      		rjmp .L194
 205:quantum/rgblight.c ****   }
 3665               		.loc 1 205 5 is_stmt 1 view .LVU858
 3666 0062 8695      		lsr r24
 3667 0064 0E94 0000 		call rgblight_mode_noeeprom
 3668               	.LVL251:
 3669               	.L194:
 208:quantum/rgblight.c **** 
 3670               		.loc 1 208 3 view .LVU859
 208:quantum/rgblight.c **** 
 3671               		.loc 1 208 27 is_stmt 0 view .LVU860
 3672 0068 81E0      		ldi r24,lo8(1)
 3673 006a 8093 0000 		sts is_rgblight_initialized,r24
 3674               	.L190:
 3675               	/* epilogue start */
 210:quantum/rgblight.c **** 
 3676               		.loc 1 210 1 view .LVU861
 3677 006e 0895      		ret
 3678               		.cfi_endproc
 3679               	.LFE87:
 3681               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 3682               	.global	rgblight_enable_noeeprom
 3684               	rgblight_enable_noeeprom:
 3685               	.LFB105:
 351:quantum/rgblight.c ****   rgblight_config.enable = 1;
 3686               		.loc 1 351 37 is_stmt 1 view -0
 3687               		.cfi_startproc
 3688               	/* prologue: function */
 3689               	/* frame size = 0 */
 3690               	/* stack size = 0 */
 3691               	.L__stack_usage = 0
 352:quantum/rgblight.c ****   xprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3692               		.loc 1 352 3 view .LVU863
 352:quantum/rgblight.c ****   xprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3693               		.loc 1 352 26 is_stmt 0 view .LVU864
 3694 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3695 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3696 0004 8081      		ld r24,Z
 3697 0006 8160      		ori r24,lo8(1<<0)
 3698 0008 8083      		st Z,r24
 353:quantum/rgblight.c ****   rgblight_mode_noeeprom(rgblight_config.mode);
 3699               		.loc 1 353 95 is_stmt 1 view .LVU865
 354:quantum/rgblight.c **** }
 3700               		.loc 1 354 3 view .LVU866
 3701 000a 8695      		lsr r24
 3702 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 3703               	.LVL252:
 3704               		.cfi_endproc
 3705               	.LFE105:
 3707               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 3708               	.global	rgblight_toggle_noeeprom
 3710               	rgblight_toggle_noeeprom:
 3711               	.LFB103:
 333:quantum/rgblight.c ****   xprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3712               		.loc 1 333 37 view -0
 3713               		.cfi_startproc
 3714               	/* prologue: function */
 3715               	/* frame size = 0 */
 3716               	/* stack size = 0 */
 3717               	.L__stack_usage = 0
 334:quantum/rgblight.c ****   if (rgblight_config.enable) {
 3718               		.loc 1 334 96 view .LVU868
 335:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 3719               		.loc 1 335 3 view .LVU869
 335:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 3720               		.loc 1 335 7 is_stmt 0 view .LVU870
 3721 0000 8091 0000 		lds r24,rgblight_config
 335:quantum/rgblight.c ****     rgblight_disable_noeeprom();
 3722               		.loc 1 335 6 view .LVU871
 3723 0004 80FD      		sbrc r24,0
 336:quantum/rgblight.c ****   }
 3724               		.loc 1 336 5 is_stmt 1 view .LVU872
 3725 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 3726               	.LVL253:
 3727               	.L200:
 339:quantum/rgblight.c ****   }
 3728               		.loc 1 339 5 view .LVU873
 3729 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 3730               	.LVL254:
 3731               		.cfi_endproc
 3732               	.LFE103:
 3734               		.section	.text.rgblight_update_dword,"ax",@progbits
 3735               	.global	rgblight_update_dword
 3737               	rgblight_update_dword:
 3738               	.LVL255:
 3739               	.LFB89:
 216:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3740               		.loc 1 216 44 view -0
 3741               		.cfi_startproc
 3742               	/* prologue: function */
 3743               	/* frame size = 0 */
 3744               	/* stack size = 0 */
 3745               	.L__stack_usage = 0
 217:quantum/rgblight.c ****   rgblight_config.raw = dword;
 3746               		.loc 1 217 37 view .LVU875
 218:quantum/rgblight.c ****   if (rgblight_config.enable)
 3747               		.loc 1 218 3 view .LVU876
 218:quantum/rgblight.c ****   if (rgblight_config.enable)
 3748               		.loc 1 218 23 is_stmt 0 view .LVU877
 3749 0000 6093 0000 		sts rgblight_config,r22
 3750 0004 7093 0000 		sts rgblight_config+1,r23
 3751 0008 8093 0000 		sts rgblight_config+2,r24
 3752 000c 9093 0000 		sts rgblight_config+3,r25
 219:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3753               		.loc 1 219 3 is_stmt 1 view .LVU878
 219:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3754               		.loc 1 219 6 is_stmt 0 view .LVU879
 3755 0010 60FF      		sbrs r22,0
 3756 0012 00C0      		rjmp .L202
 220:quantum/rgblight.c ****   else {
 3757               		.loc 1 220 5 is_stmt 1 view .LVU880
 3758 0014 862F      		mov r24,r22
 3759 0016 8695      		lsr r24
 3760 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 3761               	.LVL256:
 3762               	.L202:
 223:quantum/rgblight.c **** #endif
 3763               		.loc 1 223 7 view .LVU881
 3764               	.LBB95:
 3765               	.LBI95:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3766               		.loc 1 717 6 view .LVU882
 3767               	.LBB96:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3768               		.loc 1 734 3 view .LVU883
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3769               		.loc 1 734 33 is_stmt 0 view .LVU884
 3770 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3771               		.loc 1 735 41 is_stmt 1 view .LVU885
 3772               	.LBE96:
 3773               	.LBE95:
 225:quantum/rgblight.c ****   }
 3774               		.loc 1 225 7 view .LVU886
 3775 0020 0C94 0000 		jmp rgblight_set
 3776               	.LVL257:
 225:quantum/rgblight.c ****   }
 3777               		.loc 1 225 7 is_stmt 0 view .LVU887
 3778               		.cfi_endproc
 3779               	.LFE89:
 3781               		.section	.text.rgblight_timer_disable,"ax",@progbits
 3782               	.global	rgblight_timer_disable
 3784               	rgblight_timer_disable:
 3785               	.LFB163:
 3786               		.cfi_startproc
 3787               	/* prologue: function */
 3788               	/* frame size = 0 */
 3789               	/* stack size = 0 */
 3790               	.L__stack_usage = 0
 3791 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 3792               	/* epilogue start */
 3793 0004 0895      		ret
 3794               		.cfi_endproc
 3795               	.LFE163:
 3797               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 3798               	.global	rgblight_timer_toggle
 3800               	rgblight_timer_toggle:
 3801               	.LFB149:
 750:quantum/rgblight.c ****   dprintf("rgblight timer toggle.\n");
 3802               		.loc 1 750 34 is_stmt 1 view -0
 3803               		.cfi_startproc
 3804               	/* prologue: function */
 3805               	/* frame size = 0 */
 3806               	/* stack size = 0 */
 3807               	.L__stack_usage = 0
 751:quantum/rgblight.c ****   if(rgblight_status.timer_enabled) {
 3808               		.loc 1 751 38 view .LVU889
 752:quantum/rgblight.c ****       rgblight_timer_disable();
 3809               		.loc 1 752 3 view .LVU890
 752:quantum/rgblight.c ****       rgblight_timer_disable();
 3810               		.loc 1 752 5 is_stmt 0 view .LVU891
 3811 0000 8091 0000 		lds r24,rgblight_status+1
 3812 0004 8823      		tst r24
 3813 0006 01F0      		breq .L205
 753:quantum/rgblight.c ****   } else {
 3814               		.loc 1 753 7 is_stmt 1 view .LVU892
 3815               	.LBB99:
 3816               	.LBI99:
 717:quantum/rgblight.c ****   // OLD!!!! Animation timer -- AVR Timer3
 3817               		.loc 1 717 6 view .LVU893
 3818               	.LBB100:
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3819               		.loc 1 734 3 view .LVU894
 734:quantum/rgblight.c ****   RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3820               		.loc 1 734 33 is_stmt 0 view .LVU895
 3821 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 735:quantum/rgblight.c **** }
 3822               		.loc 1 735 41 is_stmt 1 view .LVU896
 3823               	/* epilogue start */
 3824               	.LBE100:
 3825               	.LBE99:
 757:quantum/rgblight.c **** 
 3826               		.loc 1 757 1 is_stmt 0 view .LVU897
 3827 000c 0895      		ret
 3828               	.L205:
 755:quantum/rgblight.c ****   }
 3829               		.loc 1 755 7 is_stmt 1 view .LVU898
 3830 000e 0C94 0000 		jmp rgblight_timer_enable
 3831               	.LVL258:
 3832               		.cfi_endproc
 3833               	.LFE149:
 3835               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 3836               	.global	rgblight_show_solid_color
 3838               	rgblight_show_solid_color:
 3839               	.LVL259:
 3840               	.LFB150:
 759:quantum/rgblight.c ****   rgblight_enable();
 3841               		.loc 1 759 65 view -0
 3842               		.cfi_startproc
 759:quantum/rgblight.c ****   rgblight_enable();
 3843               		.loc 1 759 65 is_stmt 0 view .LVU900
 3844 0000 1F93      		push r17
 3845               	.LCFI82:
 3846               		.cfi_def_cfa_offset 3
 3847               		.cfi_offset 17, -2
 3848 0002 CF93      		push r28
 3849               	.LCFI83:
 3850               		.cfi_def_cfa_offset 4
 3851               		.cfi_offset 28, -3
 3852 0004 DF93      		push r29
 3853               	.LCFI84:
 3854               		.cfi_def_cfa_offset 5
 3855               		.cfi_offset 29, -4
 3856               	/* prologue: function */
 3857               	/* frame size = 0 */
 3858               	/* stack size = 3 */
 3859               	.L__stack_usage = 3
 3860 0006 C82F      		mov r28,r24
 3861 0008 D62F      		mov r29,r22
 3862 000a 142F      		mov r17,r20
 760:quantum/rgblight.c ****   rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 3863               		.loc 1 760 3 is_stmt 1 view .LVU901
 3864 000c 0E94 0000 		call rgblight_enable
 3865               	.LVL260:
 761:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 3866               		.loc 1 761 3 view .LVU902
 3867 0010 81E0      		ldi r24,lo8(1)
 3868 0012 0E94 0000 		call rgblight_mode
 3869               	.LVL261:
 762:quantum/rgblight.c **** }
 3870               		.loc 1 762 3 view .LVU903
 3871 0016 412F      		mov r20,r17
 3872 0018 6D2F      		mov r22,r29
 3873 001a 8C2F      		mov r24,r28
 3874               	/* epilogue start */
 763:quantum/rgblight.c **** 
 3875               		.loc 1 763 1 is_stmt 0 view .LVU904
 3876 001c DF91      		pop r29
 3877               	.LVL262:
 763:quantum/rgblight.c **** 
 3878               		.loc 1 763 1 view .LVU905
 3879 001e CF91      		pop r28
 3880               	.LVL263:
 763:quantum/rgblight.c **** 
 3881               		.loc 1 763 1 view .LVU906
 3882 0020 1F91      		pop r17
 3883               	.LVL264:
 762:quantum/rgblight.c **** }
 3884               		.loc 1 762 3 view .LVU907
 3885 0022 0C94 0000 		jmp rgblight_setrgb
 3886               	.LVL265:
 762:quantum/rgblight.c **** }
 3887               		.loc 1 762 3 view .LVU908
 3888               		.cfi_endproc
 3889               	.LFE150:
 3891               		.section	.text.rgblight_task,"ax",@progbits
 3892               	.global	rgblight_task
 3894               	rgblight_task:
 3895               	.LFB152:
 777:quantum/rgblight.c ****   if (rgblight_status.timer_enabled) {
 3896               		.loc 1 777 26 is_stmt 1 view -0
 3897               		.cfi_startproc
 3898 0000 0F93      		push r16
 3899               	.LCFI85:
 3900               		.cfi_def_cfa_offset 3
 3901               		.cfi_offset 16, -2
 3902 0002 1F93      		push r17
 3903               	.LCFI86:
 3904               		.cfi_def_cfa_offset 4
 3905               		.cfi_offset 17, -3
 3906 0004 CF93      		push r28
 3907               	.LCFI87:
 3908               		.cfi_def_cfa_offset 5
 3909               		.cfi_offset 28, -4
 3910 0006 DF93      		push r29
 3911               	.LCFI88:
 3912               		.cfi_def_cfa_offset 6
 3913               		.cfi_offset 29, -5
 3914               	/* prologue: function */
 3915               	/* frame size = 0 */
 3916               	/* stack size = 4 */
 3917               	.L__stack_usage = 4
 778:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 3918               		.loc 1 778 3 view .LVU910
 778:quantum/rgblight.c ****     effect_func_t effect_func = rgblight_effect_dummy;
 3919               		.loc 1 778 6 is_stmt 0 view .LVU911
 3920 0008 8091 0000 		lds r24,rgblight_status+1
 3921 000c 8823      		tst r24
 3922 000e 01F4      		brne .+2
 3923 0010 00C0      		rjmp .L209
 3924               	.LBB118:
 779:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 3925               		.loc 1 779 5 is_stmt 1 view .LVU912
 3926               	.LVL266:
 780:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 3927               		.loc 1 780 5 view .LVU913
 781:quantum/rgblight.c ****     animation_status.delta = delta;
 3928               		.loc 1 781 5 view .LVU914
 781:quantum/rgblight.c ****     animation_status.delta = delta;
 3929               		.loc 1 781 59 is_stmt 0 view .LVU915
 3930 0012 8091 0000 		lds r24,rgblight_status
 781:quantum/rgblight.c ****     animation_status.delta = delta;
 3931               		.loc 1 781 36 view .LVU916
 3932 0016 E091 0000 		lds r30,rgblight_config
 3933 001a E695      		lsr r30
 781:quantum/rgblight.c ****     animation_status.delta = delta;
 3934               		.loc 1 781 13 view .LVU917
 3935 001c E81B      		sub r30,r24
 3936               	.LVL267:
 782:quantum/rgblight.c **** 
 3937               		.loc 1 782 5 is_stmt 1 view .LVU918
 782:quantum/rgblight.c **** 
 3938               		.loc 1 782 28 is_stmt 0 view .LVU919
 3939 001e E093 0000 		sts animation_status+2,r30
 785:quantum/rgblight.c ****     }
 3940               		.loc 1 785 5 is_stmt 1 view .LVU920
 788:quantum/rgblight.c ****       // breathing mode
 3941               		.loc 1 788 10 view .LVU921
 788:quantum/rgblight.c ****       // breathing mode
 3942               		.loc 1 788 13 is_stmt 0 view .LVU922
 3943 0022 8230      		cpi r24,lo8(2)
 3944 0024 01F4      		brne .L212
 790:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 3945               		.loc 1 790 7 is_stmt 1 view .LVU923
 3946               	.LVL268:
 3947               	.LBB119:
 3948               	.LBI119:
 588:quantum/rgblight.c ****   return
 3949               		.loc 1 588 16 view .LVU924
 588:quantum/rgblight.c ****   return
 3950               		.loc 1 588 16 is_stmt 0 view .LVU925
 3951               	.LBE119:
 3952               	.LBE118:
 589:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 3953               		.loc 1 589 3 is_stmt 1 view .LVU926
 3954               	.LBB145:
 3955               	.LBB122:
 3956               	.LBB120:
 593:quantum/rgblight.c **** }
 3957               		.loc 1 593 5 view .LVU927
 593:quantum/rgblight.c **** }
 3958               		.loc 1 593 5 view .LVU928
 593:quantum/rgblight.c **** }
 3959               		.loc 1 593 5 view .LVU929
 3960               	.LBE120:
 3961               	.LBE122:
 790:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 3962               		.loc 1 790 23 is_stmt 0 view .LVU930
 3963 0026 F0E0      		ldi r31,0
 3964 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 3965 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 3966               	.LVL269:
 3967               	.LBB123:
 3968               	.LBB121:
 593:quantum/rgblight.c **** }
 3969               		.loc 1 593 5 view .LVU931
 3970               	/* #APP */
 3971               	 ;  593 "quantum/rgblight.c" 1
 3972 002c E491      		lpm r30, Z
 3973               		
 3974               	 ;  0 "" 2
 3975               	.LVL270:
 593:quantum/rgblight.c **** }
 3976               		.loc 1 593 5 is_stmt 1 view .LVU932
 593:quantum/rgblight.c **** }
 3977               		.loc 1 593 5 is_stmt 0 view .LVU933
 3978               	/* #NOAPP */
 3979               	.LBE121:
 3980               	.LBE123:
 790:quantum/rgblight.c ****       effect_func = rgblight_effect_breathing;
 3981               		.loc 1 790 21 view .LVU934
 3982 002e CE2F      		mov r28,r30
 3983 0030 D0E0      		ldi r29,0
 3984               	.LVL271:
 791:quantum/rgblight.c ****     }
 3985               		.loc 1 791 7 is_stmt 1 view .LVU935
 791:quantum/rgblight.c ****     }
 3986               		.loc 1 791 19 is_stmt 0 view .LVU936
 3987 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 3988 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 3989               	.LVL272:
 3990               	.L213:
 842:quantum/rgblight.c ****       animation_status.restart = false;
 3991               		.loc 1 842 5 is_stmt 1 view .LVU937
 842:quantum/rgblight.c ****       animation_status.restart = false;
 3992               		.loc 1 842 8 is_stmt 0 view .LVU938
 3993 0036 8091 0000 		lds r24,animation_status+3
 3994 003a 8823      		tst r24
 3995 003c 01F0      		breq .L219
 843:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 3996               		.loc 1 843 7 is_stmt 1 view .LVU939
 843:quantum/rgblight.c ****       animation_status.last_timer = timer_read() - interval_time - 1;
 3997               		.loc 1 843 32 is_stmt 0 view .LVU940
 3998 003e 1092 0000 		sts animation_status+3,__zero_reg__
 844:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 3999               		.loc 1 844 7 is_stmt 1 view .LVU941
 844:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 4000               		.loc 1 844 37 is_stmt 0 view .LVU942
 4001 0042 0E94 0000 		call timer_read
 4002               	.LVL273:
 844:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 4003               		.loc 1 844 66 view .LVU943
 4004 0046 9E01      		movw r18,r28
 4005 0048 2095      		com r18
 4006 004a 3095      		com r19
 4007 004c 820F      		add r24,r18
 4008 004e 931F      		adc r25,r19
 844:quantum/rgblight.c ****       animation_status.pos16 = 0; // restart signal to local each effect
 4009               		.loc 1 844 35 view .LVU944
 4010 0050 9093 0000 		sts animation_status+1,r25
 4011 0054 8093 0000 		sts animation_status,r24
 845:quantum/rgblight.c ****     }
 4012               		.loc 1 845 7 is_stmt 1 view .LVU945
 845:quantum/rgblight.c ****     }
 4013               		.loc 1 845 30 is_stmt 0 view .LVU946
 4014 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 4015 005c 1092 0000 		sts animation_status+4,__zero_reg__
 4016               	.L219:
 847:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4017               		.loc 1 847 5 is_stmt 1 view .LVU947
 847:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4018               		.loc 1 847 9 is_stmt 0 view .LVU948
 4019 0060 8091 0000 		lds r24,animation_status
 4020 0064 9091 0000 		lds r25,animation_status+1
 4021 0068 0E94 0000 		call timer_elapsed
 4022               	.LVL274:
 847:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4023               		.loc 1 847 8 view .LVU949
 4024 006c 8C17      		cp r24,r28
 4025 006e 9D07      		cpc r25,r29
 4026 0070 00F4      		brsh .+2
 4027 0072 00C0      		rjmp .L209
 864:quantum/rgblight.c ****       effect_func(&animation_status);
 4028               		.loc 1 864 7 is_stmt 1 view .LVU950
 864:quantum/rgblight.c ****       effect_func(&animation_status);
 4029               		.loc 1 864 35 is_stmt 0 view .LVU951
 4030 0074 E091 0000 		lds r30,animation_status
 4031 0078 F091 0000 		lds r31,animation_status+1
 4032 007c CE0F      		add r28,r30
 4033 007e DF1F      		adc r29,r31
 4034               	.LVL275:
 864:quantum/rgblight.c ****       effect_func(&animation_status);
 4035               		.loc 1 864 35 view .LVU952
 4036 0080 D093 0000 		sts animation_status+1,r29
 4037 0084 C093 0000 		sts animation_status,r28
 865:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4038               		.loc 1 865 7 is_stmt 1 view .LVU953
 4039 0088 80E0      		ldi r24,lo8(animation_status)
 4040 008a 90E0      		ldi r25,hi8(animation_status)
 4041 008c F801      		movw r30,r16
 4042               	/* epilogue start */
 4043               	.LBE145:
 876:quantum/rgblight.c **** 
 4044               		.loc 1 876 1 is_stmt 0 view .LVU954
 4045 008e DF91      		pop r29
 4046 0090 CF91      		pop r28
 4047 0092 1F91      		pop r17
 4048 0094 0F91      		pop r16
 4049               	.LVL276:
 4050               	.LBB146:
 865:quantum/rgblight.c **** #if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4051               		.loc 1 865 7 view .LVU955
 4052 0096 0994      		ijmp
 4053               	.LVL277:
 4054               	.L212:
 795:quantum/rgblight.c ****       // rainbow mood mode
 4055               		.loc 1 795 10 is_stmt 1 view .LVU956
 795:quantum/rgblight.c ****       // rainbow mood mode
 4056               		.loc 1 795 13 is_stmt 0 view .LVU957
 4057 0098 8630      		cpi r24,lo8(6)
 4058 009a 01F4      		brne .L214
 797:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 4059               		.loc 1 797 7 is_stmt 1 view .LVU958
 4060               	.LVL278:
 4061               	.LBB124:
 4062               	.LBI124:
 588:quantum/rgblight.c ****   return
 4063               		.loc 1 588 16 view .LVU959
 588:quantum/rgblight.c ****   return
 4064               		.loc 1 588 16 is_stmt 0 view .LVU960
 4065               	.LBE124:
 4066               	.LBE146:
 589:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 4067               		.loc 1 589 3 is_stmt 1 view .LVU961
 4068               	.LBB147:
 4069               	.LBB127:
 4070               	.LBB125:
 593:quantum/rgblight.c **** }
 4071               		.loc 1 593 5 view .LVU962
 593:quantum/rgblight.c **** }
 4072               		.loc 1 593 5 view .LVU963
 593:quantum/rgblight.c **** }
 4073               		.loc 1 593 5 view .LVU964
 4074               	.LBE125:
 4075               	.LBE127:
 797:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 4076               		.loc 1 797 23 is_stmt 0 view .LVU965
 4077 009c F0E0      		ldi r31,0
 4078 009e E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4079 00a0 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4080               	.LVL279:
 4081               	.LBB128:
 4082               	.LBB126:
 593:quantum/rgblight.c **** }
 4083               		.loc 1 593 5 view .LVU966
 4084               	/* #APP */
 4085               	 ;  593 "quantum/rgblight.c" 1
 4086 00a2 E491      		lpm r30, Z
 4087               		
 4088               	 ;  0 "" 2
 4089               	.LVL280:
 593:quantum/rgblight.c **** }
 4090               		.loc 1 593 5 is_stmt 1 view .LVU967
 593:quantum/rgblight.c **** }
 4091               		.loc 1 593 5 is_stmt 0 view .LVU968
 4092               	/* #NOAPP */
 4093               	.LBE126:
 4094               	.LBE128:
 797:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_mood;
 4095               		.loc 1 797 21 view .LVU969
 4096 00a4 CE2F      		mov r28,r30
 4097 00a6 D0E0      		ldi r29,0
 4098               	.LVL281:
 798:quantum/rgblight.c ****     }
 4099               		.loc 1 798 7 is_stmt 1 view .LVU970
 798:quantum/rgblight.c ****     }
 4100               		.loc 1 798 19 is_stmt 0 view .LVU971
 4101 00a8 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 4102 00aa 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 4103 00ac 00C0      		rjmp .L213
 4104               	.LVL282:
 4105               	.L214:
 802:quantum/rgblight.c ****       // rainbow swirl mode
 4106               		.loc 1 802 10 is_stmt 1 view .LVU972
 802:quantum/rgblight.c ****       // rainbow swirl mode
 4107               		.loc 1 802 13 is_stmt 0 view .LVU973
 4108 00ae 8930      		cpi r24,lo8(9)
 4109 00b0 01F4      		brne .L215
 804:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 4110               		.loc 1 804 7 is_stmt 1 view .LVU974
 4111               	.LVL283:
 4112               	.LBB129:
 4113               	.LBI129:
 588:quantum/rgblight.c ****   return
 4114               		.loc 1 588 16 view .LVU975
 588:quantum/rgblight.c ****   return
 4115               		.loc 1 588 16 is_stmt 0 view .LVU976
 4116               	.LBE129:
 4117               	.LBE147:
 589:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 4118               		.loc 1 589 3 is_stmt 1 view .LVU977
 4119               	.LBB148:
 4120               	.LBB132:
 4121               	.LBB130:
 593:quantum/rgblight.c **** }
 4122               		.loc 1 593 5 view .LVU978
 593:quantum/rgblight.c **** }
 4123               		.loc 1 593 5 view .LVU979
 593:quantum/rgblight.c **** }
 4124               		.loc 1 593 5 view .LVU980
 4125               	.LBE130:
 4126               	.LBE132:
 804:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 4127               		.loc 1 804 79 is_stmt 0 view .LVU981
 4128 00b2 E695      		lsr r30
 4129               	.LVL284:
 804:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 4130               		.loc 1 804 23 view .LVU982
 4131 00b4 F0E0      		ldi r31,0
 4132 00b6 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4133 00b8 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4134               	.LBB133:
 4135               	.LBB131:
 593:quantum/rgblight.c **** }
 4136               		.loc 1 593 5 view .LVU983
 4137               	/* #APP */
 4138               	 ;  593 "quantum/rgblight.c" 1
 4139 00ba E491      		lpm r30, Z
 4140               		
 4141               	 ;  0 "" 2
 4142               	.LVL285:
 593:quantum/rgblight.c **** }
 4143               		.loc 1 593 5 is_stmt 1 view .LVU984
 593:quantum/rgblight.c **** }
 4144               		.loc 1 593 5 is_stmt 0 view .LVU985
 4145               	/* #NOAPP */
 4146               	.LBE131:
 4147               	.LBE133:
 804:quantum/rgblight.c ****       effect_func = rgblight_effect_rainbow_swirl;
 4148               		.loc 1 804 21 view .LVU986
 4149 00bc CE2F      		mov r28,r30
 4150 00be D0E0      		ldi r29,0
 4151               	.LVL286:
 805:quantum/rgblight.c ****     }
 4152               		.loc 1 805 7 is_stmt 1 view .LVU987
 805:quantum/rgblight.c ****     }
 4153               		.loc 1 805 19 is_stmt 0 view .LVU988
 4154 00c0 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 4155 00c2 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 4156 00c4 00C0      		rjmp .L213
 4157               	.LVL287:
 4158               	.L215:
 809:quantum/rgblight.c ****       // snake mode
 4159               		.loc 1 809 10 is_stmt 1 view .LVU989
 809:quantum/rgblight.c ****       // snake mode
 4160               		.loc 1 809 13 is_stmt 0 view .LVU990
 4161 00c6 8F30      		cpi r24,lo8(15)
 4162 00c8 01F4      		brne .L216
 811:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 4163               		.loc 1 811 7 is_stmt 1 view .LVU991
 4164               	.LVL288:
 4165               	.LBB134:
 4166               	.LBI134:
 588:quantum/rgblight.c ****   return
 4167               		.loc 1 588 16 view .LVU992
 588:quantum/rgblight.c ****   return
 4168               		.loc 1 588 16 is_stmt 0 view .LVU993
 4169               	.LBE134:
 4170               	.LBE148:
 589:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 4171               		.loc 1 589 3 is_stmt 1 view .LVU994
 4172               	.LBB149:
 4173               	.LBB137:
 4174               	.LBB135:
 593:quantum/rgblight.c **** }
 4175               		.loc 1 593 5 view .LVU995
 593:quantum/rgblight.c **** }
 4176               		.loc 1 593 5 view .LVU996
 593:quantum/rgblight.c **** }
 4177               		.loc 1 593 5 view .LVU997
 4178               	.LBE135:
 4179               	.LBE137:
 811:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 4180               		.loc 1 811 71 is_stmt 0 view .LVU998
 4181 00ca E695      		lsr r30
 4182               	.LVL289:
 811:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 4183               		.loc 1 811 23 view .LVU999
 4184 00cc F0E0      		ldi r31,0
 4185 00ce E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 4186 00d0 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 4187               	.LBB138:
 4188               	.LBB136:
 593:quantum/rgblight.c **** }
 4189               		.loc 1 593 5 view .LVU1000
 4190               	/* #APP */
 4191               	 ;  593 "quantum/rgblight.c" 1
 4192 00d2 E491      		lpm r30, Z
 4193               		
 4194               	 ;  0 "" 2
 4195               	.LVL290:
 593:quantum/rgblight.c **** }
 4196               		.loc 1 593 5 is_stmt 1 view .LVU1001
 593:quantum/rgblight.c **** }
 4197               		.loc 1 593 5 is_stmt 0 view .LVU1002
 4198               	/* #NOAPP */
 4199               	.LBE136:
 4200               	.LBE138:
 811:quantum/rgblight.c ****       effect_func = rgblight_effect_snake;
 4201               		.loc 1 811 21 view .LVU1003
 4202 00d4 CE2F      		mov r28,r30
 4203 00d6 D0E0      		ldi r29,0
 4204               	.LVL291:
 812:quantum/rgblight.c ****     }
 4205               		.loc 1 812 7 is_stmt 1 view .LVU1004
 812:quantum/rgblight.c ****     }
 4206               		.loc 1 812 19 is_stmt 0 view .LVU1005
 4207 00d8 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 4208 00da 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 4209 00dc 00C0      		rjmp .L213
 4210               	.LVL292:
 4211               	.L216:
 816:quantum/rgblight.c ****       // knight mode
 4212               		.loc 1 816 10 is_stmt 1 view .LVU1006
 816:quantum/rgblight.c ****       // knight mode
 4213               		.loc 1 816 13 is_stmt 0 view .LVU1007
 4214 00de 8531      		cpi r24,lo8(21)
 4215 00e0 01F4      		brne .L217
 818:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 4216               		.loc 1 818 7 is_stmt 1 view .LVU1008
 4217               	.LVL293:
 4218               	.LBB139:
 4219               	.LBI139:
 588:quantum/rgblight.c ****   return
 4220               		.loc 1 588 16 view .LVU1009
 588:quantum/rgblight.c ****   return
 4221               		.loc 1 588 16 is_stmt 0 view .LVU1010
 4222               	.LBE139:
 4223               	.LBE149:
 589:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
 4224               		.loc 1 589 3 is_stmt 1 view .LVU1011
 4225               	.LBB150:
 4226               	.LBB142:
 4227               	.LBB140:
 593:quantum/rgblight.c **** }
 4228               		.loc 1 593 5 view .LVU1012
 593:quantum/rgblight.c **** }
 4229               		.loc 1 593 5 view .LVU1013
 593:quantum/rgblight.c **** }
 4230               		.loc 1 593 5 view .LVU1014
 4231               	.LBE140:
 4232               	.LBE142:
 818:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 4233               		.loc 1 818 23 is_stmt 0 view .LVU1015
 4234 00e2 F0E0      		ldi r31,0
 4235 00e4 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 4236 00e6 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 4237               	.LVL294:
 4238               	.LBB143:
 4239               	.LBB141:
 593:quantum/rgblight.c **** }
 4240               		.loc 1 593 5 view .LVU1016
 4241               	/* #APP */
 4242               	 ;  593 "quantum/rgblight.c" 1
 4243 00e8 E491      		lpm r30, Z
 4244               		
 4245               	 ;  0 "" 2
 4246               	.LVL295:
 593:quantum/rgblight.c **** }
 4247               		.loc 1 593 5 is_stmt 1 view .LVU1017
 593:quantum/rgblight.c **** }
 4248               		.loc 1 593 5 is_stmt 0 view .LVU1018
 4249               	/* #NOAPP */
 4250               	.LBE141:
 4251               	.LBE143:
 818:quantum/rgblight.c ****       effect_func = rgblight_effect_knight;
 4252               		.loc 1 818 21 view .LVU1019
 4253 00ea CE2F      		mov r28,r30
 4254 00ec D0E0      		ldi r29,0
 4255               	.LVL296:
 819:quantum/rgblight.c ****     }
 4256               		.loc 1 819 7 is_stmt 1 view .LVU1020
 819:quantum/rgblight.c ****     }
 4257               		.loc 1 819 19 is_stmt 0 view .LVU1021
 4258 00ee 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 4259 00f0 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 4260 00f2 00C0      		rjmp .L213
 4261               	.LVL297:
 4262               	.L217:
 823:quantum/rgblight.c ****       // christmas mode
 4263               		.loc 1 823 10 is_stmt 1 view .LVU1022
 825:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_christmas;
 4264               		.loc 1 825 21 is_stmt 0 view .LVU1023
 4265 00f4 C8EE      		ldi r28,lo8(-24)
 4266 00f6 D3E0      		ldi r29,lo8(3)
 826:quantum/rgblight.c ****     }
 4267               		.loc 1 826 19 view .LVU1024
 4268 00f8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 4269 00fa 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 823:quantum/rgblight.c ****       // christmas mode
 4270               		.loc 1 823 13 view .LVU1025
 4271 00fc 8831      		cpi r24,lo8(24)
 4272 00fe 01F4      		brne .+2
 4273 0100 00C0      		rjmp .L213
 830:quantum/rgblight.c ****       // RGB test mode
 4274               		.loc 1 830 10 is_stmt 1 view .LVU1026
 830:quantum/rgblight.c ****       // RGB test mode
 4275               		.loc 1 830 13 is_stmt 0 view .LVU1027
 4276 0102 8332      		cpi r24,lo8(35)
 4277 0104 01F4      		brne .L218
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4278               		.loc 1 832 7 is_stmt 1 view .LVU1028
 4279               	.LBB144:
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4280               		.loc 1 832 23 view .LVU1029
 4281               	.LVL298:
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4282               		.loc 1 832 23 view .LVU1030
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4283               		.loc 1 832 23 view .LVU1031
 4284 0106 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 4285 0108 F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 4286               	.LVL299:
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4287               		.loc 1 832 23 is_stmt 0 view .LVU1032
 4288               	/* #APP */
 4289               	 ;  832 "quantum/rgblight.c" 1
 4290 010a C591      		lpm r28, Z+
 4291 010c D491      		lpm r29, Z
 4292               		
 4293               	 ;  0 "" 2
 4294               	.LVL300:
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4295               		.loc 1 832 23 is_stmt 1 view .LVU1033
 832:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_rgbtest;
 4296               		.loc 1 832 23 is_stmt 0 view .LVU1034
 4297               	/* #NOAPP */
 4298               	.LBE144:
 833:quantum/rgblight.c ****     }
 4299               		.loc 1 833 7 is_stmt 1 view .LVU1035
 833:quantum/rgblight.c ****     }
 4300               		.loc 1 833 19 is_stmt 0 view .LVU1036
 4301 010e 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 4302 0110 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 4303 0112 00C0      		rjmp .L213
 4304               	.LVL301:
 4305               	.L218:
 837:quantum/rgblight.c ****       interval_time = 500;
 4306               		.loc 1 837 10 is_stmt 1 view .LVU1037
 838:quantum/rgblight.c ****       effect_func = (effect_func_t)rgblight_effect_alternating;
 4307               		.loc 1 838 21 is_stmt 0 view .LVU1038
 4308 0114 C4EF      		ldi r28,lo8(-12)
 4309 0116 D1E0      		ldi r29,lo8(1)
 839:quantum/rgblight.c ****     }
 4310               		.loc 1 839 19 view .LVU1039
 4311 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 4312 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 837:quantum/rgblight.c ****       interval_time = 500;
 4313               		.loc 1 837 13 view .LVU1040
 4314 011c 8432      		cpi r24,lo8(36)
 4315 011e 01F4      		brne .+2
 4316 0120 00C0      		rjmp .L213
 780:quantum/rgblight.c ****     uint8_t delta = rgblight_config.mode - rgblight_status.base_mode;
 4317               		.loc 1 780 14 view .LVU1041
 4318 0122 C0ED      		ldi r28,lo8(-48)
 4319 0124 D7E0      		ldi r29,lo8(7)
 779:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 4320               		.loc 1 779 19 view .LVU1042
 4321 0126 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 4322 0128 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 4323 012a 00C0      		rjmp .L213
 4324               	.LVL302:
 4325               	.L209:
 4326               	/* epilogue start */
 779:quantum/rgblight.c ****     uint16_t interval_time = 2000; // dummy interval
 4327               		.loc 1 779 19 view .LVU1043
 4328               	.LBE150:
 876:quantum/rgblight.c **** 
 4329               		.loc 1 876 1 view .LVU1044
 4330 012c DF91      		pop r29
 4331 012e CF91      		pop r28
 4332 0130 1F91      		pop r17
 4333 0132 0F91      		pop r16
 4334 0134 0895      		ret
 4335               		.cfi_endproc
 4336               	.LFE152:
 4338               		.section	.bss.maxval.3199,"aw",@nobits
 4341               	maxval.3199:
 4342 0000 00        		.zero	1
 4343               		.section	.data.increment.3178,"aw",@progbits
 4346               	increment.3178:
 4347 0000 01        		.byte	1
 4348               		.section	.data.high_bound.3177,"aw",@progbits
 4351               	high_bound.3177:
 4352 0000 02        		.byte	2
 4353               		.section	.bss.low_bound.3176,"aw",@nobits
 4356               	low_bound.3176:
 4357 0000 00        		.zero	1
 4358               		.section	.bss.pos.3161,"aw",@nobits
 4361               	pos.3161:
 4362 0000 00        		.zero	1
 4363               		.weak	RGBLED_RGBTEST_INTERVALS
 4364               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a",@progbits
 4367               	RGBLED_RGBTEST_INTERVALS:
 4368 0000 0004      		.word	1024
 4369               		.weak	RGBLED_KNIGHT_INTERVALS
 4370               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a",@progbits
 4373               	RGBLED_KNIGHT_INTERVALS:
 4374 0000 7F        		.byte	127
 4375 0001 3F        		.byte	63
 4376 0002 1F        		.byte	31
 4377               		.weak	RGBLED_SNAKE_INTERVALS
 4378               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a",@progbits
 4381               	RGBLED_SNAKE_INTERVALS:
 4382 0000 64        		.byte	100
 4383 0001 32        		.byte	50
 4384 0002 14        		.byte	20
 4385               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 4386               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a",@progbits
 4389               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 4390 0000 64        		.byte	100
 4391 0001 32        		.byte	50
 4392 0002 14        		.byte	20
 4393               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 4394               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a",@progbits
 4397               	RGBLED_RAINBOW_MOOD_INTERVALS:
 4398 0000 78        		.byte	120
 4399 0001 3C        		.byte	60
 4400 0002 1E        		.byte	30
 4401               		.weak	RGBLED_BREATHING_INTERVALS
 4402               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a",@progbits
 4405               	RGBLED_BREATHING_INTERVALS:
 4406 0000 1E        		.byte	30
 4407 0001 14        		.byte	20
 4408 0002 0A        		.byte	10
 4409 0003 05        		.byte	5
 4410               	.global	rgblight_effect_breathe_table
 4411               		.section	.progmem.data.rgblight_effect_breathe_table,"a",@progbits
 4414               	rgblight_effect_breathe_table:
 4415 0000 22        		.byte	34
 4416 0001 23        		.byte	35
 4417 0002 25        		.byte	37
 4418 0003 26        		.byte	38
 4419 0004 28        		.byte	40
 4420 0005 29        		.byte	41
 4421 0006 2A        		.byte	42
 4422 0007 2C        		.byte	44
 4423 0008 2D        		.byte	45
 4424 0009 2F        		.byte	47
 4425 000a 30        		.byte	48
 4426 000b 32        		.byte	50
 4427 000c 33        		.byte	51
 4428 000d 35        		.byte	53
 4429 000e 36        		.byte	54
 4430 000f 38        		.byte	56
 4431 0010 3A        		.byte	58
 4432 0011 3B        		.byte	59
 4433 0012 3D        		.byte	61
 4434 0013 3E        		.byte	62
 4435 0014 40        		.byte	64
 4436 0015 42        		.byte	66
 4437 0016 43        		.byte	67
 4438 0017 45        		.byte	69
 4439 0018 47        		.byte	71
 4440 0019 49        		.byte	73
 4441 001a 4A        		.byte	74
 4442 001b 4C        		.byte	76
 4443 001c 4E        		.byte	78
 4444 001d 50        		.byte	80
 4445 001e 51        		.byte	81
 4446 001f 53        		.byte	83
 4447 0020 55        		.byte	85
 4448 0021 57        		.byte	87
 4449 0022 59        		.byte	89
 4450 0023 5A        		.byte	90
 4451 0024 5C        		.byte	92
 4452 0025 5E        		.byte	94
 4453 0026 60        		.byte	96
 4454 0027 62        		.byte	98
 4455 0028 64        		.byte	100
 4456 0029 66        		.byte	102
 4457 002a 68        		.byte	104
 4458 002b 69        		.byte	105
 4459 002c 6B        		.byte	107
 4460 002d 6D        		.byte	109
 4461 002e 6F        		.byte	111
 4462 002f 71        		.byte	113
 4463 0030 73        		.byte	115
 4464 0031 75        		.byte	117
 4465 0032 77        		.byte	119
 4466 0033 79        		.byte	121
 4467 0034 7B        		.byte	123
 4468 0035 7D        		.byte	125
 4469 0036 7F        		.byte	127
 4470 0037 81        		.byte	-127
 4471 0038 83        		.byte	-125
 4472 0039 85        		.byte	-123
 4473 003a 87        		.byte	-121
 4474 003b 89        		.byte	-119
 4475 003c 8A        		.byte	-118
 4476 003d 8C        		.byte	-116
 4477 003e 8E        		.byte	-114
 4478 003f 90        		.byte	-112
 4479 0040 92        		.byte	-110
 4480 0041 94        		.byte	-108
 4481 0042 96        		.byte	-106
 4482 0043 98        		.byte	-104
 4483 0044 9A        		.byte	-102
 4484 0045 9C        		.byte	-100
 4485 0046 9E        		.byte	-98
 4486 0047 9F        		.byte	-97
 4487 0048 A1        		.byte	-95
 4488 0049 A3        		.byte	-93
 4489 004a A5        		.byte	-91
 4490 004b A7        		.byte	-89
 4491 004c A8        		.byte	-88
 4492 004d AA        		.byte	-86
 4493 004e AC        		.byte	-84
 4494 004f AE        		.byte	-82
 4495 0050 AF        		.byte	-81
 4496 0051 B1        		.byte	-79
 4497 0052 B3        		.byte	-77
 4498 0053 B4        		.byte	-76
 4499 0054 B6        		.byte	-74
 4500 0055 B8        		.byte	-72
 4501 0056 B9        		.byte	-71
 4502 0057 BB        		.byte	-69
 4503 0058 BC        		.byte	-68
 4504 0059 BE        		.byte	-66
 4505 005a BF        		.byte	-65
 4506 005b C1        		.byte	-63
 4507 005c C2        		.byte	-62
 4508 005d C3        		.byte	-61
 4509 005e C5        		.byte	-59
 4510 005f C6        		.byte	-58
 4511 0060 C7        		.byte	-57
 4512 0061 C9        		.byte	-55
 4513 0062 CA        		.byte	-54
 4514 0063 CB        		.byte	-53
 4515 0064 CC        		.byte	-52
 4516 0065 CD        		.byte	-51
 4517 0066 CE        		.byte	-50
 4518 0067 D0        		.byte	-48
 4519 0068 D1        		.byte	-47
 4520 0069 D2        		.byte	-46
 4521 006a D2        		.byte	-46
 4522 006b D3        		.byte	-45
 4523 006c D4        		.byte	-44
 4524 006d D5        		.byte	-43
 4525 006e D6        		.byte	-42
 4526 006f D7        		.byte	-41
 4527 0070 D7        		.byte	-41
 4528 0071 D8        		.byte	-40
 4529 0072 D9        		.byte	-39
 4530 0073 D9        		.byte	-39
 4531 0074 DA        		.byte	-38
 4532 0075 DA        		.byte	-38
 4533 0076 DB        		.byte	-37
 4534 0077 DB        		.byte	-37
 4535 0078 DB        		.byte	-37
 4536 0079 DC        		.byte	-36
 4537 007a DC        		.byte	-36
 4538 007b DC        		.byte	-36
 4539 007c DC        		.byte	-36
 4540 007d DC        		.byte	-36
 4541 007e DD        		.byte	-35
 4542 007f DD        		.byte	-35
 4543 0080 DD        		.byte	-35
 4544 0081 DD        		.byte	-35
 4545 0082 DC        		.byte	-36
 4546 0083 DC        		.byte	-36
 4547 0084 DC        		.byte	-36
 4548 0085 DC        		.byte	-36
 4549 0086 DC        		.byte	-36
 4550 0087 DB        		.byte	-37
 4551 0088 DB        		.byte	-37
 4552 0089 DB        		.byte	-37
 4553 008a DA        		.byte	-38
 4554 008b DA        		.byte	-38
 4555 008c D9        		.byte	-39
 4556 008d D9        		.byte	-39
 4557 008e D8        		.byte	-40
 4558 008f D7        		.byte	-41
 4559 0090 D7        		.byte	-41
 4560 0091 D6        		.byte	-42
 4561 0092 D5        		.byte	-43
 4562 0093 D4        		.byte	-44
 4563 0094 D3        		.byte	-45
 4564 0095 D2        		.byte	-46
 4565 0096 D2        		.byte	-46
 4566 0097 D1        		.byte	-47
 4567 0098 D0        		.byte	-48
 4568 0099 CE        		.byte	-50
 4569 009a CD        		.byte	-51
 4570 009b CC        		.byte	-52
 4571 009c CB        		.byte	-53
 4572 009d CA        		.byte	-54
 4573 009e C9        		.byte	-55
 4574 009f C7        		.byte	-57
 4575 00a0 C6        		.byte	-58
 4576 00a1 C5        		.byte	-59
 4577 00a2 C3        		.byte	-61
 4578 00a3 C2        		.byte	-62
 4579 00a4 C1        		.byte	-63
 4580 00a5 BF        		.byte	-65
 4581 00a6 BE        		.byte	-66
 4582 00a7 BC        		.byte	-68
 4583 00a8 BB        		.byte	-69
 4584 00a9 B9        		.byte	-71
 4585 00aa B8        		.byte	-72
 4586 00ab B6        		.byte	-74
 4587 00ac B4        		.byte	-76
 4588 00ad B3        		.byte	-77
 4589 00ae B1        		.byte	-79
 4590 00af AF        		.byte	-81
 4591 00b0 AE        		.byte	-82
 4592 00b1 AC        		.byte	-84
 4593 00b2 AA        		.byte	-86
 4594 00b3 A8        		.byte	-88
 4595 00b4 A7        		.byte	-89
 4596 00b5 A5        		.byte	-91
 4597 00b6 A3        		.byte	-93
 4598 00b7 A1        		.byte	-95
 4599 00b8 9F        		.byte	-97
 4600 00b9 9E        		.byte	-98
 4601 00ba 9C        		.byte	-100
 4602 00bb 9A        		.byte	-102
 4603 00bc 98        		.byte	-104
 4604 00bd 96        		.byte	-106
 4605 00be 94        		.byte	-108
 4606 00bf 92        		.byte	-110
 4607 00c0 90        		.byte	-112
 4608 00c1 8E        		.byte	-114
 4609 00c2 8C        		.byte	-116
 4610 00c3 8A        		.byte	-118
 4611 00c4 89        		.byte	-119
 4612 00c5 87        		.byte	-121
 4613 00c6 85        		.byte	-123
 4614 00c7 83        		.byte	-125
 4615 00c8 81        		.byte	-127
 4616 00c9 7F        		.byte	127
 4617 00ca 7D        		.byte	125
 4618 00cb 7B        		.byte	123
 4619 00cc 79        		.byte	121
 4620 00cd 77        		.byte	119
 4621 00ce 75        		.byte	117
 4622 00cf 73        		.byte	115
 4623 00d0 71        		.byte	113
 4624 00d1 6F        		.byte	111
 4625 00d2 6D        		.byte	109
 4626 00d3 6B        		.byte	107
 4627 00d4 69        		.byte	105
 4628 00d5 68        		.byte	104
 4629 00d6 66        		.byte	102
 4630 00d7 64        		.byte	100
 4631 00d8 62        		.byte	98
 4632 00d9 60        		.byte	96
 4633 00da 5E        		.byte	94
 4634 00db 5C        		.byte	92
 4635 00dc 5A        		.byte	90
 4636 00dd 59        		.byte	89
 4637 00de 57        		.byte	87
 4638 00df 55        		.byte	85
 4639 00e0 53        		.byte	83
 4640 00e1 51        		.byte	81
 4641 00e2 50        		.byte	80
 4642 00e3 4E        		.byte	78
 4643 00e4 4C        		.byte	76
 4644 00e5 4A        		.byte	74
 4645 00e6 49        		.byte	73
 4646 00e7 47        		.byte	71
 4647 00e8 45        		.byte	69
 4648 00e9 43        		.byte	67
 4649 00ea 42        		.byte	66
 4650 00eb 40        		.byte	64
 4651 00ec 3E        		.byte	62
 4652 00ed 3D        		.byte	61
 4653 00ee 3B        		.byte	59
 4654 00ef 3A        		.byte	58
 4655 00f0 38        		.byte	56
 4656 00f1 36        		.byte	54
 4657 00f2 35        		.byte	53
 4658 00f3 33        		.byte	51
 4659 00f4 32        		.byte	50
 4660 00f5 30        		.byte	48
 4661 00f6 2F        		.byte	47
 4662 00f7 2D        		.byte	45
 4663 00f8 2C        		.byte	44
 4664 00f9 2A        		.byte	42
 4665 00fa 29        		.byte	41
 4666 00fb 28        		.byte	40
 4667 00fc 26        		.byte	38
 4668 00fd 25        		.byte	37
 4669 00fe 23        		.byte	35
 4670 00ff 22        		.byte	34
 4671               		.section	.data.clipping_num_leds,"aw",@progbits
 4674               	clipping_num_leds:
 4675 0000 0F        		.byte	15
 4676               		.section	.bss.clipping_start_pos,"aw",@nobits
 4679               	clipping_start_pos:
 4680 0000 00        		.zero	1
 4681               		.comm	led,60,1
 4682               	.global	animation_status
 4683               		.section	.bss.animation_status,"aw",@nobits
 4686               	animation_status:
 4687 0000 0000 0000 		.zero	6
 4687      0000 
 4688               	.global	is_rgblight_initialized
 4689               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 4692               	is_rgblight_initialized:
 4693 0000 00        		.zero	1
 4694               	.global	rgblight_status
 4695               		.section	.bss.rgblight_status,"aw",@nobits
 4698               	rgblight_status:
 4699 0000 0000      		.zero	2
 4700               		.comm	rgblight_config,5,1
 4701               		.weak	RGBLED_GRADIENT_RANGES
 4702               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a",@progbits
 4705               	RGBLED_GRADIENT_RANGES:
 4706 0000 FF        		.byte	-1
 4707 0001 AA        		.byte	-86
 4708 0002 7F        		.byte	127
 4709 0003 55        		.byte	85
 4710 0004 40        		.byte	64
 4711               		.section	.rodata.mode_base_table,"a",@progbits
 4714               	mode_base_table:
 4715 0000 00        		.byte	0
 4716 0001 01        		.byte	1
 4717 0002 02        		.byte	2
 4718 0003 02        		.byte	2
 4719 0004 02        		.byte	2
 4720 0005 02        		.byte	2
 4721 0006 06        		.byte	6
 4722 0007 06        		.byte	6
 4723 0008 06        		.byte	6
 4724 0009 09        		.byte	9
 4725 000a 09        		.byte	9
 4726 000b 09        		.byte	9
 4727 000c 09        		.byte	9
 4728 000d 09        		.byte	9
 4729 000e 09        		.byte	9
 4730 000f 0F        		.byte	15
 4731 0010 0F        		.byte	15
 4732 0011 0F        		.byte	15
 4733 0012 0F        		.byte	15
 4734 0013 0F        		.byte	15
 4735 0014 0F        		.byte	15
 4736 0015 15        		.byte	21
 4737 0016 15        		.byte	21
 4738 0017 15        		.byte	21
 4739 0018 18        		.byte	24
 4740 0019 19        		.byte	25
 4741 001a 19        		.byte	25
 4742 001b 19        		.byte	25
 4743 001c 19        		.byte	25
 4744 001d 19        		.byte	25
 4745 001e 19        		.byte	25
 4746 001f 19        		.byte	25
 4747 0020 19        		.byte	25
 4748 0021 19        		.byte	25
 4749 0022 19        		.byte	25
 4750 0023 23        		.byte	35
 4751 0024 24        		.byte	36
 4752               		.section	.data.static_effect_table,"aw",@progbits
 4755               	static_effect_table:
 4756 0000 01        		.byte	1
 4757 0001 19        		.byte	25
 4758 0002 1A        		.byte	26
 4759 0003 1B        		.byte	27
 4760 0004 1C        		.byte	28
 4761 0005 1D        		.byte	29
 4762 0006 1E        		.byte	30
 4763 0007 1F        		.byte	31
 4764 0008 20        		.byte	32
 4765 0009 21        		.byte	33
 4766 000a 22        		.byte	34
 4767               		.text
 4768               	.Letext0:
 4769               		.file 4 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 4770               		.file 5 "quantum/rgblight_types.h"
 4771               		.file 6 "tmk_core/common/timer.h"
 4772               		.file 7 "quantum/rgblight.h"
 4773               		.file 8 "quantum/color.h"
 4774               		.file 9 "tmk_core/common/debug.h"
 4775               		.file 10 "quantum/led_tables.h"
 4776               		.file 11 "./lib/lib8tion/random8.h"
 4777               		.file 12 "./lib/lib8tion/trig8.h"
 4778               		.file 13 "quantum/rgblight_breathe_table.h"
 4779               		.file 14 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/string.h"
 4780               		.file 15 "drivers/avr/ws2812.h"
 4781               		.file 16 "tmk_core/common/eeconfig.h"
 4782               		.file 17 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4679   .bss.clipping_start_pos:0000000000000000 clipping_start_pos
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4674   .data.clipping_num_leds:0000000000000000 clipping_num_leds
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:55     .text.sethsv:0000000000000000 sethsv
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:119    .text.setrgb:0000000000000000 setrgb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:148    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:191    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:211    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:262    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:304    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:328    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:351    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:381    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:413    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:445    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:464    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:483    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:502    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:000000000000003c led
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:564    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:615    .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:678    .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4414   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:746    .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:793    .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4341   .bss.maxval.3199:0000000000000000 maxval.3199
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:942    .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4714   .rodata.mode_base_table:0000000000000000 mode_base_table
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4698   .bss.rgblight_status:0000000000000000 rgblight_status
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4705   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1276   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1310   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1328   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1346   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1380   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1398   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1416   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1447   .text.rgblight_increase_sat_helper:000000000000000e L_1115
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1470   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1488   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1506   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1536   .text.rgblight_decrease_sat_helper:000000000000000e L_1171
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1559   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1577   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1595   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1625   .text.rgblight_increase_val_helper:000000000000000e L_1227
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1648   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1666   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1684   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1714   .text.rgblight_decrease_val_helper:000000000000000e L_1283
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1737   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1755   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1773   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1793   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1813   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1859   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:1931   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2023   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2102   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2131   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2160   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2189   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2218   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2322   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4361   .bss.pos.3161:0000000000000000 pos.3161
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2530   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4356   .bss.low_bound.3176:0000000000000000 low_bound.3176
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4351   .data.high_bound.3177:0000000000000000 high_bound.3177
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4346   .data.increment.3178:0000000000000000 increment.3178
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2681   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2798   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2926   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:2995   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3057   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3078   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4755   .data.static_effect_table:0000000000000000 static_effect_table
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4686   .bss.animation_status:0000000000000000 animation_status
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3137   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3264   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3305   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3323   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3341   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3381   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3399   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3417   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3437   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3472   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3507   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3533   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3560   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3580   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4692   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3684   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3710   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3737   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3784   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3800   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3838   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:3894   .text.rgblight_task:0000000000000000 rgblight_task
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4405   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4397   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4389   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4381   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4373   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccZ9XCDc.s:4367   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds_rgbw
__divmodhi4
__udivmodhi4
memchr
timer_read
debug_config
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
