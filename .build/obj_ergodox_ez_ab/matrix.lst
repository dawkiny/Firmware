   1               		.file	"matrix.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.init_cols,"ax",@progbits
  12               	init_cols:
  13               	.LFB143:
  14               		.file 1 "keyboards/ergodox_ez/matrix.c"
   1:keyboards/ergodox_ez/matrix.c **** /*
   2:keyboards/ergodox_ez/matrix.c **** 
   3:keyboards/ergodox_ez/matrix.c **** Note for ErgoDox EZ customizers: Here be dragons!
   4:keyboards/ergodox_ez/matrix.c **** This is not a file you want to be messing with.
   5:keyboards/ergodox_ez/matrix.c **** All of the interesting stuff for you is under keymaps/ :)
   6:keyboards/ergodox_ez/matrix.c **** Love, Erez
   7:keyboards/ergodox_ez/matrix.c **** 
   8:keyboards/ergodox_ez/matrix.c **** Copyright 2013 Oleg Kostyuk <cub.uanic@gmail.com>
   9:keyboards/ergodox_ez/matrix.c **** 
  10:keyboards/ergodox_ez/matrix.c **** This program is free software: you can redistribute it and/or modify
  11:keyboards/ergodox_ez/matrix.c **** it under the terms of the GNU General Public License as published by
  12:keyboards/ergodox_ez/matrix.c **** the Free Software Foundation, either version 2 of the License, or
  13:keyboards/ergodox_ez/matrix.c **** (at your option) any later version.
  14:keyboards/ergodox_ez/matrix.c **** 
  15:keyboards/ergodox_ez/matrix.c **** This program is distributed in the hope that it will be useful,
  16:keyboards/ergodox_ez/matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  17:keyboards/ergodox_ez/matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  18:keyboards/ergodox_ez/matrix.c **** GNU General Public License for more details.
  19:keyboards/ergodox_ez/matrix.c **** 
  20:keyboards/ergodox_ez/matrix.c **** You should have received a copy of the GNU General Public License
  21:keyboards/ergodox_ez/matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  22:keyboards/ergodox_ez/matrix.c **** */
  23:keyboards/ergodox_ez/matrix.c **** 
  24:keyboards/ergodox_ez/matrix.c **** /*
  25:keyboards/ergodox_ez/matrix.c ****  * scan matrix
  26:keyboards/ergodox_ez/matrix.c ****  */
  27:keyboards/ergodox_ez/matrix.c **** #include <stdint.h>
  28:keyboards/ergodox_ez/matrix.c **** #include <stdbool.h>
  29:keyboards/ergodox_ez/matrix.c **** #include <avr/io.h>
  30:keyboards/ergodox_ez/matrix.c **** #include "wait.h"
  31:keyboards/ergodox_ez/matrix.c **** #include "action_layer.h"
  32:keyboards/ergodox_ez/matrix.c **** #include "print.h"
  33:keyboards/ergodox_ez/matrix.c **** #include "debug.h"
  34:keyboards/ergodox_ez/matrix.c **** #include "util.h"
  35:keyboards/ergodox_ez/matrix.c **** #include "matrix.h"
  36:keyboards/ergodox_ez/matrix.c **** #include "debounce.h"
  37:keyboards/ergodox_ez/matrix.c **** #include QMK_KEYBOARD_H
  38:keyboards/ergodox_ez/matrix.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
  39:keyboards/ergodox_ez/matrix.c **** #  include "timer.h"
  40:keyboards/ergodox_ez/matrix.c **** #endif
  41:keyboards/ergodox_ez/matrix.c **** 
  42:keyboards/ergodox_ez/matrix.c **** /*
  43:keyboards/ergodox_ez/matrix.c ****  * This constant define not debouncing time in msecs, assuming eager_pr.
  44:keyboards/ergodox_ez/matrix.c ****  *
  45:keyboards/ergodox_ez/matrix.c ****  * On Ergodox matrix scan rate is relatively low, because of slow I2C.
  46:keyboards/ergodox_ez/matrix.c ****  * Now it's only 317 scans/second, or about 3.15 msec/scan.
  47:keyboards/ergodox_ez/matrix.c ****  * According to Cherry specs, debouncing time is 5 msec.
  48:keyboards/ergodox_ez/matrix.c ****  *
  49:keyboards/ergodox_ez/matrix.c ****  * However, some switches seem to have higher debouncing requirements, or
  50:keyboards/ergodox_ez/matrix.c ****  * something else might be wrong. (Also, the scan speed has improved since
  51:keyboards/ergodox_ez/matrix.c ****  * that comment was written.)
  52:keyboards/ergodox_ez/matrix.c ****  */
  53:keyboards/ergodox_ez/matrix.c **** 
  54:keyboards/ergodox_ez/matrix.c **** #ifndef DEBOUNCE
  55:keyboards/ergodox_ez/matrix.c **** #  define DEBOUNCE 5
  56:keyboards/ergodox_ez/matrix.c **** #endif
  57:keyboards/ergodox_ez/matrix.c **** 
  58:keyboards/ergodox_ez/matrix.c **** /* matrix state(1:on, 0:off) */
  59:keyboards/ergodox_ez/matrix.c **** static matrix_row_t raw_matrix[MATRIX_ROWS];  // raw values
  60:keyboards/ergodox_ez/matrix.c **** static matrix_row_t matrix[MATRIX_ROWS];      // debounced values
  61:keyboards/ergodox_ez/matrix.c **** 
  62:keyboards/ergodox_ez/matrix.c **** static matrix_row_t read_cols(uint8_t row);
  63:keyboards/ergodox_ez/matrix.c **** static void         init_cols(void);
  64:keyboards/ergodox_ez/matrix.c **** static void         unselect_rows(void);
  65:keyboards/ergodox_ez/matrix.c **** static void         select_row(uint8_t row);
  66:keyboards/ergodox_ez/matrix.c **** 
  67:keyboards/ergodox_ez/matrix.c **** static uint8_t mcp23018_reset_loop;
  68:keyboards/ergodox_ez/matrix.c **** // static uint16_t mcp23018_reset_loop;
  69:keyboards/ergodox_ez/matrix.c **** 
  70:keyboards/ergodox_ez/matrix.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
  71:keyboards/ergodox_ez/matrix.c **** uint32_t matrix_timer;
  72:keyboards/ergodox_ez/matrix.c **** uint32_t matrix_scan_count;
  73:keyboards/ergodox_ez/matrix.c **** #endif
  74:keyboards/ergodox_ez/matrix.c **** 
  75:keyboards/ergodox_ez/matrix.c **** __attribute__((weak)) void matrix_init_user(void) {}
  76:keyboards/ergodox_ez/matrix.c **** 
  77:keyboards/ergodox_ez/matrix.c **** __attribute__((weak)) void matrix_scan_user(void) {}
  78:keyboards/ergodox_ez/matrix.c **** 
  79:keyboards/ergodox_ez/matrix.c **** __attribute__((weak)) void matrix_init_kb(void) { matrix_init_user(); }
  80:keyboards/ergodox_ez/matrix.c **** 
  81:keyboards/ergodox_ez/matrix.c **** __attribute__((weak)) void matrix_scan_kb(void) { matrix_scan_user(); }
  82:keyboards/ergodox_ez/matrix.c **** 
  83:keyboards/ergodox_ez/matrix.c **** inline uint8_t matrix_rows(void) { return MATRIX_ROWS; }
  84:keyboards/ergodox_ez/matrix.c **** 
  85:keyboards/ergodox_ez/matrix.c **** inline uint8_t matrix_cols(void) { return MATRIX_COLS; }
  86:keyboards/ergodox_ez/matrix.c **** 
  87:keyboards/ergodox_ez/matrix.c **** void matrix_init(void) {
  88:keyboards/ergodox_ez/matrix.c ****   // initialize row and col
  89:keyboards/ergodox_ez/matrix.c **** 
  90:keyboards/ergodox_ez/matrix.c ****   mcp23018_status = init_mcp23018();
  91:keyboards/ergodox_ez/matrix.c **** 
  92:keyboards/ergodox_ez/matrix.c ****   unselect_rows();
  93:keyboards/ergodox_ez/matrix.c ****   init_cols();
  94:keyboards/ergodox_ez/matrix.c **** 
  95:keyboards/ergodox_ez/matrix.c ****   // initialize matrix state: all keys off
  96:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
  97:keyboards/ergodox_ez/matrix.c ****     matrix[i]     = 0;
  98:keyboards/ergodox_ez/matrix.c ****     raw_matrix[i] = 0;    
  99:keyboards/ergodox_ez/matrix.c ****   }
 100:keyboards/ergodox_ez/matrix.c **** 
 101:keyboards/ergodox_ez/matrix.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 102:keyboards/ergodox_ez/matrix.c ****   matrix_timer      = timer_read32();
 103:keyboards/ergodox_ez/matrix.c ****   matrix_scan_count = 0;
 104:keyboards/ergodox_ez/matrix.c **** #endif
 105:keyboards/ergodox_ez/matrix.c ****   debounce_init(MATRIX_ROWS);
 106:keyboards/ergodox_ez/matrix.c ****   matrix_init_quantum();
 107:keyboards/ergodox_ez/matrix.c **** }
 108:keyboards/ergodox_ez/matrix.c **** 
 109:keyboards/ergodox_ez/matrix.c **** void matrix_power_up(void) {
 110:keyboards/ergodox_ez/matrix.c ****   mcp23018_status = init_mcp23018();
 111:keyboards/ergodox_ez/matrix.c **** 
 112:keyboards/ergodox_ez/matrix.c ****   unselect_rows();
 113:keyboards/ergodox_ez/matrix.c ****   init_cols();
 114:keyboards/ergodox_ez/matrix.c **** 
 115:keyboards/ergodox_ez/matrix.c ****   // initialize matrix state: all keys off
 116:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 117:keyboards/ergodox_ez/matrix.c ****     matrix[i] = 0;
 118:keyboards/ergodox_ez/matrix.c ****   }
 119:keyboards/ergodox_ez/matrix.c **** 
 120:keyboards/ergodox_ez/matrix.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 121:keyboards/ergodox_ez/matrix.c ****   matrix_timer      = timer_read32();
 122:keyboards/ergodox_ez/matrix.c ****   matrix_scan_count = 0;
 123:keyboards/ergodox_ez/matrix.c **** #endif
 124:keyboards/ergodox_ez/matrix.c **** }
 125:keyboards/ergodox_ez/matrix.c **** 
 126:keyboards/ergodox_ez/matrix.c **** // Reads and stores a row, returning
 127:keyboards/ergodox_ez/matrix.c **** // whether a change occurred.
 128:keyboards/ergodox_ez/matrix.c **** static inline bool store_raw_matrix_row(uint8_t index) {
 129:keyboards/ergodox_ez/matrix.c ****   matrix_row_t temp = read_cols(index);
 130:keyboards/ergodox_ez/matrix.c ****   if (raw_matrix[index] != temp) {
 131:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 132:keyboards/ergodox_ez/matrix.c ****     return true;
 133:keyboards/ergodox_ez/matrix.c ****   }
 134:keyboards/ergodox_ez/matrix.c ****   return false;
 135:keyboards/ergodox_ez/matrix.c **** }
 136:keyboards/ergodox_ez/matrix.c **** 
 137:keyboards/ergodox_ez/matrix.c **** uint8_t matrix_scan(void) {
 138:keyboards/ergodox_ez/matrix.c ****   if (mcp23018_status) {  // if there was an error
 139:keyboards/ergodox_ez/matrix.c ****     if (++mcp23018_reset_loop == 0) {
 140:keyboards/ergodox_ez/matrix.c ****       // if (++mcp23018_reset_loop >= 1300) {
 141:keyboards/ergodox_ez/matrix.c ****       // since mcp23018_reset_loop is 8 bit - we'll try to reset once in 255 matrix scans
 142:keyboards/ergodox_ez/matrix.c ****       // this will be approx bit more frequent than once per second
 143:keyboards/ergodox_ez/matrix.c ****       print("trying to reset mcp23018\n");
 144:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = init_mcp23018();
 145:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) {
 146:keyboards/ergodox_ez/matrix.c ****         print("left side not responding\n");
 147:keyboards/ergodox_ez/matrix.c ****       } else {
 148:keyboards/ergodox_ez/matrix.c ****         print("left side attached\n");
 149:keyboards/ergodox_ez/matrix.c ****         ergodox_blink_all_leds();
 150:keyboards/ergodox_ez/matrix.c ****       }
 151:keyboards/ergodox_ez/matrix.c ****     }
 152:keyboards/ergodox_ez/matrix.c ****   }
 153:keyboards/ergodox_ez/matrix.c **** 
 154:keyboards/ergodox_ez/matrix.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 155:keyboards/ergodox_ez/matrix.c ****   matrix_scan_count++;
 156:keyboards/ergodox_ez/matrix.c **** 
 157:keyboards/ergodox_ez/matrix.c ****   uint32_t timer_now = timer_read32();
 158:keyboards/ergodox_ez/matrix.c ****   if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 159:keyboards/ergodox_ez/matrix.c ****     print("matrix scan frequency: ");
 160:keyboards/ergodox_ez/matrix.c ****     pdec(matrix_scan_count);
 161:keyboards/ergodox_ez/matrix.c ****     print("\n");
 162:keyboards/ergodox_ez/matrix.c **** 
 163:keyboards/ergodox_ez/matrix.c ****     matrix_timer      = timer_now;
 164:keyboards/ergodox_ez/matrix.c ****     matrix_scan_count = 0;
 165:keyboards/ergodox_ez/matrix.c ****   }
 166:keyboards/ergodox_ez/matrix.c **** #endif
 167:keyboards/ergodox_ez/matrix.c **** 
 168:keyboards/ergodox_ez/matrix.c **** #ifdef LEFT_LEDS
 169:keyboards/ergodox_ez/matrix.c ****   mcp23018_status = ergodox_left_leds_update();
 170:keyboards/ergodox_ez/matrix.c **** #endif  // LEFT_LEDS
 171:keyboards/ergodox_ez/matrix.c ****   bool changed = false;  
 172:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS_PER_SIDE; i++) {
 173:keyboards/ergodox_ez/matrix.c ****     // select rows from left and right hands
 174:keyboards/ergodox_ez/matrix.c ****     uint8_t left_index = i;
 175:keyboards/ergodox_ez/matrix.c ****     uint8_t right_index = i + MATRIX_ROWS_PER_SIDE;
 176:keyboards/ergodox_ez/matrix.c ****     select_row(left_index);
 177:keyboards/ergodox_ez/matrix.c ****     select_row(right_index);
 178:keyboards/ergodox_ez/matrix.c **** 
 179:keyboards/ergodox_ez/matrix.c ****     // we don't need a 30us delay anymore, because selecting a
 180:keyboards/ergodox_ez/matrix.c ****     // left-hand row requires more than 30us for i2c.
 181:keyboards/ergodox_ez/matrix.c ****     
 182:keyboards/ergodox_ez/matrix.c ****     changed |= store_raw_matrix_row(left_index);
 183:keyboards/ergodox_ez/matrix.c ****     changed |= store_raw_matrix_row(right_index);
 184:keyboards/ergodox_ez/matrix.c **** 
 185:keyboards/ergodox_ez/matrix.c ****     unselect_rows();
 186:keyboards/ergodox_ez/matrix.c ****   }
 187:keyboards/ergodox_ez/matrix.c ****   
 188:keyboards/ergodox_ez/matrix.c ****   debounce(raw_matrix, matrix, MATRIX_ROWS, changed);
 189:keyboards/ergodox_ez/matrix.c ****   matrix_scan_quantum();
 190:keyboards/ergodox_ez/matrix.c **** 
 191:keyboards/ergodox_ez/matrix.c ****   return 1;
 192:keyboards/ergodox_ez/matrix.c **** }
 193:keyboards/ergodox_ez/matrix.c **** 
 194:keyboards/ergodox_ez/matrix.c **** bool matrix_is_modified(void)  // deprecated and evidently not called.
 195:keyboards/ergodox_ez/matrix.c **** {
 196:keyboards/ergodox_ez/matrix.c ****   return true;
 197:keyboards/ergodox_ez/matrix.c **** }
 198:keyboards/ergodox_ez/matrix.c **** 
 199:keyboards/ergodox_ez/matrix.c **** inline bool matrix_is_on(uint8_t row, uint8_t col) { return (matrix[row] & ((matrix_row_t)1 << col)
 200:keyboards/ergodox_ez/matrix.c **** 
 201:keyboards/ergodox_ez/matrix.c **** inline matrix_row_t matrix_get_row(uint8_t row) { return matrix[row]; }
 202:keyboards/ergodox_ez/matrix.c **** 
 203:keyboards/ergodox_ez/matrix.c **** void matrix_print(void) {
 204:keyboards/ergodox_ez/matrix.c ****   print("\nr/c 0123456789ABCDEF\n");
 205:keyboards/ergodox_ez/matrix.c ****   for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
 206:keyboards/ergodox_ez/matrix.c ****     phex(row);
 207:keyboards/ergodox_ez/matrix.c ****     print(": ");
 208:keyboards/ergodox_ez/matrix.c ****     pbin_reverse16(matrix_get_row(row));
 209:keyboards/ergodox_ez/matrix.c ****     print("\n");
 210:keyboards/ergodox_ez/matrix.c ****   }
 211:keyboards/ergodox_ez/matrix.c **** }
 212:keyboards/ergodox_ez/matrix.c **** 
 213:keyboards/ergodox_ez/matrix.c **** uint8_t matrix_key_count(void) {
 214:keyboards/ergodox_ez/matrix.c ****   uint8_t count = 0;
 215:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 216:keyboards/ergodox_ez/matrix.c ****     count += bitpop16(matrix[i]);
 217:keyboards/ergodox_ez/matrix.c ****   }
 218:keyboards/ergodox_ez/matrix.c ****   return count;
 219:keyboards/ergodox_ez/matrix.c **** }
 220:keyboards/ergodox_ez/matrix.c **** 
 221:keyboards/ergodox_ez/matrix.c **** /* Column pin configuration
 222:keyboards/ergodox_ez/matrix.c ****  *
 223:keyboards/ergodox_ez/matrix.c ****  * Teensy
 224:keyboards/ergodox_ez/matrix.c ****  * col: 0   1   2   3   4   5
 225:keyboards/ergodox_ez/matrix.c ****  * pin: F0  F1  F4  F5  F6  F7
 226:keyboards/ergodox_ez/matrix.c ****  *
 227:keyboards/ergodox_ez/matrix.c ****  * MCP23018
 228:keyboards/ergodox_ez/matrix.c ****  * col: 0   1   2   3   4   5
 229:keyboards/ergodox_ez/matrix.c ****  * pin: B5  B4  B3  B2  B1  B0
 230:keyboards/ergodox_ez/matrix.c ****  */
 231:keyboards/ergodox_ez/matrix.c **** static void init_cols(void) {
  15               		.loc 1 231 29 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 232:keyboards/ergodox_ez/matrix.c ****   // init on mcp23018
 233:keyboards/ergodox_ez/matrix.c ****   // not needed, already done as part of init_mcp23018()
 234:keyboards/ergodox_ez/matrix.c **** 
 235:keyboards/ergodox_ez/matrix.c ****   // init on teensy
 236:keyboards/ergodox_ez/matrix.c ****   // Input with pull-up(DDR:0, PORT:1)
 237:keyboards/ergodox_ez/matrix.c ****   DDRF &= ~(1 << 7 | 1 << 6 | 1 << 5 | 1 << 4 | 1 << 1 | 1 << 0);
  21               		.loc 1 237 3 view .LVU1
  22               		.loc 1 237 8 is_stmt 0 view .LVU2
  23 0000 80B3      		in r24,0x10
  24 0002 8C70      		andi r24,lo8(12)
  25 0004 80BB      		out 0x10,r24
 238:keyboards/ergodox_ez/matrix.c ****   PORTF |= (1 << 7 | 1 << 6 | 1 << 5 | 1 << 4 | 1 << 1 | 1 << 0);
  26               		.loc 1 238 3 is_stmt 1 view .LVU3
  27               		.loc 1 238 9 is_stmt 0 view .LVU4
  28 0006 81B3      		in r24,0x11
  29 0008 836F      		ori r24,lo8(-13)
  30 000a 81BB      		out 0x11,r24
  31               	/* epilogue start */
 239:keyboards/ergodox_ez/matrix.c **** }
  32               		.loc 1 239 1 view .LVU5
  33 000c 0895      		ret
  34               		.cfi_endproc
  35               	.LFE143:
  37               		.section	.text.unselect_rows,"ax",@progbits
  39               	unselect_rows:
  40               	.LFB145:
 240:keyboards/ergodox_ez/matrix.c **** 
 241:keyboards/ergodox_ez/matrix.c **** static matrix_row_t read_cols(uint8_t row) {
 242:keyboards/ergodox_ez/matrix.c ****   if (row < 7) {
 243:keyboards/ergodox_ez/matrix.c ****     if (mcp23018_status) {  // if there was an error
 244:keyboards/ergodox_ez/matrix.c ****       return 0;
 245:keyboards/ergodox_ez/matrix.c ****     } else {
 246:keyboards/ergodox_ez/matrix.c ****       uint8_t data    = 0;
 247:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);
 248:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 249:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_write(GPIOB, ERGODOX_EZ_I2C_TIMEOUT);
 250:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 251:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_READ, ERGODOX_EZ_I2C_TIMEOUT);
 252:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 253:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_read_nack(ERGODOX_EZ_I2C_TIMEOUT);
 254:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status < 0) goto out;
 255:keyboards/ergodox_ez/matrix.c ****       data            = ~((uint8_t)mcp23018_status);
 256:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = I2C_STATUS_SUCCESS;
 257:keyboards/ergodox_ez/matrix.c ****     out:
 258:keyboards/ergodox_ez/matrix.c ****       i2c_stop();
 259:keyboards/ergodox_ez/matrix.c ****       return data;
 260:keyboards/ergodox_ez/matrix.c ****     }
 261:keyboards/ergodox_ez/matrix.c ****   } else {
 262:keyboards/ergodox_ez/matrix.c ****     /* read from teensy
 263:keyboards/ergodox_ez/matrix.c ****      * bitmask is 0b11110011, but we want those all
 264:keyboards/ergodox_ez/matrix.c ****      * in the lower six bits.
 265:keyboards/ergodox_ez/matrix.c ****      * we'll return 1s for the top two, but that's harmless.
 266:keyboards/ergodox_ez/matrix.c ****      */
 267:keyboards/ergodox_ez/matrix.c **** 
 268:keyboards/ergodox_ez/matrix.c ****     return ~((PINF & 0x03) | ((PINF & 0xF0) >> 2));
 269:keyboards/ergodox_ez/matrix.c ****   }
 270:keyboards/ergodox_ez/matrix.c **** }
 271:keyboards/ergodox_ez/matrix.c **** 
 272:keyboards/ergodox_ez/matrix.c **** /* Row pin configuration
 273:keyboards/ergodox_ez/matrix.c ****  *
 274:keyboards/ergodox_ez/matrix.c ****  * Teensy
 275:keyboards/ergodox_ez/matrix.c ****  * row: 7   8   9   10  11  12  13
 276:keyboards/ergodox_ez/matrix.c ****  * pin: B0  B1  B2  B3  D2  D3  C6
 277:keyboards/ergodox_ez/matrix.c ****  *
 278:keyboards/ergodox_ez/matrix.c ****  * MCP23018
 279:keyboards/ergodox_ez/matrix.c ****  * row: 0   1   2   3   4   5   6
 280:keyboards/ergodox_ez/matrix.c ****  * pin: A0  A1  A2  A3  A4  A5  A6
 281:keyboards/ergodox_ez/matrix.c ****  */
 282:keyboards/ergodox_ez/matrix.c **** static void unselect_rows(void) {
  41               		.loc 1 282 33 is_stmt 1 view -0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
 283:keyboards/ergodox_ez/matrix.c ****   // no need to unselect on mcp23018, because the select step sets all
 284:keyboards/ergodox_ez/matrix.c ****   // the other row bits high, and it's not changing to a different
 285:keyboards/ergodox_ez/matrix.c ****   // direction
 286:keyboards/ergodox_ez/matrix.c **** 
 287:keyboards/ergodox_ez/matrix.c ****   // unselect on teensy
 288:keyboards/ergodox_ez/matrix.c ****   // Hi-Z(DDR:0, PORT:0) to unselect
 289:keyboards/ergodox_ez/matrix.c ****   DDRB &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
  47               		.loc 1 289 3 view .LVU7
  48               		.loc 1 289 8 is_stmt 0 view .LVU8
  49 0000 84B1      		in r24,0x4
  50 0002 807F      		andi r24,lo8(-16)
  51 0004 84B9      		out 0x4,r24
 290:keyboards/ergodox_ez/matrix.c ****   PORTB &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
  52               		.loc 1 290 3 is_stmt 1 view .LVU9
  53               		.loc 1 290 9 is_stmt 0 view .LVU10
  54 0006 85B1      		in r24,0x5
  55 0008 807F      		andi r24,lo8(-16)
  56 000a 85B9      		out 0x5,r24
 291:keyboards/ergodox_ez/matrix.c ****   DDRD &= ~(1 << 2 | 1 << 3);
  57               		.loc 1 291 3 is_stmt 1 view .LVU11
  58               		.loc 1 291 8 is_stmt 0 view .LVU12
  59 000c 8AB1      		in r24,0xa
  60 000e 837F      		andi r24,lo8(-13)
  61 0010 8AB9      		out 0xa,r24
 292:keyboards/ergodox_ez/matrix.c ****   PORTD &= ~(1 << 2 | 1 << 3);
  62               		.loc 1 292 3 is_stmt 1 view .LVU13
  63               		.loc 1 292 9 is_stmt 0 view .LVU14
  64 0012 8BB1      		in r24,0xb
  65 0014 837F      		andi r24,lo8(-13)
  66 0016 8BB9      		out 0xb,r24
 293:keyboards/ergodox_ez/matrix.c ****   DDRC &= ~(1 << 6);
  67               		.loc 1 293 3 is_stmt 1 view .LVU15
  68               		.loc 1 293 8 is_stmt 0 view .LVU16
  69 0018 3E98      		cbi 0x7,6
 294:keyboards/ergodox_ez/matrix.c ****   PORTC &= ~(1 << 6);
  70               		.loc 1 294 3 is_stmt 1 view .LVU17
  71               		.loc 1 294 9 is_stmt 0 view .LVU18
  72 001a 4698      		cbi 0x8,6
  73               	/* epilogue start */
 295:keyboards/ergodox_ez/matrix.c **** }
  74               		.loc 1 295 1 view .LVU19
  75 001c 0895      		ret
  76               		.cfi_endproc
  77               	.LFE145:
  79               		.section	.text.select_row,"ax",@progbits
  81               	select_row:
  82               	.LVL0:
  83               	.LFB146:
 296:keyboards/ergodox_ez/matrix.c **** 
 297:keyboards/ergodox_ez/matrix.c **** static void select_row(uint8_t row) {
  84               		.loc 1 297 37 is_stmt 1 view -0
  85               		.cfi_startproc
  86               		.loc 1 297 37 is_stmt 0 view .LVU21
  87 0000 CF93      		push r28
  88               	.LCFI0:
  89               		.cfi_def_cfa_offset 3
  90               		.cfi_offset 28, -2
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 1 */
  94               	.L__stack_usage = 1
  95 0002 C82F      		mov r28,r24
 298:keyboards/ergodox_ez/matrix.c ****   if (row < 7) {
  96               		.loc 1 298 3 is_stmt 1 view .LVU22
  97               		.loc 1 298 6 is_stmt 0 view .LVU23
  98 0004 8730      		cpi r24,lo8(7)
  99 0006 00F4      		brsh .L4
 299:keyboards/ergodox_ez/matrix.c ****     // select on mcp23018
 300:keyboards/ergodox_ez/matrix.c ****     if (mcp23018_status) {  // if there was an error
 100               		.loc 1 300 5 is_stmt 1 view .LVU24
 101               		.loc 1 300 8 is_stmt 0 view .LVU25
 102 0008 8091 0000 		lds r24,mcp23018_status
 103 000c 9091 0000 		lds r25,mcp23018_status+1
 104               	.LVL1:
 105               		.loc 1 300 8 view .LVU26
 106 0010 892B      		or r24,r25
 107 0012 01F4      		brne .L3
 301:keyboards/ergodox_ez/matrix.c ****                             // do nothing
 302:keyboards/ergodox_ez/matrix.c ****     } else {
 303:keyboards/ergodox_ez/matrix.c ****       // set active row low  : 0
 304:keyboards/ergodox_ez/matrix.c ****       // set other rows hi-Z : 1
 305:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);
 108               		.loc 1 305 7 is_stmt 1 view .LVU27
 109               		.loc 1 305 25 is_stmt 0 view .LVU28
 110 0014 64E6      		ldi r22,lo8(100)
 111 0016 70E0      		ldi r23,0
 112 0018 80E4      		ldi r24,lo8(64)
 113 001a 0E94 0000 		call i2c_start
 114               	.LVL2:
 115               		.loc 1 305 23 view .LVU29
 116 001e 9093 0000 		sts mcp23018_status+1,r25
 117 0022 8093 0000 		sts mcp23018_status,r24
 306:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 118               		.loc 1 306 7 is_stmt 1 view .LVU30
 119               		.loc 1 306 10 is_stmt 0 view .LVU31
 120 0026 892B      		or r24,r25
 121 0028 01F4      		brne .L7
 307:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_write(GPIOA, ERGODOX_EZ_I2C_TIMEOUT);
 122               		.loc 1 307 7 is_stmt 1 view .LVU32
 123               		.loc 1 307 25 is_stmt 0 view .LVU33
 124 002a 64E6      		ldi r22,lo8(100)
 125 002c 70E0      		ldi r23,0
 126 002e 82E1      		ldi r24,lo8(18)
 127 0030 0E94 0000 		call i2c_write
 128               	.LVL3:
 129               		.loc 1 307 23 view .LVU34
 130 0034 9093 0000 		sts mcp23018_status+1,r25
 131 0038 8093 0000 		sts mcp23018_status,r24
 308:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 132               		.loc 1 308 7 is_stmt 1 view .LVU35
 133               		.loc 1 308 10 is_stmt 0 view .LVU36
 134 003c 892B      		or r24,r25
 135 003e 01F4      		brne .L7
 309:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_write(0xFF & ~(1 << row), ERGODOX_EZ_I2C_TIMEOUT);
 136               		.loc 1 309 7 is_stmt 1 view .LVU37
 137               		.loc 1 309 46 is_stmt 0 view .LVU38
 138 0040 81E0      		ldi r24,lo8(1)
 139 0042 90E0      		ldi r25,0
 140 0044 00C0      		rjmp 2f
 141               		1:
 142 0046 880F      		lsl r24
 143               		2:
 144 0048 CA95      		dec r28
 145 004a 02F4      		brpl 1b
 146               		.loc 1 309 25 view .LVU39
 147 004c 64E6      		ldi r22,lo8(100)
 148 004e 70E0      		ldi r23,0
 149 0050 8095      		com r24
 150 0052 0E94 0000 		call i2c_write
 151               	.LVL4:
 152               		.loc 1 309 23 view .LVU40
 153 0056 9093 0000 		sts mcp23018_status+1,r25
 154 005a 8093 0000 		sts mcp23018_status,r24
 310:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 155               		.loc 1 310 7 is_stmt 1 view .LVU41
 156               	.L7:
 311:keyboards/ergodox_ez/matrix.c ****     out:
 312:keyboards/ergodox_ez/matrix.c ****       i2c_stop();
 157               		.loc 1 312 7 view .LVU42
 158               	/* epilogue start */
 313:keyboards/ergodox_ez/matrix.c ****     }
 314:keyboards/ergodox_ez/matrix.c ****   } else {
 315:keyboards/ergodox_ez/matrix.c ****     // select on teensy
 316:keyboards/ergodox_ez/matrix.c ****     // Output low(DDR:1, PORT:0) to select
 317:keyboards/ergodox_ez/matrix.c ****     switch (row) {
 318:keyboards/ergodox_ez/matrix.c ****       case 7:
 319:keyboards/ergodox_ez/matrix.c ****         DDRB |= (1 << 0);
 320:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 0);
 321:keyboards/ergodox_ez/matrix.c ****         break;
 322:keyboards/ergodox_ez/matrix.c ****       case 8:
 323:keyboards/ergodox_ez/matrix.c ****         DDRB |= (1 << 1);
 324:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 1);
 325:keyboards/ergodox_ez/matrix.c ****         break;
 326:keyboards/ergodox_ez/matrix.c ****       case 9:
 327:keyboards/ergodox_ez/matrix.c ****         DDRB |= (1 << 2);
 328:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 2);
 329:keyboards/ergodox_ez/matrix.c ****         break;
 330:keyboards/ergodox_ez/matrix.c ****       case 10:
 331:keyboards/ergodox_ez/matrix.c ****         DDRB |= (1 << 3);
 332:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 3);
 333:keyboards/ergodox_ez/matrix.c ****         break;
 334:keyboards/ergodox_ez/matrix.c ****       case 11:
 335:keyboards/ergodox_ez/matrix.c ****         DDRD |= (1 << 2);
 336:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 2);
 337:keyboards/ergodox_ez/matrix.c ****         break;
 338:keyboards/ergodox_ez/matrix.c ****       case 12:
 339:keyboards/ergodox_ez/matrix.c ****         DDRD |= (1 << 3);
 340:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 3);
 341:keyboards/ergodox_ez/matrix.c ****         break;
 342:keyboards/ergodox_ez/matrix.c ****       case 13:
 343:keyboards/ergodox_ez/matrix.c ****         DDRC |= (1 << 6);
 344:keyboards/ergodox_ez/matrix.c ****         PORTC &= ~(1 << 6);
 345:keyboards/ergodox_ez/matrix.c ****         break;
 346:keyboards/ergodox_ez/matrix.c ****     }
 347:keyboards/ergodox_ez/matrix.c ****   }
 348:keyboards/ergodox_ez/matrix.c **** }
 159               		.loc 1 348 1 is_stmt 0 view .LVU43
 160 005e CF91      		pop r28
 161               	.LVL5:
 312:keyboards/ergodox_ez/matrix.c ****     }
 162               		.loc 1 312 7 view .LVU44
 163 0060 0C94 0000 		jmp i2c_stop
 164               	.LVL6:
 165               	.L4:
 317:keyboards/ergodox_ez/matrix.c ****       case 7:
 166               		.loc 1 317 5 is_stmt 1 view .LVU45
 167 0064 8A30      		cpi r24,lo8(10)
 168 0066 01F0      		breq .L9
 169 0068 00F4      		brsh .L10
 170 006a 8830      		cpi r24,lo8(8)
 171 006c 01F0      		breq .L11
 172 006e 8930      		cpi r24,lo8(9)
 173 0070 01F0      		breq .L12
 174               	.L13:
 319:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 0);
 175               		.loc 1 319 9 view .LVU46
 319:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 0);
 176               		.loc 1 319 14 is_stmt 0 view .LVU47
 177 0072 209A      		sbi 0x4,0
 320:keyboards/ergodox_ez/matrix.c ****         break;
 178               		.loc 1 320 9 is_stmt 1 view .LVU48
 320:keyboards/ergodox_ez/matrix.c ****         break;
 179               		.loc 1 320 15 is_stmt 0 view .LVU49
 180 0074 2898      		cbi 0x5,0
 321:keyboards/ergodox_ez/matrix.c ****       case 8:
 181               		.loc 1 321 9 is_stmt 1 view .LVU50
 182               	.LVL7:
 183               	.L3:
 184               	/* epilogue start */
 185               		.loc 1 348 1 is_stmt 0 view .LVU51
 186 0076 CF91      		pop r28
 187               	.LVL8:
 188               		.loc 1 348 1 view .LVU52
 189 0078 0895      		ret
 190               	.LVL9:
 191               	.L10:
 192               		.loc 1 348 1 view .LVU53
 193 007a 8C30      		cpi r24,lo8(12)
 194 007c 01F0      		breq .L14
 195 007e 00F0      		brlo .L15
 196 0080 8D30      		cpi r24,lo8(13)
 197 0082 01F4      		brne .L13
 343:keyboards/ergodox_ez/matrix.c ****         PORTC &= ~(1 << 6);
 198               		.loc 1 343 9 is_stmt 1 view .LVU54
 343:keyboards/ergodox_ez/matrix.c ****         PORTC &= ~(1 << 6);
 199               		.loc 1 343 14 is_stmt 0 view .LVU55
 200 0084 3E9A      		sbi 0x7,6
 344:keyboards/ergodox_ez/matrix.c ****         break;
 201               		.loc 1 344 9 is_stmt 1 view .LVU56
 344:keyboards/ergodox_ez/matrix.c ****         break;
 202               		.loc 1 344 15 is_stmt 0 view .LVU57
 203 0086 4698      		cbi 0x8,6
 345:keyboards/ergodox_ez/matrix.c ****     }
 204               		.loc 1 345 9 is_stmt 1 view .LVU58
 205               		.loc 1 348 1 is_stmt 0 view .LVU59
 206 0088 00C0      		rjmp .L3
 207               	.L11:
 323:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 1);
 208               		.loc 1 323 9 is_stmt 1 view .LVU60
 323:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 1);
 209               		.loc 1 323 14 is_stmt 0 view .LVU61
 210 008a 219A      		sbi 0x4,1
 324:keyboards/ergodox_ez/matrix.c ****         break;
 211               		.loc 1 324 9 is_stmt 1 view .LVU62
 324:keyboards/ergodox_ez/matrix.c ****         break;
 212               		.loc 1 324 15 is_stmt 0 view .LVU63
 213 008c 2998      		cbi 0x5,1
 325:keyboards/ergodox_ez/matrix.c ****       case 9:
 214               		.loc 1 325 9 is_stmt 1 view .LVU64
 215 008e 00C0      		rjmp .L3
 216               	.L12:
 327:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 2);
 217               		.loc 1 327 9 view .LVU65
 327:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 2);
 218               		.loc 1 327 14 is_stmt 0 view .LVU66
 219 0090 229A      		sbi 0x4,2
 328:keyboards/ergodox_ez/matrix.c ****         break;
 220               		.loc 1 328 9 is_stmt 1 view .LVU67
 328:keyboards/ergodox_ez/matrix.c ****         break;
 221               		.loc 1 328 15 is_stmt 0 view .LVU68
 222 0092 2A98      		cbi 0x5,2
 329:keyboards/ergodox_ez/matrix.c ****       case 10:
 223               		.loc 1 329 9 is_stmt 1 view .LVU69
 224 0094 00C0      		rjmp .L3
 225               	.L9:
 331:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 3);
 226               		.loc 1 331 9 view .LVU70
 331:keyboards/ergodox_ez/matrix.c ****         PORTB &= ~(1 << 3);
 227               		.loc 1 331 14 is_stmt 0 view .LVU71
 228 0096 239A      		sbi 0x4,3
 332:keyboards/ergodox_ez/matrix.c ****         break;
 229               		.loc 1 332 9 is_stmt 1 view .LVU72
 332:keyboards/ergodox_ez/matrix.c ****         break;
 230               		.loc 1 332 15 is_stmt 0 view .LVU73
 231 0098 2B98      		cbi 0x5,3
 333:keyboards/ergodox_ez/matrix.c ****       case 11:
 232               		.loc 1 333 9 is_stmt 1 view .LVU74
 233 009a 00C0      		rjmp .L3
 234               	.L15:
 335:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 2);
 235               		.loc 1 335 9 view .LVU75
 335:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 2);
 236               		.loc 1 335 14 is_stmt 0 view .LVU76
 237 009c 529A      		sbi 0xa,2
 336:keyboards/ergodox_ez/matrix.c ****         break;
 238               		.loc 1 336 9 is_stmt 1 view .LVU77
 336:keyboards/ergodox_ez/matrix.c ****         break;
 239               		.loc 1 336 15 is_stmt 0 view .LVU78
 240 009e 5A98      		cbi 0xb,2
 337:keyboards/ergodox_ez/matrix.c ****       case 12:
 241               		.loc 1 337 9 is_stmt 1 view .LVU79
 242 00a0 00C0      		rjmp .L3
 243               	.L14:
 339:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 3);
 244               		.loc 1 339 9 view .LVU80
 339:keyboards/ergodox_ez/matrix.c ****         PORTD &= ~(1 << 3);
 245               		.loc 1 339 14 is_stmt 0 view .LVU81
 246 00a2 539A      		sbi 0xa,3
 340:keyboards/ergodox_ez/matrix.c ****         break;
 247               		.loc 1 340 9 is_stmt 1 view .LVU82
 340:keyboards/ergodox_ez/matrix.c ****         break;
 248               		.loc 1 340 15 is_stmt 0 view .LVU83
 249 00a4 5B98      		cbi 0xb,3
 341:keyboards/ergodox_ez/matrix.c ****       case 13:
 250               		.loc 1 341 9 is_stmt 1 view .LVU84
 251 00a6 00C0      		rjmp .L3
 252               		.cfi_endproc
 253               	.LFE146:
 255               		.section	.text.read_cols,"ax",@progbits
 257               	read_cols:
 258               	.LVL10:
 259               	.LFB144:
 241:keyboards/ergodox_ez/matrix.c ****   if (row < 7) {
 260               		.loc 1 241 44 view -0
 261               		.cfi_startproc
 241:keyboards/ergodox_ez/matrix.c ****   if (row < 7) {
 262               		.loc 1 241 44 is_stmt 0 view .LVU86
 263 0000 CF93      		push r28
 264               	.LCFI1:
 265               		.cfi_def_cfa_offset 3
 266               		.cfi_offset 28, -2
 267               	/* prologue: function */
 268               	/* frame size = 0 */
 269               	/* stack size = 1 */
 270               	.L__stack_usage = 1
 242:keyboards/ergodox_ez/matrix.c ****     if (mcp23018_status) {  // if there was an error
 271               		.loc 1 242 3 is_stmt 1 view .LVU87
 242:keyboards/ergodox_ez/matrix.c ****     if (mcp23018_status) {  // if there was an error
 272               		.loc 1 242 6 is_stmt 0 view .LVU88
 273 0002 8730      		cpi r24,lo8(7)
 274 0004 00F0      		brlo .+2
 275 0006 00C0      		rjmp .L18
 243:keyboards/ergodox_ez/matrix.c ****       return 0;
 276               		.loc 1 243 5 is_stmt 1 view .LVU89
 243:keyboards/ergodox_ez/matrix.c ****       return 0;
 277               		.loc 1 243 8 is_stmt 0 view .LVU90
 278 0008 8091 0000 		lds r24,mcp23018_status
 279 000c 9091 0000 		lds r25,mcp23018_status+1
 280               	.LVL11:
 244:keyboards/ergodox_ez/matrix.c ****     } else {
 281               		.loc 1 244 14 view .LVU91
 282 0010 C0E0      		ldi r28,0
 243:keyboards/ergodox_ez/matrix.c ****       return 0;
 283               		.loc 1 243 8 view .LVU92
 284 0012 892B      		or r24,r25
 285 0014 01F4      		brne .L17
 286               	.LBB2:
 246:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);
 287               		.loc 1 246 7 is_stmt 1 view .LVU93
 288               	.LVL12:
 247:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 289               		.loc 1 247 7 view .LVU94
 247:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 290               		.loc 1 247 25 is_stmt 0 view .LVU95
 291 0016 64E6      		ldi r22,lo8(100)
 292 0018 70E0      		ldi r23,0
 293 001a 80E4      		ldi r24,lo8(64)
 294 001c 0E94 0000 		call i2c_start
 295               	.LVL13:
 247:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 296               		.loc 1 247 23 view .LVU96
 297 0020 9093 0000 		sts mcp23018_status+1,r25
 298 0024 8093 0000 		sts mcp23018_status,r24
 248:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_write(GPIOB, ERGODOX_EZ_I2C_TIMEOUT);
 299               		.loc 1 248 7 is_stmt 1 view .LVU97
 248:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_write(GPIOB, ERGODOX_EZ_I2C_TIMEOUT);
 300               		.loc 1 248 10 is_stmt 0 view .LVU98
 301 0028 892B      		or r24,r25
 302 002a 01F0      		breq .L20
 303               	.L22:
 246:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);
 304               		.loc 1 246 15 view .LVU99
 305 002c C0E0      		ldi r28,0
 306               	.LVL14:
 307               	.L21:
 258:keyboards/ergodox_ez/matrix.c ****       return data;
 308               		.loc 1 258 7 is_stmt 1 view .LVU100
 309 002e 0E94 0000 		call i2c_stop
 310               	.LVL15:
 259:keyboards/ergodox_ez/matrix.c ****     }
 311               		.loc 1 259 7 view .LVU101
 312               	.L17:
 259:keyboards/ergodox_ez/matrix.c ****     }
 313               		.loc 1 259 7 is_stmt 0 view .LVU102
 314               	.LBE2:
 270:keyboards/ergodox_ez/matrix.c **** 
 315               		.loc 1 270 1 view .LVU103
 316 0032 8C2F      		mov r24,r28
 317               	/* epilogue start */
 318 0034 CF91      		pop r28
 319 0036 0895      		ret
 320               	.LVL16:
 321               	.L20:
 322               	.LBB3:
 249:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 323               		.loc 1 249 7 is_stmt 1 view .LVU104
 249:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 324               		.loc 1 249 25 is_stmt 0 view .LVU105
 325 0038 64E6      		ldi r22,lo8(100)
 326 003a 70E0      		ldi r23,0
 327 003c 83E1      		ldi r24,lo8(19)
 328 003e 0E94 0000 		call i2c_write
 329               	.LVL17:
 249:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 330               		.loc 1 249 23 view .LVU106
 331 0042 9093 0000 		sts mcp23018_status+1,r25
 332 0046 8093 0000 		sts mcp23018_status,r24
 250:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_READ, ERGODOX_EZ_I2C_TIMEOUT);
 333               		.loc 1 250 7 is_stmt 1 view .LVU107
 250:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_start(I2C_ADDR_READ, ERGODOX_EZ_I2C_TIMEOUT);
 334               		.loc 1 250 10 is_stmt 0 view .LVU108
 335 004a 892B      		or r24,r25
 336 004c 01F4      		brne .L22
 251:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 337               		.loc 1 251 7 is_stmt 1 view .LVU109
 251:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 338               		.loc 1 251 25 is_stmt 0 view .LVU110
 339 004e 64E6      		ldi r22,lo8(100)
 340 0050 70E0      		ldi r23,0
 341 0052 81E4      		ldi r24,lo8(65)
 342 0054 0E94 0000 		call i2c_start
 343               	.LVL18:
 251:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) goto out;
 344               		.loc 1 251 23 view .LVU111
 345 0058 9093 0000 		sts mcp23018_status+1,r25
 346 005c 8093 0000 		sts mcp23018_status,r24
 252:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_read_nack(ERGODOX_EZ_I2C_TIMEOUT);
 347               		.loc 1 252 7 is_stmt 1 view .LVU112
 252:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = i2c_read_nack(ERGODOX_EZ_I2C_TIMEOUT);
 348               		.loc 1 252 10 is_stmt 0 view .LVU113
 349 0060 892B      		or r24,r25
 350 0062 01F4      		brne .L22
 253:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status < 0) goto out;
 351               		.loc 1 253 7 is_stmt 1 view .LVU114
 253:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status < 0) goto out;
 352               		.loc 1 253 25 is_stmt 0 view .LVU115
 353 0064 84E6      		ldi r24,lo8(100)
 354 0066 90E0      		ldi r25,0
 355 0068 0E94 0000 		call i2c_read_nack
 356               	.LVL19:
 254:keyboards/ergodox_ez/matrix.c ****       data            = ~((uint8_t)mcp23018_status);
 357               		.loc 1 254 7 is_stmt 1 view .LVU116
 254:keyboards/ergodox_ez/matrix.c ****       data            = ~((uint8_t)mcp23018_status);
 358               		.loc 1 254 10 is_stmt 0 view .LVU117
 359 006c 97FF      		sbrs r25,7
 360 006e 00C0      		rjmp .L23
 253:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status < 0) goto out;
 361               		.loc 1 253 23 view .LVU118
 362 0070 9093 0000 		sts mcp23018_status+1,r25
 363 0074 8093 0000 		sts mcp23018_status,r24
 364 0078 00C0      		rjmp .L22
 365               	.L23:
 255:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = I2C_STATUS_SUCCESS;
 366               		.loc 1 255 7 is_stmt 1 view .LVU119
 255:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = I2C_STATUS_SUCCESS;
 367               		.loc 1 255 23 is_stmt 0 view .LVU120
 368 007a C82F      		mov r28,r24
 369 007c C095      		com r28
 370               	.LVL20:
 256:keyboards/ergodox_ez/matrix.c ****     out:
 371               		.loc 1 256 7 is_stmt 1 view .LVU121
 256:keyboards/ergodox_ez/matrix.c ****     out:
 372               		.loc 1 256 23 is_stmt 0 view .LVU122
 373 007e 1092 0000 		sts mcp23018_status+1,__zero_reg__
 374 0082 1092 0000 		sts mcp23018_status,__zero_reg__
 375 0086 00C0      		rjmp .L21
 376               	.LVL21:
 377               	.L18:
 256:keyboards/ergodox_ez/matrix.c ****     out:
 378               		.loc 1 256 23 view .LVU123
 379               	.LBE3:
 268:keyboards/ergodox_ez/matrix.c ****   }
 380               		.loc 1 268 5 is_stmt 1 view .LVU124
 268:keyboards/ergodox_ez/matrix.c ****   }
 381               		.loc 1 268 15 is_stmt 0 view .LVU125
 382 0088 CFB1      		in r28,0xf
 268:keyboards/ergodox_ez/matrix.c ****   }
 383               		.loc 1 268 32 view .LVU126
 384 008a 8FB1      		in r24,0xf
 385               	.LVL22:
 268:keyboards/ergodox_ez/matrix.c ****   }
 386               		.loc 1 268 45 view .LVU127
 387 008c 8695      		lsr r24
 388 008e 8695      		lsr r24
 389 0090 8C73      		andi r24,lo8(60)
 268:keyboards/ergodox_ez/matrix.c ****   }
 390               		.loc 1 268 20 view .LVU128
 391 0092 C370      		andi r28,lo8(3)
 268:keyboards/ergodox_ez/matrix.c ****   }
 392               		.loc 1 268 28 view .LVU129
 393 0094 8C2B      		or r24,r28
 268:keyboards/ergodox_ez/matrix.c ****   }
 394               		.loc 1 268 12 view .LVU130
 395 0096 C82F      		mov r28,r24
 396 0098 C095      		com r28
 397 009a 00C0      		rjmp .L17
 398               		.cfi_endproc
 399               	.LFE144:
 401               		.section	.text.matrix_init_user,"ax",@progbits
 402               		.weak	matrix_init_user
 404               	matrix_init_user:
 405               	.LFB128:
  75:keyboards/ergodox_ez/matrix.c **** 
 406               		.loc 1 75 51 is_stmt 1 view -0
 407               		.cfi_startproc
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
  75:keyboards/ergodox_ez/matrix.c **** 
 412               		.loc 1 75 52 view .LVU132
 413               	/* epilogue start */
  75:keyboards/ergodox_ez/matrix.c **** 
 414               		.loc 1 75 1 is_stmt 0 view .LVU133
 415 0000 0895      		ret
 416               		.cfi_endproc
 417               	.LFE128:
 419               		.set	matrix_init_user.localalias.0,matrix_init_user
 420               		.section	.text.matrix_scan_user,"ax",@progbits
 421               		.weak	matrix_scan_user
 423               	matrix_scan_user:
 424               	.LFB148:
 425               		.cfi_startproc
 426               	/* prologue: function */
 427               	/* frame size = 0 */
 428               	/* stack size = 0 */
 429               	.L__stack_usage = 0
 430               	/* epilogue start */
 431 0000 0895      		ret
 432               		.cfi_endproc
 433               	.LFE148:
 435               		.section	.text.matrix_init_kb,"ax",@progbits
 436               		.weak	matrix_init_kb
 438               	matrix_init_kb:
 439               	.LFB130:
  79:keyboards/ergodox_ez/matrix.c **** 
 440               		.loc 1 79 49 is_stmt 1 view -0
 441               		.cfi_startproc
 442               	/* prologue: function */
 443               	/* frame size = 0 */
 444               	/* stack size = 0 */
 445               	.L__stack_usage = 0
  79:keyboards/ergodox_ez/matrix.c **** 
 446               		.loc 1 79 51 view .LVU135
 447 0000 0C94 0000 		jmp matrix_init_user
 448               	.LVL23:
 449               		.cfi_endproc
 450               	.LFE130:
 452               		.section	.text.matrix_scan_kb,"ax",@progbits
 453               		.weak	matrix_scan_kb
 455               	matrix_scan_kb:
 456               	.LFB131:
  81:keyboards/ergodox_ez/matrix.c **** 
 457               		.loc 1 81 49 view -0
 458               		.cfi_startproc
 459               	/* prologue: function */
 460               	/* frame size = 0 */
 461               	/* stack size = 0 */
 462               	.L__stack_usage = 0
  81:keyboards/ergodox_ez/matrix.c **** 
 463               		.loc 1 81 51 view .LVU137
 464 0000 0C94 0000 		jmp matrix_scan_user
 465               	.LVL24:
 466               		.cfi_endproc
 467               	.LFE131:
 469               		.section	.text.matrix_rows,"ax",@progbits
 470               	.global	matrix_rows
 472               	matrix_rows:
 473               	.LFB132:
  83:keyboards/ergodox_ez/matrix.c **** 
 474               		.loc 1 83 34 view -0
 475               		.cfi_startproc
 476               	/* prologue: function */
 477               	/* frame size = 0 */
 478               	/* stack size = 0 */
 479               	.L__stack_usage = 0
  83:keyboards/ergodox_ez/matrix.c **** 
 480               		.loc 1 83 36 view .LVU139
  83:keyboards/ergodox_ez/matrix.c **** 
 481               		.loc 1 83 1 is_stmt 0 view .LVU140
 482 0000 8EE0      		ldi r24,lo8(14)
 483               	/* epilogue start */
 484 0002 0895      		ret
 485               		.cfi_endproc
 486               	.LFE132:
 488               		.section	.text.matrix_cols,"ax",@progbits
 489               	.global	matrix_cols
 491               	matrix_cols:
 492               	.LFB133:
  85:keyboards/ergodox_ez/matrix.c **** 
 493               		.loc 1 85 34 is_stmt 1 view -0
 494               		.cfi_startproc
 495               	/* prologue: function */
 496               	/* frame size = 0 */
 497               	/* stack size = 0 */
 498               	.L__stack_usage = 0
  85:keyboards/ergodox_ez/matrix.c **** 
 499               		.loc 1 85 36 view .LVU142
  85:keyboards/ergodox_ez/matrix.c **** 
 500               		.loc 1 85 1 is_stmt 0 view .LVU143
 501 0000 86E0      		ldi r24,lo8(6)
 502               	/* epilogue start */
 503 0002 0895      		ret
 504               		.cfi_endproc
 505               	.LFE133:
 507               		.section	.text.matrix_init,"ax",@progbits
 508               	.global	matrix_init
 510               	matrix_init:
 511               	.LFB134:
  87:keyboards/ergodox_ez/matrix.c ****   // initialize row and col
 512               		.loc 1 87 24 is_stmt 1 view -0
 513               		.cfi_startproc
 514               	/* prologue: function */
 515               	/* frame size = 0 */
 516               	/* stack size = 0 */
 517               	.L__stack_usage = 0
  90:keyboards/ergodox_ez/matrix.c **** 
 518               		.loc 1 90 3 view .LVU145
  90:keyboards/ergodox_ez/matrix.c **** 
 519               		.loc 1 90 21 is_stmt 0 view .LVU146
 520 0000 0E94 0000 		call init_mcp23018
 521               	.LVL25:
 522 0004 90E0      		ldi r25,0
 523 0006 9093 0000 		sts mcp23018_status+1,r25
 524 000a 8093 0000 		sts mcp23018_status,r24
  92:keyboards/ergodox_ez/matrix.c ****   init_cols();
 525               		.loc 1 92 3 is_stmt 1 view .LVU147
 526 000e 0E94 0000 		call unselect_rows
 527               	.LVL26:
  93:keyboards/ergodox_ez/matrix.c **** 
 528               		.loc 1 93 3 view .LVU148
 529 0012 0E94 0000 		call init_cols
 530               	.LVL27:
  96:keyboards/ergodox_ez/matrix.c ****     matrix[i]     = 0;
 531               		.loc 1 96 3 view .LVU149
 532               	.LBB4:
  96:keyboards/ergodox_ez/matrix.c ****     matrix[i]     = 0;
 533               		.loc 1 96 8 view .LVU150
  96:keyboards/ergodox_ez/matrix.c ****     matrix[i]     = 0;
 534               		.loc 1 96 8 is_stmt 0 view .LVU151
 535 0016 E0E0      		ldi r30,lo8(matrix)
 536 0018 F0E0      		ldi r31,hi8(matrix)
 537 001a A0E0      		ldi r26,lo8(raw_matrix)
 538 001c B0E0      		ldi r27,hi8(raw_matrix)
 539               	.LVL28:
 540               	.L32:
  97:keyboards/ergodox_ez/matrix.c ****     raw_matrix[i] = 0;    
 541               		.loc 1 97 5 is_stmt 1 discriminator 3 view .LVU152
  97:keyboards/ergodox_ez/matrix.c ****     raw_matrix[i] = 0;    
 542               		.loc 1 97 19 is_stmt 0 discriminator 3 view .LVU153
 543 001e 1192      		st Z+,__zero_reg__
 544               	.LVL29:
  98:keyboards/ergodox_ez/matrix.c ****   }
 545               		.loc 1 98 5 is_stmt 1 discriminator 3 view .LVU154
  98:keyboards/ergodox_ez/matrix.c ****   }
 546               		.loc 1 98 19 is_stmt 0 discriminator 3 view .LVU155
 547 0020 1D92      		st X+,__zero_reg__
 548               	.LVL30:
  96:keyboards/ergodox_ez/matrix.c ****     matrix[i]     = 0;
 549               		.loc 1 96 3 discriminator 3 view .LVU156
 550 0022 80E0      		ldi r24,hi8(matrix+14)
 551 0024 E030      		cpi r30,lo8(matrix+14)
 552 0026 F807      		cpc r31,r24
 553 0028 01F4      		brne .L32
 554               	.LBE4:
 105:keyboards/ergodox_ez/matrix.c ****   matrix_init_quantum();
 555               		.loc 1 105 3 is_stmt 1 view .LVU157
 556 002a 8EE0      		ldi r24,lo8(14)
 557 002c 0E94 0000 		call debounce_init
 558               	.LVL31:
 106:keyboards/ergodox_ez/matrix.c **** }
 559               		.loc 1 106 3 view .LVU158
 560 0030 0C94 0000 		jmp matrix_init_quantum
 561               	.LVL32:
 562               		.cfi_endproc
 563               	.LFE134:
 565               		.section	.text.matrix_power_up,"ax",@progbits
 566               	.global	matrix_power_up
 568               	matrix_power_up:
 569               	.LFB135:
 109:keyboards/ergodox_ez/matrix.c ****   mcp23018_status = init_mcp23018();
 570               		.loc 1 109 28 view -0
 571               		.cfi_startproc
 572               	/* prologue: function */
 573               	/* frame size = 0 */
 574               	/* stack size = 0 */
 575               	.L__stack_usage = 0
 110:keyboards/ergodox_ez/matrix.c **** 
 576               		.loc 1 110 3 view .LVU160
 110:keyboards/ergodox_ez/matrix.c **** 
 577               		.loc 1 110 21 is_stmt 0 view .LVU161
 578 0000 0E94 0000 		call init_mcp23018
 579               	.LVL33:
 580 0004 90E0      		ldi r25,0
 581 0006 9093 0000 		sts mcp23018_status+1,r25
 582 000a 8093 0000 		sts mcp23018_status,r24
 112:keyboards/ergodox_ez/matrix.c ****   init_cols();
 583               		.loc 1 112 3 is_stmt 1 view .LVU162
 584 000e 0E94 0000 		call unselect_rows
 585               	.LVL34:
 113:keyboards/ergodox_ez/matrix.c **** 
 586               		.loc 1 113 3 view .LVU163
 587 0012 0E94 0000 		call init_cols
 588               	.LVL35:
 116:keyboards/ergodox_ez/matrix.c ****     matrix[i] = 0;
 589               		.loc 1 116 3 view .LVU164
 590               	.LBB5:
 116:keyboards/ergodox_ez/matrix.c ****     matrix[i] = 0;
 591               		.loc 1 116 8 view .LVU165
 116:keyboards/ergodox_ez/matrix.c ****     matrix[i] = 0;
 592               		.loc 1 116 8 is_stmt 0 view .LVU166
 593 0016 E0E0      		ldi r30,lo8(matrix)
 594 0018 F0E0      		ldi r31,hi8(matrix)
 595               	.LVL36:
 596               	.L35:
 117:keyboards/ergodox_ez/matrix.c ****   }
 597               		.loc 1 117 5 is_stmt 1 discriminator 3 view .LVU167
 117:keyboards/ergodox_ez/matrix.c ****   }
 598               		.loc 1 117 15 is_stmt 0 discriminator 3 view .LVU168
 599 001a 1192      		st Z+,__zero_reg__
 600               	.LVL37:
 116:keyboards/ergodox_ez/matrix.c ****     matrix[i] = 0;
 601               		.loc 1 116 3 discriminator 3 view .LVU169
 602 001c 80E0      		ldi r24,hi8(matrix+14)
 603 001e E030      		cpi r30,lo8(matrix+14)
 604 0020 F807      		cpc r31,r24
 605 0022 01F4      		brne .L35
 606               	/* epilogue start */
 607               	.LBE5:
 124:keyboards/ergodox_ez/matrix.c **** 
 608               		.loc 1 124 1 view .LVU170
 609 0024 0895      		ret
 610               		.cfi_endproc
 611               	.LFE135:
 613               		.section	.text.matrix_scan,"ax",@progbits
 614               	.global	matrix_scan
 616               	matrix_scan:
 617               	.LFB137:
 137:keyboards/ergodox_ez/matrix.c ****   if (mcp23018_status) {  // if there was an error
 618               		.loc 1 137 27 is_stmt 1 view -0
 619               		.cfi_startproc
 620 0000 EF92      		push r14
 621               	.LCFI2:
 622               		.cfi_def_cfa_offset 3
 623               		.cfi_offset 14, -2
 624 0002 FF92      		push r15
 625               	.LCFI3:
 626               		.cfi_def_cfa_offset 4
 627               		.cfi_offset 15, -3
 628 0004 0F93      		push r16
 629               	.LCFI4:
 630               		.cfi_def_cfa_offset 5
 631               		.cfi_offset 16, -4
 632 0006 1F93      		push r17
 633               	.LCFI5:
 634               		.cfi_def_cfa_offset 6
 635               		.cfi_offset 17, -5
 636 0008 CF93      		push r28
 637               	.LCFI6:
 638               		.cfi_def_cfa_offset 7
 639               		.cfi_offset 28, -6
 640 000a DF93      		push r29
 641               	.LCFI7:
 642               		.cfi_def_cfa_offset 8
 643               		.cfi_offset 29, -7
 644               	/* prologue: function */
 645               	/* frame size = 0 */
 646               	/* stack size = 6 */
 647               	.L__stack_usage = 6
 138:keyboards/ergodox_ez/matrix.c ****     if (++mcp23018_reset_loop == 0) {
 648               		.loc 1 138 3 view .LVU172
 138:keyboards/ergodox_ez/matrix.c ****     if (++mcp23018_reset_loop == 0) {
 649               		.loc 1 138 6 is_stmt 0 view .LVU173
 650 000c 8091 0000 		lds r24,mcp23018_status
 651 0010 9091 0000 		lds r25,mcp23018_status+1
 652 0014 892B      		or r24,r25
 653 0016 01F0      		breq .L39
 139:keyboards/ergodox_ez/matrix.c ****       // if (++mcp23018_reset_loop >= 1300) {
 654               		.loc 1 139 5 is_stmt 1 view .LVU174
 139:keyboards/ergodox_ez/matrix.c ****       // if (++mcp23018_reset_loop >= 1300) {
 655               		.loc 1 139 9 is_stmt 0 view .LVU175
 656 0018 8091 0000 		lds r24,mcp23018_reset_loop
 657 001c 8F5F      		subi r24,lo8(-(1))
 139:keyboards/ergodox_ez/matrix.c ****       // if (++mcp23018_reset_loop >= 1300) {
 658               		.loc 1 139 8 view .LVU176
 659 001e 8093 0000 		sts mcp23018_reset_loop,r24
 660 0022 8111      		cpse r24,__zero_reg__
 661 0024 00C0      		rjmp .L39
 143:keyboards/ergodox_ez/matrix.c ****       mcp23018_status = init_mcp23018();
 662               		.loc 1 143 42 is_stmt 1 view .LVU177
 144:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) {
 663               		.loc 1 144 7 view .LVU178
 144:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) {
 664               		.loc 1 144 25 is_stmt 0 view .LVU179
 665 0026 0E94 0000 		call init_mcp23018
 666               	.LVL38:
 667 002a 90E0      		ldi r25,0
 144:keyboards/ergodox_ez/matrix.c ****       if (mcp23018_status) {
 668               		.loc 1 144 23 view .LVU180
 669 002c 9093 0000 		sts mcp23018_status+1,r25
 670 0030 8093 0000 		sts mcp23018_status,r24
 145:keyboards/ergodox_ez/matrix.c ****         print("left side not responding\n");
 671               		.loc 1 145 7 is_stmt 1 view .LVU181
 145:keyboards/ergodox_ez/matrix.c ****         print("left side not responding\n");
 672               		.loc 1 145 10 is_stmt 0 view .LVU182
 673 0034 892B      		or r24,r25
 674 0036 01F4      		brne .L39
 148:keyboards/ergodox_ez/matrix.c ****         ergodox_blink_all_leds();
 675               		.loc 1 148 38 is_stmt 1 view .LVU183
 149:keyboards/ergodox_ez/matrix.c ****       }
 676               		.loc 1 149 9 view .LVU184
 677 0038 0E94 0000 		call ergodox_blink_all_leds
 678               	.LVL39:
 679               	.L39:
 680 003c 00E0      		ldi r16,lo8(raw_matrix)
 681 003e 10E0      		ldi r17,hi8(raw_matrix)
 137:keyboards/ergodox_ez/matrix.c ****   if (mcp23018_status) {  // if there was an error
 682               		.loc 1 137 27 is_stmt 0 discriminator 3 view .LVU185
 683 0040 C0E0      		ldi r28,0
 684 0042 D0E0      		ldi r29,0
 685               	.L43:
 686               	.LVL40:
 687               	.LBB12:
 688               	.LBB13:
 174:keyboards/ergodox_ez/matrix.c ****     uint8_t right_index = i + MATRIX_ROWS_PER_SIDE;
 689               		.loc 1 174 5 is_stmt 1 discriminator 3 view .LVU186
 175:keyboards/ergodox_ez/matrix.c ****     select_row(left_index);
 690               		.loc 1 175 5 discriminator 3 view .LVU187
 175:keyboards/ergodox_ez/matrix.c ****     select_row(left_index);
 691               		.loc 1 175 13 is_stmt 0 discriminator 3 view .LVU188
 692 0044 87E0      		ldi r24,lo8(7)
 693 0046 E82E      		mov r14,r24
 694 0048 EC0E      		add r14,r28
 695               	.LVL41:
 176:keyboards/ergodox_ez/matrix.c ****     select_row(right_index);
 696               		.loc 1 176 5 is_stmt 1 discriminator 3 view .LVU189
 697 004a 8C2F      		mov r24,r28
 698 004c 0E94 0000 		call select_row
 699               	.LVL42:
 177:keyboards/ergodox_ez/matrix.c **** 
 700               		.loc 1 177 5 discriminator 3 view .LVU190
 701 0050 8E2D      		mov r24,r14
 702 0052 0E94 0000 		call select_row
 703               	.LVL43:
 182:keyboards/ergodox_ez/matrix.c ****     changed |= store_raw_matrix_row(right_index);
 704               		.loc 1 182 5 discriminator 3 view .LVU191
 705               	.LBB14:
 706               	.LBI14:
 128:keyboards/ergodox_ez/matrix.c ****   matrix_row_t temp = read_cols(index);
 707               		.loc 1 128 20 discriminator 3 view .LVU192
 708               	.LBB15:
 129:keyboards/ergodox_ez/matrix.c ****   if (raw_matrix[index] != temp) {
 709               		.loc 1 129 3 discriminator 3 view .LVU193
 129:keyboards/ergodox_ez/matrix.c ****   if (raw_matrix[index] != temp) {
 710               		.loc 1 129 23 is_stmt 0 discriminator 3 view .LVU194
 711 0056 8C2F      		mov r24,r28
 712 0058 0E94 0000 		call read_cols
 713               	.LVL44:
 130:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 714               		.loc 1 130 3 is_stmt 1 discriminator 3 view .LVU195
 130:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 715               		.loc 1 130 17 is_stmt 0 discriminator 3 view .LVU196
 716 005c F801      		movw r30,r16
 717 005e 9191      		ld r25,Z+
 718 0060 8F01      		movw r16,r30
 134:keyboards/ergodox_ez/matrix.c **** }
 719               		.loc 1 134 10 discriminator 3 view .LVU197
 720 0062 F12C      		mov r15,__zero_reg__
 130:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 721               		.loc 1 130 6 discriminator 3 view .LVU198
 722 0064 8917      		cp r24,r25
 723 0066 01F0      		breq .L41
 131:keyboards/ergodox_ez/matrix.c ****     return true;
 724               		.loc 1 131 5 is_stmt 1 view .LVU199
 131:keyboards/ergodox_ez/matrix.c ****     return true;
 725               		.loc 1 131 23 is_stmt 0 view .LVU200
 726 0068 3197      		sbiw r30,1
 727 006a 8083      		st Z,r24
 132:keyboards/ergodox_ez/matrix.c ****   }
 728               		.loc 1 132 5 is_stmt 1 view .LVU201
 132:keyboards/ergodox_ez/matrix.c ****   }
 729               		.loc 1 132 12 is_stmt 0 view .LVU202
 730 006c FF24      		clr r15
 731 006e F394      		inc r15
 732               	.L41:
 733               	.LVL45:
 132:keyboards/ergodox_ez/matrix.c ****   }
 734               		.loc 1 132 12 view .LVU203
 735               	.LBE15:
 736               	.LBE14:
 183:keyboards/ergodox_ez/matrix.c **** 
 737               		.loc 1 183 5 is_stmt 1 view .LVU204
 738               	.LBB16:
 739               	.LBI16:
 128:keyboards/ergodox_ez/matrix.c ****   matrix_row_t temp = read_cols(index);
 740               		.loc 1 128 20 view .LVU205
 741               	.LBB17:
 129:keyboards/ergodox_ez/matrix.c ****   if (raw_matrix[index] != temp) {
 742               		.loc 1 129 3 view .LVU206
 129:keyboards/ergodox_ez/matrix.c ****   if (raw_matrix[index] != temp) {
 743               		.loc 1 129 23 is_stmt 0 view .LVU207
 744 0070 8E2D      		mov r24,r14
 745 0072 0E94 0000 		call read_cols
 746               	.LVL46:
 130:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 747               		.loc 1 130 3 is_stmt 1 view .LVU208
 130:keyboards/ergodox_ez/matrix.c ****     raw_matrix[index] = temp;
 748               		.loc 1 130 6 is_stmt 0 view .LVU209
 749 0076 F801      		movw r30,r16
 750 0078 9681      		ldd r25,Z+6
 751 007a 8917      		cp r24,r25
 752 007c 01F0      		breq .L45
 131:keyboards/ergodox_ez/matrix.c ****     return true;
 753               		.loc 1 131 5 is_stmt 1 view .LVU210
 131:keyboards/ergodox_ez/matrix.c ****     return true;
 754               		.loc 1 131 23 is_stmt 0 view .LVU211
 755 007e 8683      		std Z+6,r24
 132:keyboards/ergodox_ez/matrix.c ****   }
 756               		.loc 1 132 5 is_stmt 1 view .LVU212
 132:keyboards/ergodox_ez/matrix.c ****   }
 757               		.loc 1 132 12 is_stmt 0 view .LVU213
 758 0080 81E0      		ldi r24,lo8(1)
 759               	.LVL47:
 760               	.L42:
 132:keyboards/ergodox_ez/matrix.c ****   }
 761               		.loc 1 132 12 view .LVU214
 762               	.LBE17:
 763               	.LBE16:
 183:keyboards/ergodox_ez/matrix.c **** 
 764               		.loc 1 183 13 view .LVU215
 765 0082 8F29      		or r24,r15
 766 0084 D82B      		or r29,r24
 767               	.LVL48:
 185:keyboards/ergodox_ez/matrix.c ****   }
 768               		.loc 1 185 5 is_stmt 1 view .LVU216
 769 0086 0E94 0000 		call unselect_rows
 770               	.LVL49:
 771               	.LBE13:
 172:keyboards/ergodox_ez/matrix.c ****     // select rows from left and right hands
 772               		.loc 1 172 50 is_stmt 0 view .LVU217
 773 008a CF5F      		subi r28,lo8(-(1))
 774               	.LVL50:
 172:keyboards/ergodox_ez/matrix.c ****     // select rows from left and right hands
 775               		.loc 1 172 3 view .LVU218
 776 008c C730      		cpi r28,lo8(7)
 777 008e 01F4      		brne .L43
 778               	.LBE12:
 188:keyboards/ergodox_ez/matrix.c ****   matrix_scan_quantum();
 779               		.loc 1 188 3 is_stmt 1 view .LVU219
 780 0090 2D2F      		mov r18,r29
 781 0092 4EE0      		ldi r20,lo8(14)
 782 0094 60E0      		ldi r22,lo8(matrix)
 783 0096 70E0      		ldi r23,hi8(matrix)
 784 0098 80E0      		ldi r24,lo8(raw_matrix)
 785 009a 90E0      		ldi r25,hi8(raw_matrix)
 786 009c 0E94 0000 		call debounce
 787               	.LVL51:
 189:keyboards/ergodox_ez/matrix.c **** 
 788               		.loc 1 189 3 view .LVU220
 789 00a0 0E94 0000 		call matrix_scan_quantum
 790               	.LVL52:
 191:keyboards/ergodox_ez/matrix.c **** }
 791               		.loc 1 191 3 view .LVU221
 192:keyboards/ergodox_ez/matrix.c **** 
 792               		.loc 1 192 1 is_stmt 0 view .LVU222
 793 00a4 81E0      		ldi r24,lo8(1)
 794               	/* epilogue start */
 795 00a6 DF91      		pop r29
 796               	.LVL53:
 192:keyboards/ergodox_ez/matrix.c **** 
 797               		.loc 1 192 1 view .LVU223
 798 00a8 CF91      		pop r28
 799               	.LVL54:
 192:keyboards/ergodox_ez/matrix.c **** 
 800               		.loc 1 192 1 view .LVU224
 801 00aa 1F91      		pop r17
 802 00ac 0F91      		pop r16
 803 00ae FF90      		pop r15
 804 00b0 EF90      		pop r14
 805               	.LVL55:
 192:keyboards/ergodox_ez/matrix.c **** 
 806               		.loc 1 192 1 view .LVU225
 807 00b2 0895      		ret
 808               	.LVL56:
 809               	.L45:
 810               	.LBB21:
 811               	.LBB20:
 812               	.LBB19:
 813               	.LBB18:
 134:keyboards/ergodox_ez/matrix.c **** }
 814               		.loc 1 134 10 view .LVU226
 815 00b4 80E0      		ldi r24,0
 816               	.LVL57:
 134:keyboards/ergodox_ez/matrix.c **** }
 817               		.loc 1 134 10 view .LVU227
 818 00b6 00C0      		rjmp .L42
 819               	.LBE18:
 820               	.LBE19:
 821               	.LBE20:
 822               	.LBE21:
 823               		.cfi_endproc
 824               	.LFE137:
 826               		.section	.text.matrix_is_modified,"ax",@progbits
 827               	.global	matrix_is_modified
 829               	matrix_is_modified:
 830               	.LFB138:
 195:keyboards/ergodox_ez/matrix.c ****   return true;
 831               		.loc 1 195 1 is_stmt 1 view -0
 832               		.cfi_startproc
 833               	/* prologue: function */
 834               	/* frame size = 0 */
 835               	/* stack size = 0 */
 836               	.L__stack_usage = 0
 196:keyboards/ergodox_ez/matrix.c **** }
 837               		.loc 1 196 3 view .LVU229
 197:keyboards/ergodox_ez/matrix.c **** 
 838               		.loc 1 197 1 is_stmt 0 view .LVU230
 839 0000 81E0      		ldi r24,lo8(1)
 840               	/* epilogue start */
 841 0002 0895      		ret
 842               		.cfi_endproc
 843               	.LFE138:
 845               		.section	.text.matrix_is_on,"ax",@progbits
 846               	.global	matrix_is_on
 848               	matrix_is_on:
 849               	.LVL58:
 850               	.LFB139:
 199:keyboards/ergodox_ez/matrix.c **** 
 851               		.loc 1 199 52 is_stmt 1 view -0
 852               		.cfi_startproc
 853               	/* prologue: function */
 854               	/* frame size = 0 */
 855               	/* stack size = 0 */
 856               	.L__stack_usage = 0
 199:keyboards/ergodox_ez/matrix.c **** 
 857               		.loc 1 199 54 view .LVU232
 199:keyboards/ergodox_ez/matrix.c **** 
 858               		.loc 1 199 68 is_stmt 0 view .LVU233
 859 0000 E82F      		mov r30,r24
 860 0002 F0E0      		ldi r31,0
 861 0004 E050      		subi r30,lo8(-(matrix))
 862 0006 F040      		sbci r31,hi8(-(matrix))
 863 0008 2081      		ld r18,Z
 864 000a 30E0      		ldi r19,0
 199:keyboards/ergodox_ez/matrix.c **** 
 865               		.loc 1 199 93 view .LVU234
 866 000c 81E0      		ldi r24,lo8(1)
 867 000e 90E0      		ldi r25,0
 868               	.LVL59:
 199:keyboards/ergodox_ez/matrix.c **** 
 869               		.loc 1 199 93 view .LVU235
 870 0010 00C0      		rjmp 2f
 871               		1:
 872 0012 880F      		lsl r24
 873 0014 991F      		rol r25
 874               		2:
 875 0016 6A95      		dec r22
 876 0018 02F4      		brpl 1b
 199:keyboards/ergodox_ez/matrix.c **** 
 877               		.loc 1 199 74 view .LVU236
 878 001a 2823      		and r18,r24
 879 001c 3923      		and r19,r25
 880 001e 81E0      		ldi r24,lo8(1)
 881 0020 232B      		or r18,r19
 882 0022 01F4      		brne .L49
 883 0024 80E0      		ldi r24,0
 884               	.L49:
 885               	/* epilogue start */
 199:keyboards/ergodox_ez/matrix.c **** 
 886               		.loc 1 199 1 view .LVU237
 887 0026 0895      		ret
 888               		.cfi_endproc
 889               	.LFE139:
 891               		.section	.text.matrix_get_row,"ax",@progbits
 892               	.global	matrix_get_row
 894               	matrix_get_row:
 895               	.LVL60:
 896               	.LFB140:
 201:keyboards/ergodox_ez/matrix.c **** 
 897               		.loc 1 201 49 is_stmt 1 view -0
 898               		.cfi_startproc
 899               	/* prologue: function */
 900               	/* frame size = 0 */
 901               	/* stack size = 0 */
 902               	.L__stack_usage = 0
 201:keyboards/ergodox_ez/matrix.c **** 
 903               		.loc 1 201 51 view .LVU239
 201:keyboards/ergodox_ez/matrix.c **** 
 904               		.loc 1 201 64 is_stmt 0 view .LVU240
 905 0000 E82F      		mov r30,r24
 906 0002 F0E0      		ldi r31,0
 907 0004 E050      		subi r30,lo8(-(matrix))
 908 0006 F040      		sbci r31,hi8(-(matrix))
 201:keyboards/ergodox_ez/matrix.c **** 
 909               		.loc 1 201 1 view .LVU241
 910 0008 8081      		ld r24,Z
 911               	.LVL61:
 912               	/* epilogue start */
 201:keyboards/ergodox_ez/matrix.c **** 
 913               		.loc 1 201 1 view .LVU242
 914 000a 0895      		ret
 915               		.cfi_endproc
 916               	.LFE140:
 918               		.section	.text.matrix_print,"ax",@progbits
 919               	.global	matrix_print
 921               	matrix_print:
 922               	.LFB141:
 203:keyboards/ergodox_ez/matrix.c ****   print("\nr/c 0123456789ABCDEF\n");
 923               		.loc 1 203 25 is_stmt 1 view -0
 924               		.cfi_startproc
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 204:keyboards/ergodox_ez/matrix.c ****   for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
 929               		.loc 1 204 36 view .LVU244
 205:keyboards/ergodox_ez/matrix.c ****     phex(row);
 930               		.loc 1 205 3 view .LVU245
 205:keyboards/ergodox_ez/matrix.c ****     phex(row);
 931               		.loc 1 205 8 view .LVU246
 932               	.LVL62:
 933               	/* epilogue start */
 211:keyboards/ergodox_ez/matrix.c **** 
 934               		.loc 1 211 1 is_stmt 0 view .LVU247
 935 0000 0895      		ret
 936               		.cfi_endproc
 937               	.LFE141:
 939               		.section	.text.matrix_key_count,"ax",@progbits
 940               	.global	matrix_key_count
 942               	matrix_key_count:
 943               	.LFB142:
 213:keyboards/ergodox_ez/matrix.c ****   uint8_t count = 0;
 944               		.loc 1 213 32 is_stmt 1 view -0
 945               		.cfi_startproc
 946 0000 0F93      		push r16
 947               	.LCFI8:
 948               		.cfi_def_cfa_offset 3
 949               		.cfi_offset 16, -2
 950 0002 1F93      		push r17
 951               	.LCFI9:
 952               		.cfi_def_cfa_offset 4
 953               		.cfi_offset 17, -3
 954 0004 CF93      		push r28
 955               	.LCFI10:
 956               		.cfi_def_cfa_offset 5
 957               		.cfi_offset 28, -4
 958               	/* prologue: function */
 959               	/* frame size = 0 */
 960               	/* stack size = 3 */
 961               	.L__stack_usage = 3
 214:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 962               		.loc 1 214 3 view .LVU249
 963               	.LVL63:
 215:keyboards/ergodox_ez/matrix.c ****     count += bitpop16(matrix[i]);
 964               		.loc 1 215 3 view .LVU250
 965               	.LBB22:
 215:keyboards/ergodox_ez/matrix.c ****     count += bitpop16(matrix[i]);
 966               		.loc 1 215 8 view .LVU251
 215:keyboards/ergodox_ez/matrix.c ****     count += bitpop16(matrix[i]);
 967               		.loc 1 215 8 is_stmt 0 view .LVU252
 968 0006 00E0      		ldi r16,lo8(matrix)
 969 0008 10E0      		ldi r17,hi8(matrix)
 970               	.LBE22:
 214:keyboards/ergodox_ez/matrix.c ****   for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 971               		.loc 1 214 11 view .LVU253
 972 000a C0E0      		ldi r28,0
 973               	.LVL64:
 974               	.L53:
 975               	.LBB23:
 216:keyboards/ergodox_ez/matrix.c ****   }
 976               		.loc 1 216 5 is_stmt 1 discriminator 3 view .LVU254
 216:keyboards/ergodox_ez/matrix.c ****   }
 977               		.loc 1 216 29 is_stmt 0 discriminator 3 view .LVU255
 978 000c F801      		movw r30,r16
 979 000e 8191      		ld r24,Z+
 980 0010 8F01      		movw r16,r30
 981               	.LVL65:
 216:keyboards/ergodox_ez/matrix.c ****   }
 982               		.loc 1 216 14 discriminator 3 view .LVU256
 983 0012 90E0      		ldi r25,0
 984 0014 0E94 0000 		call bitpop16
 985               	.LVL66:
 216:keyboards/ergodox_ez/matrix.c ****   }
 986               		.loc 1 216 11 discriminator 3 view .LVU257
 987 0018 C80F      		add r28,r24
 988               	.LVL67:
 215:keyboards/ergodox_ez/matrix.c ****     count += bitpop16(matrix[i]);
 989               		.loc 1 215 3 discriminator 3 view .LVU258
 990 001a F0E0      		ldi r31,hi8(matrix+14)
 991 001c 0030      		cpi r16,lo8(matrix+14)
 992 001e 1F07      		cpc r17,r31
 993 0020 01F4      		brne .L53
 994               	.LBE23:
 218:keyboards/ergodox_ez/matrix.c **** }
 995               		.loc 1 218 3 is_stmt 1 view .LVU259
 219:keyboards/ergodox_ez/matrix.c **** 
 996               		.loc 1 219 1 is_stmt 0 view .LVU260
 997 0022 8C2F      		mov r24,r28
 998               	/* epilogue start */
 999 0024 CF91      		pop r28
 1000               	.LVL68:
 219:keyboards/ergodox_ez/matrix.c **** 
 1001               		.loc 1 219 1 view .LVU261
 1002 0026 1F91      		pop r17
 1003 0028 0F91      		pop r16
 1004               	.LVL69:
 219:keyboards/ergodox_ez/matrix.c **** 
 1005               		.loc 1 219 1 view .LVU262
 1006 002a 0895      		ret
 1007               		.cfi_endproc
 1008               	.LFE142:
 1010               		.section	.bss.mcp23018_reset_loop,"aw",@nobits
 1013               	mcp23018_reset_loop:
 1014 0000 00        		.zero	1
 1015               		.section	.bss.matrix,"aw",@nobits
 1018               	matrix:
 1019 0000 0000 0000 		.zero	14
 1019      0000 0000 
 1019      0000 0000 
 1019      0000 
 1020               		.section	.bss.raw_matrix,"aw",@nobits
 1023               	raw_matrix:
 1024 0000 0000 0000 		.zero	14
 1024      0000 0000 
 1024      0000 0000 
 1024      0000 
 1025               		.text
 1026               	.Letext0:
 1027               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1028               		.file 3 "tmk_core/common/keyboard.h"
 1029               		.file 4 "/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/include/stddef.h"
 1030               		.file 5 "tmk_core/common/action.h"
 1031               		.file 6 "tmk_core/common/action_layer.h"
 1032               		.file 7 "tmk_core/common/debug.h"
 1033               		.file 8 "tmk_core/common/matrix.h"
 1034               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1035               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1036               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 1037               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1038               		.file 13 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 1039               		.file 14 "tmk_core/common/report.h"
 1040               		.file 15 "tmk_core/common/host.h"
 1041               		.file 16 "quantum/keycode_config.h"
 1042               		.file 17 "quantum/keymap.h"
 1043               		.file 18 "quantum/rgblight_types.h"
 1044               		.file 19 "quantum/rgblight.h"
 1045               		.file 20 "tmk_core/common/timer.h"
 1046               		.file 21 "tmk_core/common/action_util.h"
 1047               		.file 22 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdlib.h"
 1048               		.file 23 "quantum/process_keycode/process_unicode_common.h"
 1049               		.file 24 "quantum/quantum.h"
 1050               		.file 25 "drivers/avr/i2c_master.h"
 1051               		.file 26 "keyboards/ergodox_ez/ergodox_ez.h"
 1052               		.file 27 "tmk_core/common/util.h"
 1053               		.file 28 "quantum/debounce.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 matrix.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:12     .text.init_cols:0000000000000000 init_cols
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:39     .text.unselect_rows:0000000000000000 unselect_rows
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:81     .text.select_row:0000000000000000 select_row
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:257    .text.read_cols:0000000000000000 read_cols
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:404    .text.matrix_init_user:0000000000000000 matrix_init_user
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:404    .text.matrix_init_user:0000000000000000 matrix_init_user.localalias.0
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:423    .text.matrix_scan_user:0000000000000000 matrix_scan_user
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:438    .text.matrix_init_kb:0000000000000000 matrix_init_kb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:455    .text.matrix_scan_kb:0000000000000000 matrix_scan_kb
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:472    .text.matrix_rows:0000000000000000 matrix_rows
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:491    .text.matrix_cols:0000000000000000 matrix_cols
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:510    .text.matrix_init:0000000000000000 matrix_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:1018   .bss.matrix:0000000000000000 matrix
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:1023   .bss.raw_matrix:0000000000000000 raw_matrix
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:568    .text.matrix_power_up:0000000000000000 matrix_power_up
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:616    .text.matrix_scan:0000000000000000 matrix_scan
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:1013   .bss.mcp23018_reset_loop:0000000000000000 mcp23018_reset_loop
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:829    .text.matrix_is_modified:0000000000000000 matrix_is_modified
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:848    .text.matrix_is_on:0000000000000000 matrix_is_on
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:894    .text.matrix_get_row:0000000000000000 matrix_get_row
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:921    .text.matrix_print:0000000000000000 matrix_print
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccmPp0Hw.s:942    .text.matrix_key_count:0000000000000000 matrix_key_count

UNDEFINED SYMBOLS
mcp23018_status
i2c_start
i2c_write
i2c_stop
i2c_read_nack
init_mcp23018
debounce_init
matrix_init_quantum
ergodox_blink_all_leds
debounce
matrix_scan_quantum
bitpop16
__do_clear_bss
