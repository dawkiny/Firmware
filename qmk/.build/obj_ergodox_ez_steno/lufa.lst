   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_leds,"ax",@progbits
  12               	keyboard_leds:
  13               	.LFB115:
  14               		.file 1 "./tmk_core/protocol/lufa/lufa.c"
   1:./tmk_core/protocol/lufa/lufa.c **** /*
   2:./tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/lufa.c ****  */
   7:./tmk_core/protocol/lufa/lufa.c **** 
   8:./tmk_core/protocol/lufa/lufa.c **** /*
   9:./tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/lufa.c **** 
  12:./tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/lufa.c **** */
  15:./tmk_core/protocol/lufa/lufa.c **** 
  16:./tmk_core/protocol/lufa/lufa.c **** /*
  17:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/lufa.c **** 
  20:./tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/lufa.c **** 
  29:./tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/lufa.c ****   this software.
  37:./tmk_core/protocol/lufa/lufa.c **** */
  38:./tmk_core/protocol/lufa/lufa.c **** 
  39:./tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:./tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:./tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:./tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:./tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:./tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:./tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:./tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:./tmk_core/protocol/lufa/lufa.c **** #include "sleep_led.h"
  49:./tmk_core/protocol/lufa/lufa.c **** #endif
  50:./tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:./tmk_core/protocol/lufa/lufa.c **** 
  52:./tmk_core/protocol/lufa/lufa.c **** #include "descriptor.h"
  53:./tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  54:./tmk_core/protocol/lufa/lufa.c **** 
  55:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
  56:./tmk_core/protocol/lufa/lufa.c ****   #include "keycode_config.h"
  57:./tmk_core/protocol/lufa/lufa.c **** 
  58:./tmk_core/protocol/lufa/lufa.c ****   extern keymap_config_t keymap_config;
  59:./tmk_core/protocol/lufa/lufa.c **** #endif
  60:./tmk_core/protocol/lufa/lufa.c **** 
  61:./tmk_core/protocol/lufa/lufa.c **** 
  62:./tmk_core/protocol/lufa/lufa.c **** #ifdef AUDIO_ENABLE
  63:./tmk_core/protocol/lufa/lufa.c ****     #include <audio.h>
  64:./tmk_core/protocol/lufa/lufa.c **** #endif
  65:./tmk_core/protocol/lufa/lufa.c **** 
  66:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  67:./tmk_core/protocol/lufa/lufa.c ****     #include "bluetooth.h"
  68:./tmk_core/protocol/lufa/lufa.c **** #endif
  69:./tmk_core/protocol/lufa/lufa.c **** 
  70:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
  71:./tmk_core/protocol/lufa/lufa.c ****     #include "virtser.h"
  72:./tmk_core/protocol/lufa/lufa.c **** #endif
  73:./tmk_core/protocol/lufa/lufa.c **** 
  74:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  75:./tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  76:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_protocol = 1;
  77:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  78:./tmk_core/protocol/lufa/lufa.c **** 
  79:./tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
  80:./tmk_core/protocol/lufa/lufa.c **** 
  81:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  82:./tmk_core/protocol/lufa/lufa.c **** void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t byte2);
  83:./tmk_core/protocol/lufa/lufa.c **** void usb_get_midi(MidiDevice * device);
  84:./tmk_core/protocol/lufa/lufa.c **** void midi_usb_init(MidiDevice * device);
  85:./tmk_core/protocol/lufa/lufa.c **** #endif
  86:./tmk_core/protocol/lufa/lufa.c **** 
  87:./tmk_core/protocol/lufa/lufa.c **** /* Host driver */
  88:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
  89:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report);
  90:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report);
  91:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data);
  92:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data);
  93:./tmk_core/protocol/lufa/lufa.c **** host_driver_t lufa_driver = {
  94:./tmk_core/protocol/lufa/lufa.c ****     keyboard_leds,
  95:./tmk_core/protocol/lufa/lufa.c ****     send_keyboard,
  96:./tmk_core/protocol/lufa/lufa.c ****     send_mouse,
  97:./tmk_core/protocol/lufa/lufa.c ****     send_system,
  98:./tmk_core/protocol/lufa/lufa.c ****     send_consumer,
  99:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 100:./tmk_core/protocol/lufa/lufa.c ****     usb_send_func,
 101:./tmk_core/protocol/lufa/lufa.c ****     usb_get_midi,
 102:./tmk_core/protocol/lufa/lufa.c ****     midi_usb_init
 103:./tmk_core/protocol/lufa/lufa.c **** #endif
 104:./tmk_core/protocol/lufa/lufa.c **** };
 105:./tmk_core/protocol/lufa/lufa.c **** 
 106:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 107:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 108:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 109:./tmk_core/protocol/lufa/lufa.c **** 
 110:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 111:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_MIDI_Device_t USB_MIDI_Interface =
 112:./tmk_core/protocol/lufa/lufa.c **** {
 113:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 114:./tmk_core/protocol/lufa/lufa.c ****   {
 115:./tmk_core/protocol/lufa/lufa.c ****     .StreamingInterfaceNumber = AS_INTERFACE,
 116:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint           =
 117:./tmk_core/protocol/lufa/lufa.c ****     {
 118:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_IN_EPADDR,
 119:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 120:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 121:./tmk_core/protocol/lufa/lufa.c ****     },
 122:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint          =
 123:./tmk_core/protocol/lufa/lufa.c ****     {
 124:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_OUT_EPADDR,
 125:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 126:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 127:./tmk_core/protocol/lufa/lufa.c ****     },
 128:./tmk_core/protocol/lufa/lufa.c ****   },
 129:./tmk_core/protocol/lufa/lufa.c **** };
 130:./tmk_core/protocol/lufa/lufa.c **** 
 131:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_START_OR_CONT 0x40
 132:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_1 0x50
 133:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_2 0x60
 134:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_3 0x70
 135:./tmk_core/protocol/lufa/lufa.c **** 
 136:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_1 0x50
 137:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_2 0x20
 138:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_3 0x30
 139:./tmk_core/protocol/lufa/lufa.c **** #endif
 140:./tmk_core/protocol/lufa/lufa.c **** 
 141:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 142:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_CDC_Device_t cdc_device =
 143:./tmk_core/protocol/lufa/lufa.c **** {
 144:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 145:./tmk_core/protocol/lufa/lufa.c ****   {
 146:./tmk_core/protocol/lufa/lufa.c ****     .ControlInterfaceNumber = CCI_INTERFACE,
 147:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint         =
 148:./tmk_core/protocol/lufa/lufa.c ****     {
 149:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_IN_EPADDR,
 150:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 151:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 152:./tmk_core/protocol/lufa/lufa.c ****     },
 153:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint	    =
 154:./tmk_core/protocol/lufa/lufa.c ****     {
 155:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_OUT_EPADDR,
 156:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 157:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 158:./tmk_core/protocol/lufa/lufa.c ****     },
 159:./tmk_core/protocol/lufa/lufa.c ****     .NotificationEndpoint   =
 160:./tmk_core/protocol/lufa/lufa.c ****     {
 161:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_NOTIFICATION_EPADDR,
 162:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_NOTIFICATION_EPSIZE,
 163:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 164:./tmk_core/protocol/lufa/lufa.c ****     },
 165:./tmk_core/protocol/lufa/lufa.c ****   },
 166:./tmk_core/protocol/lufa/lufa.c **** };
 167:./tmk_core/protocol/lufa/lufa.c **** #endif
 168:./tmk_core/protocol/lufa/lufa.c **** 
 169:./tmk_core/protocol/lufa/lufa.c **** 
 170:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 171:./tmk_core/protocol/lufa/lufa.c ****  * Console
 172:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 173:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 174:./tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
 175:./tmk_core/protocol/lufa/lufa.c **** {
 176:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 177:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 178:./tmk_core/protocol/lufa/lufa.c ****         return;
 179:./tmk_core/protocol/lufa/lufa.c **** 
 180:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 181:./tmk_core/protocol/lufa/lufa.c **** 
 182:./tmk_core/protocol/lufa/lufa.c **** #if 0
 183:./tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
 184:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
 185:./tmk_core/protocol/lufa/lufa.c **** 
 186:./tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
 187:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 188:./tmk_core/protocol/lufa/lufa.c ****     {
 189:./tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
 190:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 191:./tmk_core/protocol/lufa/lufa.c ****         {
 192:./tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 193:./tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 194:./tmk_core/protocol/lufa/lufa.c **** 
 195:./tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 196:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 197:./tmk_core/protocol/lufa/lufa.c **** 
 198:./tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 199:./tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 200:./tmk_core/protocol/lufa/lufa.c ****         }
 201:./tmk_core/protocol/lufa/lufa.c **** 
 202:./tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 203:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 204:./tmk_core/protocol/lufa/lufa.c ****     }
 205:./tmk_core/protocol/lufa/lufa.c **** #endif
 206:./tmk_core/protocol/lufa/lufa.c **** 
 207:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 208:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 209:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 210:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 211:./tmk_core/protocol/lufa/lufa.c ****         return;
 212:./tmk_core/protocol/lufa/lufa.c ****     }
 213:./tmk_core/protocol/lufa/lufa.c **** 
 214:./tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 215:./tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 216:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 217:./tmk_core/protocol/lufa/lufa.c **** 
 218:./tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 219:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 220:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 221:./tmk_core/protocol/lufa/lufa.c ****     }
 222:./tmk_core/protocol/lufa/lufa.c **** 
 223:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 224:./tmk_core/protocol/lufa/lufa.c **** }
 225:./tmk_core/protocol/lufa/lufa.c **** #endif
 226:./tmk_core/protocol/lufa/lufa.c **** 
 227:./tmk_core/protocol/lufa/lufa.c **** 
 228:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 229:./tmk_core/protocol/lufa/lufa.c ****  * USB Events
 230:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 231:./tmk_core/protocol/lufa/lufa.c **** /*
 232:./tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 233:./tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 234:./tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 235:./tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 236:./tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 237:./tmk_core/protocol/lufa/lufa.c **** */
 238:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void)
 239:./tmk_core/protocol/lufa/lufa.c **** {
 240:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 241:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 242:./tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 243:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 244:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 245:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 246:./tmk_core/protocol/lufa/lufa.c ****     }
 247:./tmk_core/protocol/lufa/lufa.c **** }
 248:./tmk_core/protocol/lufa/lufa.c **** 
 249:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void)
 250:./tmk_core/protocol/lufa/lufa.c **** {
 251:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 252:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 253:./tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 254:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 255:./tmk_core/protocol/lufa/lufa.c ****     if (USB_IsInitialized) {
 256:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();  // Disable all interrupts
 257:./tmk_core/protocol/lufa/lufa.c **** 	USB_Controller_Enable();
 258:./tmk_core/protocol/lufa/lufa.c ****         USB_INT_Enable(USB_INT_VBUSTI);
 259:./tmk_core/protocol/lufa/lufa.c ****     }
 260:./tmk_core/protocol/lufa/lufa.c **** */
 261:./tmk_core/protocol/lufa/lufa.c **** }
 262:./tmk_core/protocol/lufa/lufa.c **** 
 263:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void)
 264:./tmk_core/protocol/lufa/lufa.c **** {
 265:./tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 266:./tmk_core/protocol/lufa/lufa.c **** }
 267:./tmk_core/protocol/lufa/lufa.c **** 
 268:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend()
 269:./tmk_core/protocol/lufa/lufa.c **** {
 270:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 271:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 272:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 273:./tmk_core/protocol/lufa/lufa.c **** #endif
 274:./tmk_core/protocol/lufa/lufa.c **** }
 275:./tmk_core/protocol/lufa/lufa.c **** 
 276:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp()
 277:./tmk_core/protocol/lufa/lufa.c **** {
 278:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 279:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 280:./tmk_core/protocol/lufa/lufa.c **** 
 281:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 282:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_disable();
 283:./tmk_core/protocol/lufa/lufa.c ****     // NOTE: converters may not accept this
 284:./tmk_core/protocol/lufa/lufa.c ****     led_set(host_keyboard_leds());
 285:./tmk_core/protocol/lufa/lufa.c **** #endif
 286:./tmk_core/protocol/lufa/lufa.c **** }
 287:./tmk_core/protocol/lufa/lufa.c **** 
 288:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 289:./tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 290:./tmk_core/protocol/lufa/lufa.c **** #define CONSOLE_FLUSH_SET(b)   do { \
 291:./tmk_core/protocol/lufa/lufa.c ****     uint8_t sreg = SREG; cli(); console_flush = b; SREG = sreg; \
 292:./tmk_core/protocol/lufa/lufa.c **** } while (0)
 293:./tmk_core/protocol/lufa/lufa.c **** 
 294:./tmk_core/protocol/lufa/lufa.c **** // called every 1ms
 295:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void)
 296:./tmk_core/protocol/lufa/lufa.c **** {
 297:./tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 298:./tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 299:./tmk_core/protocol/lufa/lufa.c ****     count = 0;
 300:./tmk_core/protocol/lufa/lufa.c **** 
 301:./tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 302:./tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 303:./tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 304:./tmk_core/protocol/lufa/lufa.c **** }
 305:./tmk_core/protocol/lufa/lufa.c **** #endif
 306:./tmk_core/protocol/lufa/lufa.c **** 
 307:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ConfigurationChanged event.
 308:./tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 309:./tmk_core/protocol/lufa/lufa.c ****  *
 310:./tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 311:./tmk_core/protocol/lufa/lufa.c ****  * it is safe to use singl bank for all endpoints.
 312:./tmk_core/protocol/lufa/lufa.c ****  */
 313:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 314:./tmk_core/protocol/lufa/lufa.c **** {
 315:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 316:./tmk_core/protocol/lufa/lufa.c **** 
 317:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 318:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 319:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 320:./tmk_core/protocol/lufa/lufa.c **** 
 321:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 322:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 323:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 324:./tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 325:./tmk_core/protocol/lufa/lufa.c **** #endif
 326:./tmk_core/protocol/lufa/lufa.c **** 
 327:./tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 328:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Extra HID Report Endpoint */
 329:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(EXTRAKEY_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 330:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 331:./tmk_core/protocol/lufa/lufa.c **** #endif
 332:./tmk_core/protocol/lufa/lufa.c **** 
 333:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 334:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 335:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 336:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 337:./tmk_core/protocol/lufa/lufa.c **** #if 0
 338:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 339:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 340:./tmk_core/protocol/lufa/lufa.c **** #endif
 341:./tmk_core/protocol/lufa/lufa.c **** #endif
 342:./tmk_core/protocol/lufa/lufa.c **** 
 343:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 344:./tmk_core/protocol/lufa/lufa.c ****     /* Setup NKRO HID Report Endpoints */
 345:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(NKRO_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 346:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 347:./tmk_core/protocol/lufa/lufa.c **** #endif
 348:./tmk_core/protocol/lufa/lufa.c **** 
 349:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 350:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_IN_EPADDR, EP_TYPE_BULK, MIDI_STREAM_EP
 351:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_OUT_EPADDR, EP_TYPE_BULK, MIDI_STREAM_E
 352:./tmk_core/protocol/lufa/lufa.c **** #endif
 353:./tmk_core/protocol/lufa/lufa.c **** 
 354:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 355:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOT
 356:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 357:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 358:./tmk_core/protocol/lufa/lufa.c **** #endif
 359:./tmk_core/protocol/lufa/lufa.c **** }
 360:./tmk_core/protocol/lufa/lufa.c **** 
 361:./tmk_core/protocol/lufa/lufa.c **** /*
 362:./tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 363:./tmk_core/protocol/lufa/lufa.c **** 
 364:./tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 365:./tmk_core/protocol/lufa/lufa.c **** 
 366:./tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 367:./tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 368:./tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 369:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 370:./tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 371:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 372:./tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 373:./tmk_core/protocol/lufa/lufa.c **** */
 374:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ControlRequest event.
 375:./tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 376:./tmk_core/protocol/lufa/lufa.c ****  */
 377:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void)
 378:./tmk_core/protocol/lufa/lufa.c **** {
 379:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 380:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 381:./tmk_core/protocol/lufa/lufa.c **** 
 382:./tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 383:./tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 384:./tmk_core/protocol/lufa/lufa.c ****     {
 385:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 386:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 387:./tmk_core/protocol/lufa/lufa.c ****             {
 388:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 389:./tmk_core/protocol/lufa/lufa.c **** 
 390:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 391:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 392:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 393:./tmk_core/protocol/lufa/lufa.c ****                     // TODO: test/check
 394:./tmk_core/protocol/lufa/lufa.c ****                     ReportData = (uint8_t*)&keyboard_report_sent;
 395:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 396:./tmk_core/protocol/lufa/lufa.c ****                     break;
 397:./tmk_core/protocol/lufa/lufa.c ****                 }
 398:./tmk_core/protocol/lufa/lufa.c **** 
 399:./tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 400:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 401:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 402:./tmk_core/protocol/lufa/lufa.c ****             }
 403:./tmk_core/protocol/lufa/lufa.c **** 
 404:./tmk_core/protocol/lufa/lufa.c ****             break;
 405:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 406:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 407:./tmk_core/protocol/lufa/lufa.c ****             {
 408:./tmk_core/protocol/lufa/lufa.c **** 
 409:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 410:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 411:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 412:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 413:./tmk_core/protocol/lufa/lufa.c ****                 case NKRO_INTERFACE:
 414:./tmk_core/protocol/lufa/lufa.c **** #endif
 415:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 416:./tmk_core/protocol/lufa/lufa.c **** 
 417:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 418:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 419:./tmk_core/protocol/lufa/lufa.c ****                           return;
 420:./tmk_core/protocol/lufa/lufa.c ****                     }
 421:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_led_stats = Endpoint_Read_8();
 422:./tmk_core/protocol/lufa/lufa.c **** 
 423:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearOUT();
 424:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 425:./tmk_core/protocol/lufa/lufa.c ****                     break;
 426:./tmk_core/protocol/lufa/lufa.c ****                 }
 427:./tmk_core/protocol/lufa/lufa.c **** 
 428:./tmk_core/protocol/lufa/lufa.c ****             }
 429:./tmk_core/protocol/lufa/lufa.c **** 
 430:./tmk_core/protocol/lufa/lufa.c ****             break;
 431:./tmk_core/protocol/lufa/lufa.c **** 
 432:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 433:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 434:./tmk_core/protocol/lufa/lufa.c ****             {
 435:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 436:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 437:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 438:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 439:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 440:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 441:./tmk_core/protocol/lufa/lufa.c ****                 }
 442:./tmk_core/protocol/lufa/lufa.c ****             }
 443:./tmk_core/protocol/lufa/lufa.c **** 
 444:./tmk_core/protocol/lufa/lufa.c ****             break;
 445:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 446:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 447:./tmk_core/protocol/lufa/lufa.c ****             {
 448:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 449:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 450:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 451:./tmk_core/protocol/lufa/lufa.c **** 
 452:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 453:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 454:./tmk_core/protocol/lufa/lufa.c ****                 }
 455:./tmk_core/protocol/lufa/lufa.c ****             }
 456:./tmk_core/protocol/lufa/lufa.c **** 
 457:./tmk_core/protocol/lufa/lufa.c ****             break;
 458:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 459:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 460:./tmk_core/protocol/lufa/lufa.c ****             {
 461:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 462:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 463:./tmk_core/protocol/lufa/lufa.c **** 
 464:./tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 465:./tmk_core/protocol/lufa/lufa.c ****             }
 466:./tmk_core/protocol/lufa/lufa.c **** 
 467:./tmk_core/protocol/lufa/lufa.c ****             break;
 468:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 469:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 470:./tmk_core/protocol/lufa/lufa.c ****             {
 471:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 472:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 473:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 474:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 475:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 476:./tmk_core/protocol/lufa/lufa.c ****             }
 477:./tmk_core/protocol/lufa/lufa.c **** 
 478:./tmk_core/protocol/lufa/lufa.c ****             break;
 479:./tmk_core/protocol/lufa/lufa.c ****     }
 480:./tmk_core/protocol/lufa/lufa.c **** 
 481:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 482:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_ProcessControlRequest(&cdc_device);
 483:./tmk_core/protocol/lufa/lufa.c **** #endif
 484:./tmk_core/protocol/lufa/lufa.c **** }
 485:./tmk_core/protocol/lufa/lufa.c **** 
 486:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 487:./tmk_core/protocol/lufa/lufa.c ****  * Host driver
 488:./tmk_core/protocol/lufa/lufa.c **** p
 489:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 490:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void)
 491:./tmk_core/protocol/lufa/lufa.c **** {
  15               		.loc 1 491 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 492:./tmk_core/protocol/lufa/lufa.c ****     return keyboard_led_stats;
  21               		.loc 1 492 5 view .LVU1
 493:./tmk_core/protocol/lufa/lufa.c **** }
  22               		.loc 1 493 1 is_stmt 0 view .LVU2
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24               	/* epilogue start */
  25 0004 0895      		ret
  26               		.cfi_endproc
  27               	.LFE115:
  29               		.section	.text.send_mouse,"ax",@progbits
  31               	send_mouse:
  32               	.LVL0:
  33               	.LFB117:
 494:./tmk_core/protocol/lufa/lufa.c **** 
 495:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report)
 496:./tmk_core/protocol/lufa/lufa.c **** {
 497:./tmk_core/protocol/lufa/lufa.c **** 
 498:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 499:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 500:./tmk_core/protocol/lufa/lufa.c ****     for (uint8_t i = 0; i < KEYBOARD_EPSIZE; i++) {
 501:./tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->raw[i]);
 502:./tmk_core/protocol/lufa/lufa.c ****     }
 503:./tmk_core/protocol/lufa/lufa.c **** #endif
 504:./tmk_core/protocol/lufa/lufa.c **** 
 505:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 506:./tmk_core/protocol/lufa/lufa.c **** 
 507:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 508:./tmk_core/protocol/lufa/lufa.c ****         return;
 509:./tmk_core/protocol/lufa/lufa.c **** 
 510:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 511:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 512:./tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keymap_config.nkro) {
 513:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 514:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(NKRO_IN_EPNUM);
 515:./tmk_core/protocol/lufa/lufa.c **** 
 516:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 1ms */
 517:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(4);
 518:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 519:./tmk_core/protocol/lufa/lufa.c **** 
 520:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 521:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, NKRO_EPSIZE, NULL);
 522:./tmk_core/protocol/lufa/lufa.c ****     }
 523:./tmk_core/protocol/lufa/lufa.c ****     else
 524:./tmk_core/protocol/lufa/lufa.c **** #endif
 525:./tmk_core/protocol/lufa/lufa.c ****     {
 526:./tmk_core/protocol/lufa/lufa.c ****         /* Boot protocol */
 527:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(KEYBOARD_IN_EPNUM);
 528:./tmk_core/protocol/lufa/lufa.c **** 
 529:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 10ms */
 530:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 531:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 532:./tmk_core/protocol/lufa/lufa.c **** 
 533:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 534:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, KEYBOARD_EPSIZE, NULL);
 535:./tmk_core/protocol/lufa/lufa.c ****     }
 536:./tmk_core/protocol/lufa/lufa.c **** 
 537:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 538:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 539:./tmk_core/protocol/lufa/lufa.c **** 
 540:./tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 541:./tmk_core/protocol/lufa/lufa.c **** }
 542:./tmk_core/protocol/lufa/lufa.c **** 
 543:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report)
 544:./tmk_core/protocol/lufa/lufa.c **** {
  34               		.loc 1 544 1 is_stmt 1 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 545:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 546:./tmk_core/protocol/lufa/lufa.c **** 
 547:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 548:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 549:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 550:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x03);
 551:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->buttons);
 552:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->x);
 553:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->y);
 554:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->v); // should try sending the wheel v here
 555:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->h); // should try sending the wheel h here
 556:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 557:./tmk_core/protocol/lufa/lufa.c **** #endif
 558:./tmk_core/protocol/lufa/lufa.c **** 
 559:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 560:./tmk_core/protocol/lufa/lufa.c **** 
 561:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 562:./tmk_core/protocol/lufa/lufa.c ****         return;
 563:./tmk_core/protocol/lufa/lufa.c **** 
 564:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 565:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 566:./tmk_core/protocol/lufa/lufa.c **** 
 567:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 568:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 569:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 570:./tmk_core/protocol/lufa/lufa.c **** 
 571:./tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 572:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 573:./tmk_core/protocol/lufa/lufa.c **** 
 574:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 575:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 576:./tmk_core/protocol/lufa/lufa.c **** #endif
 577:./tmk_core/protocol/lufa/lufa.c **** }
  40               		.loc 1 577 1 view .LVU4
  41               	/* epilogue start */
  42 0000 0895      		ret
  43               		.cfi_endproc
  44               	.LFE117:
  46               		.section	.text.send_consumer,"ax",@progbits
  48               	send_consumer:
  49               	.LVL1:
  50               	.LFB119:
 578:./tmk_core/protocol/lufa/lufa.c **** 
 579:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data)
 580:./tmk_core/protocol/lufa/lufa.c **** {
 581:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 582:./tmk_core/protocol/lufa/lufa.c **** 
 583:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 584:./tmk_core/protocol/lufa/lufa.c ****         return;
 585:./tmk_core/protocol/lufa/lufa.c **** 
 586:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 587:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 588:./tmk_core/protocol/lufa/lufa.c ****         .usage = data
 589:./tmk_core/protocol/lufa/lufa.c ****     };
 590:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
 591:./tmk_core/protocol/lufa/lufa.c **** 
 592:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 593:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 594:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 595:./tmk_core/protocol/lufa/lufa.c **** 
 596:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 597:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 598:./tmk_core/protocol/lufa/lufa.c **** }
 599:./tmk_core/protocol/lufa/lufa.c **** 
 600:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data)
 601:./tmk_core/protocol/lufa/lufa.c **** {
  51               		.loc 1 601 1 view -0
  52               		.cfi_startproc
  53               		.loc 1 601 1 is_stmt 0 view .LVU6
  54 0000 CF93      		push r28
  55               	.LCFI0:
  56               		.cfi_def_cfa_offset 3
  57               		.cfi_offset 28, -2
  58 0002 DF93      		push r29
  59               	.LCFI1:
  60               		.cfi_def_cfa_offset 4
  61               		.cfi_offset 29, -3
  62 0004 00D0      		rcall .
  63 0006 0F92      		push __tmp_reg__
  64               	.LCFI2:
  65               		.cfi_def_cfa_offset 7
  66 0008 CDB7      		in r28,__SP_L__
  67 000a DEB7      		in r29,__SP_H__
  68               	.LCFI3:
  69               		.cfi_def_cfa_register 28
  70               	/* prologue: function */
  71               	/* frame size = 3 */
  72               	/* stack size = 5 */
  73               	.L__stack_usage = 5
 602:./tmk_core/protocol/lufa/lufa.c **** 
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 604:./tmk_core/protocol/lufa/lufa.c ****     static uint16_t last_data = 0;
 605:./tmk_core/protocol/lufa/lufa.c ****     if (data == last_data) return;
 606:./tmk_core/protocol/lufa/lufa.c ****     last_data = data;
 607:./tmk_core/protocol/lufa/lufa.c ****     uint16_t bitmap = CONSUMER2BLUEFRUIT(data);
 608:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 609:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 610:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x02);
 611:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send((bitmap>>8)&0xFF);
 612:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(bitmap&0xFF);
 613:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 614:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 615:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 616:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 617:./tmk_core/protocol/lufa/lufa.c **** #endif
 618:./tmk_core/protocol/lufa/lufa.c **** 
 619:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
  74               		.loc 1 619 5 is_stmt 1 view .LVU7
  75               	.LVL2:
 620:./tmk_core/protocol/lufa/lufa.c **** 
 621:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
  76               		.loc 1 621 5 view .LVU8
  77               		.loc 1 621 25 is_stmt 0 view .LVU9
  78 000c 2091 0000 		lds r18,USB_DeviceState
  79               		.loc 1 621 8 view .LVU10
  80 0010 2430      		cpi r18,lo8(4)
  81 0012 01F4      		brne .L3
 622:./tmk_core/protocol/lufa/lufa.c ****         return;
 623:./tmk_core/protocol/lufa/lufa.c **** 
 624:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
  82               		.loc 1 624 5 is_stmt 1 view .LVU11
  83               		.loc 1 624 20 is_stmt 0 view .LVU12
  84 0014 23E0      		ldi r18,lo8(3)
  85 0016 2983      		std Y+1,r18
  86 0018 9B83      		std Y+3,r25
  87 001a 8A83      		std Y+2,r24
 625:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 626:./tmk_core/protocol/lufa/lufa.c ****         .usage = data
 627:./tmk_core/protocol/lufa/lufa.c ****     };
 628:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
  88               		.loc 1 628 5 is_stmt 1 view .LVU13
  89               	.LVL3:
  90               	.LBB137:
  91               	.LBI137:
  92               		.file 2 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
  93               		.loc 2 267 23 view .LVU14
  94               	.LBB138:
 268:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
  95               		.loc 2 270 6 view .LVU15
  96               		.loc 2 270 12 is_stmt 0 view .LVU16
  97 001c 82E0      		ldi r24,lo8(2)
  98               	.LVL4:
  99               		.loc 2 270 12 view .LVU17
 100 001e 8093 E900 		sts 233,r24
 101               	.LVL5:
 102               		.loc 2 270 12 view .LVU18
 103 0022 8FEF      		ldi r24,lo8(-1)
 104               	.LVL6:
 105               	.L5:
 106               		.loc 2 270 12 view .LVU19
 107               	.LBE138:
 108               	.LBE137:
 109               	.LBB139:
 110               	.LBI139:
 271:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 111               		.loc 2 358 23 is_stmt 1 view .LVU20
 112               	.LBB140:
 359:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 113               		.loc 2 360 5 view .LVU21
 114               		.loc 2 360 14 is_stmt 0 view .LVU22
 115 0024 9091 E800 		lds r25,232
 116 0028 8150      		subi r24,lo8(-(-1))
 117               	.LVL7:
 118               		.loc 2 360 14 view .LVU23
 119               	.LBE140:
 120               	.LBE139:
 629:./tmk_core/protocol/lufa/lufa.c **** 
 630:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 631:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 121               		.loc 1 631 22 view .LVU24
 122 002a 95FD      		sbrc r25,5
 123 002c 00C0      		rjmp .L6
 124               		.loc 1 631 57 is_stmt 1 view .LVU25
 125               	.LVL8:
 126               	.LBB141:
 127               	.LBI141:
 128               		.file 3 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** _delay_us(double __us)
 129               		.loc 3 255 1 view .LVU26
 130               	.LBB142:
 256:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	double __tmp ;
 131               		.loc 3 257 2 view .LVU27
 258:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 132               		.loc 3 261 2 view .LVU28
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 133               		.loc 3 262 2 view .LVU29
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 134               		.loc 3 263 2 view .LVU30
 264:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 135               		.loc 3 273 3 view .LVU31
 274:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 136               		.loc 3 276 2 view .LVU32
 137 002e 95ED      		ldi r25,lo8(-43)
 138 0030 9A95      	1:	dec r25
 139 0032 01F4      		brne 1b
 140 0034 0000      		nop
 141               	.LVL9:
 142               		.loc 3 276 2 is_stmt 0 view .LVU33
 143               	.LBE142:
 144               	.LBE141:
 145               		.loc 1 631 11 view .LVU34
 146 0036 8111      		cpse r24,__zero_reg__
 147 0038 00C0      		rjmp .L5
 148               	.LVL10:
 149               	.L6:
 632:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 150               		.loc 1 632 5 is_stmt 1 view .LVU35
 151               	.LBB143:
 152               	.LBI143:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 153               		.loc 2 358 23 view .LVU36
 154               	.LBB144:
 155               		.loc 2 360 5 view .LVU37
 156               		.loc 2 360 14 is_stmt 0 view .LVU38
 157 003a 8091 E800 		lds r24,232
 158               	.LBE144:
 159               	.LBE143:
 160               		.loc 1 632 8 view .LVU39
 161 003e 85FF      		sbrs r24,5
 162 0040 00C0      		rjmp .L3
 633:./tmk_core/protocol/lufa/lufa.c **** 
 634:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 163               		.loc 1 634 5 is_stmt 1 view .LVU40
 164 0042 50E0      		ldi r21,0
 165 0044 40E0      		ldi r20,0
 166 0046 63E0      		ldi r22,lo8(3)
 167 0048 70E0      		ldi r23,0
 168 004a CE01      		movw r24,r28
 169 004c 0196      		adiw r24,1
 170 004e 0E94 0000 		call Endpoint_Write_Stream_LE
 171               	.LVL11:
 635:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 172               		.loc 1 635 5 view .LVU41
 173               	.LBB145:
 174               	.LBI145:
 361:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 175               		.loc 2 453 23 view .LVU42
 176               	.LBB146:
 454:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 177               		.loc 2 456 6 view .LVU43
 178               		.loc 2 456 13 is_stmt 0 view .LVU44
 179 0052 8091 E800 		lds r24,232
 180 0056 8E77      		andi r24,lo8(126)
 181 0058 8093 E800 		sts 232,r24
 182               	.LVL12:
 183               	.L3:
 184               	/* epilogue start */
 185               		.loc 2 456 13 view .LVU45
 186               	.LBE146:
 187               	.LBE145:
 636:./tmk_core/protocol/lufa/lufa.c **** }
 188               		.loc 1 636 1 view .LVU46
 189 005c 0F90      		pop __tmp_reg__
 190 005e 0F90      		pop __tmp_reg__
 191 0060 0F90      		pop __tmp_reg__
 192 0062 DF91      		pop r29
 193 0064 CF91      		pop r28
 194 0066 0895      		ret
 195               		.cfi_endproc
 196               	.LFE119:
 198               		.section	.text.send_system,"ax",@progbits
 200               	send_system:
 201               	.LVL13:
 202               	.LFB118:
 580:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 203               		.loc 1 580 1 is_stmt 1 view -0
 204               		.cfi_startproc
 580:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 205               		.loc 1 580 1 is_stmt 0 view .LVU48
 206 0000 CF93      		push r28
 207               	.LCFI4:
 208               		.cfi_def_cfa_offset 3
 209               		.cfi_offset 28, -2
 210 0002 DF93      		push r29
 211               	.LCFI5:
 212               		.cfi_def_cfa_offset 4
 213               		.cfi_offset 29, -3
 214 0004 00D0      		rcall .
 215 0006 0F92      		push __tmp_reg__
 216               	.LCFI6:
 217               		.cfi_def_cfa_offset 7
 218 0008 CDB7      		in r28,__SP_L__
 219 000a DEB7      		in r29,__SP_H__
 220               	.LCFI7:
 221               		.cfi_def_cfa_register 28
 222               	/* prologue: function */
 223               	/* frame size = 3 */
 224               	/* stack size = 5 */
 225               	.L__stack_usage = 5
 226 000c 9C01      		movw r18,r24
 581:./tmk_core/protocol/lufa/lufa.c **** 
 227               		.loc 1 581 5 is_stmt 1 view .LVU49
 228               	.LVL14:
 583:./tmk_core/protocol/lufa/lufa.c ****         return;
 229               		.loc 1 583 5 view .LVU50
 583:./tmk_core/protocol/lufa/lufa.c ****         return;
 230               		.loc 1 583 25 is_stmt 0 view .LVU51
 231 000e 8091 0000 		lds r24,USB_DeviceState
 232               	.LVL15:
 583:./tmk_core/protocol/lufa/lufa.c ****         return;
 233               		.loc 1 583 8 view .LVU52
 234 0012 8430      		cpi r24,lo8(4)
 235 0014 01F4      		brne .L15
 586:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 236               		.loc 1 586 5 is_stmt 1 view .LVU53
 586:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 237               		.loc 1 586 20 is_stmt 0 view .LVU54
 238 0016 92E0      		ldi r25,lo8(2)
 239 0018 9983      		std Y+1,r25
 240 001a 3B83      		std Y+3,r19
 241 001c 2A83      		std Y+2,r18
 590:./tmk_core/protocol/lufa/lufa.c **** 
 242               		.loc 1 590 5 is_stmt 1 view .LVU55
 243               	.LVL16:
 244               	.LBB147:
 245               	.LBI147:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 246               		.loc 2 267 23 view .LVU56
 247               	.LBB148:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 248               		.loc 2 270 6 view .LVU57
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 249               		.loc 2 270 12 is_stmt 0 view .LVU58
 250 001e 9093 E900 		sts 233,r25
 251               	.LVL17:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 252               		.loc 2 270 12 view .LVU59
 253 0022 8FEF      		ldi r24,lo8(-1)
 254               	.LVL18:
 255               	.L17:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 256               		.loc 2 270 12 view .LVU60
 257               	.LBE148:
 258               	.LBE147:
 259               	.LBB149:
 260               	.LBI149:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 261               		.loc 2 358 23 is_stmt 1 view .LVU61
 262               	.LBB150:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 263               		.loc 2 360 5 view .LVU62
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 264               		.loc 2 360 14 is_stmt 0 view .LVU63
 265 0024 9091 E800 		lds r25,232
 266 0028 8150      		subi r24,lo8(-(-1))
 267               	.LVL19:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 268               		.loc 2 360 14 view .LVU64
 269               	.LBE150:
 270               	.LBE149:
 593:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 271               		.loc 1 593 22 view .LVU65
 272 002a 95FD      		sbrc r25,5
 273 002c 00C0      		rjmp .L18
 593:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 274               		.loc 1 593 57 is_stmt 1 view .LVU66
 275               	.LVL20:
 276               	.LBB151:
 277               	.LBI151:
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 278               		.loc 3 255 1 view .LVU67
 279               	.LBB152:
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 280               		.loc 3 257 2 view .LVU68
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 281               		.loc 3 261 2 view .LVU69
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 282               		.loc 3 262 2 view .LVU70
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 283               		.loc 3 263 2 view .LVU71
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 284               		.loc 3 273 3 view .LVU72
 285               		.loc 3 276 2 view .LVU73
 286 002e 95ED      		ldi r25,lo8(-43)
 287 0030 9A95      	1:	dec r25
 288 0032 01F4      		brne 1b
 289 0034 0000      		nop
 290               	.LVL21:
 291               		.loc 3 276 2 is_stmt 0 view .LVU74
 292               	.LBE152:
 293               	.LBE151:
 593:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 294               		.loc 1 593 11 view .LVU75
 295 0036 8111      		cpse r24,__zero_reg__
 296 0038 00C0      		rjmp .L17
 297               	.LVL22:
 298               	.L18:
 594:./tmk_core/protocol/lufa/lufa.c **** 
 299               		.loc 1 594 5 is_stmt 1 view .LVU76
 300               	.LBB153:
 301               	.LBI153:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 302               		.loc 2 358 23 view .LVU77
 303               	.LBB154:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 304               		.loc 2 360 5 view .LVU78
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305               		.loc 2 360 14 is_stmt 0 view .LVU79
 306 003a 8091 E800 		lds r24,232
 307               	.LBE154:
 308               	.LBE153:
 594:./tmk_core/protocol/lufa/lufa.c **** 
 309               		.loc 1 594 8 view .LVU80
 310 003e 85FF      		sbrs r24,5
 311 0040 00C0      		rjmp .L15
 596:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 312               		.loc 1 596 5 is_stmt 1 view .LVU81
 313 0042 50E0      		ldi r21,0
 314 0044 40E0      		ldi r20,0
 315 0046 63E0      		ldi r22,lo8(3)
 316 0048 70E0      		ldi r23,0
 317 004a CE01      		movw r24,r28
 318 004c 0196      		adiw r24,1
 319 004e 0E94 0000 		call Endpoint_Write_Stream_LE
 320               	.LVL23:
 597:./tmk_core/protocol/lufa/lufa.c **** }
 321               		.loc 1 597 5 view .LVU82
 322               	.LBB155:
 323               	.LBI155:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 324               		.loc 2 453 23 view .LVU83
 325               	.LBB156:
 326               		.loc 2 456 6 view .LVU84
 327               		.loc 2 456 13 is_stmt 0 view .LVU85
 328 0052 8091 E800 		lds r24,232
 329 0056 8E77      		andi r24,lo8(126)
 330 0058 8093 E800 		sts 232,r24
 331               	.LVL24:
 332               	.L15:
 333               	/* epilogue start */
 334               		.loc 2 456 13 view .LVU86
 335               	.LBE156:
 336               	.LBE155:
 598:./tmk_core/protocol/lufa/lufa.c **** 
 337               		.loc 1 598 1 view .LVU87
 338 005c 0F90      		pop __tmp_reg__
 339 005e 0F90      		pop __tmp_reg__
 340 0060 0F90      		pop __tmp_reg__
 341 0062 DF91      		pop r29
 342 0064 CF91      		pop r28
 343 0066 0895      		ret
 344               		.cfi_endproc
 345               	.LFE118:
 347               		.section	.text.send_keyboard,"ax",@progbits
 349               	send_keyboard:
 350               	.LVL25:
 351               	.LFB116:
 496:./tmk_core/protocol/lufa/lufa.c **** 
 352               		.loc 1 496 1 is_stmt 1 view -0
 353               		.cfi_startproc
 496:./tmk_core/protocol/lufa/lufa.c **** 
 354               		.loc 1 496 1 is_stmt 0 view .LVU89
 355 0000 CF93      		push r28
 356               	.LCFI8:
 357               		.cfi_def_cfa_offset 3
 358               		.cfi_offset 28, -2
 359 0002 DF93      		push r29
 360               	.LCFI9:
 361               		.cfi_def_cfa_offset 4
 362               		.cfi_offset 29, -3
 363               	/* prologue: function */
 364               	/* frame size = 0 */
 365               	/* stack size = 2 */
 366               	.L__stack_usage = 2
 367 0004 EC01      		movw r28,r24
 505:./tmk_core/protocol/lufa/lufa.c **** 
 368               		.loc 1 505 5 is_stmt 1 view .LVU90
 369               	.LVL26:
 507:./tmk_core/protocol/lufa/lufa.c ****         return;
 370               		.loc 1 507 5 view .LVU91
 507:./tmk_core/protocol/lufa/lufa.c ****         return;
 371               		.loc 1 507 25 is_stmt 0 view .LVU92
 372 0006 8091 0000 		lds r24,USB_DeviceState
 373               	.LVL27:
 507:./tmk_core/protocol/lufa/lufa.c ****         return;
 374               		.loc 1 507 8 view .LVU93
 375 000a 8430      		cpi r24,lo8(4)
 376 000c 01F4      		brne .L27
 512:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 377               		.loc 1 512 5 is_stmt 1 view .LVU94
 512:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 378               		.loc 1 512 8 is_stmt 0 view .LVU95
 379 000e 8091 0000 		lds r24,keyboard_protocol
 380 0012 8823      		tst r24
 381 0014 01F0      		breq .L30
 512:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 382               		.loc 1 512 27 discriminator 1 view .LVU96
 383 0016 8091 0000 		lds r24,keymap_config
 384 001a 87FF      		sbrs r24,7
 385 001c 00C0      		rjmp .L30
 514:./tmk_core/protocol/lufa/lufa.c **** 
 386               		.loc 1 514 9 is_stmt 1 view .LVU97
 387               	.LVL28:
 388               	.LBB157:
 389               	.LBI157:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 390               		.loc 2 267 23 view .LVU98
 391               	.LBB158:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 392               		.loc 2 270 6 view .LVU99
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 393               		.loc 2 270 12 is_stmt 0 view .LVU100
 394 001e 83E0      		ldi r24,lo8(3)
 395 0020 8093 E900 		sts 233,r24
 396               	.LVL29:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 397               		.loc 2 270 12 view .LVU101
 398 0024 8FEF      		ldi r24,lo8(-1)
 399               	.LVL30:
 400               	.L31:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 401               		.loc 2 270 12 view .LVU102
 402               	.LBE158:
 403               	.LBE157:
 404               	.LBB159:
 405               	.LBI159:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 406               		.loc 2 358 23 is_stmt 1 view .LVU103
 407               	.LBB160:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 408               		.loc 2 360 5 view .LVU104
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409               		.loc 2 360 14 is_stmt 0 view .LVU105
 410 0026 9091 E800 		lds r25,232
 411 002a 8150      		subi r24,lo8(-(-1))
 412               	.LVL31:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 413               		.loc 2 360 14 view .LVU106
 414               	.LBE160:
 415               	.LBE159:
 517:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 416               		.loc 1 517 26 view .LVU107
 417 002c 95FD      		sbrc r25,5
 418 002e 00C0      		rjmp .L32
 517:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 419               		.loc 1 517 61 is_stmt 1 view .LVU108
 420               	.LVL32:
 421               	.LBB161:
 422               	.LBI161:
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 423               		.loc 3 255 1 view .LVU109
 424               	.LBB162:
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 425               		.loc 3 257 2 view .LVU110
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 426               		.loc 3 261 2 view .LVU111
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 427               		.loc 3 262 2 view .LVU112
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 428               		.loc 3 263 2 view .LVU113
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 429               		.loc 3 273 3 view .LVU114
 430               		.loc 3 276 2 view .LVU115
 431 0030 95E1      		ldi r25,lo8(21)
 432 0032 9A95      	1:	dec r25
 433 0034 01F4      		brne 1b
 434 0036 0000      		nop
 435               	.LVL33:
 436               		.loc 3 276 2 is_stmt 0 view .LVU116
 437               	.LBE162:
 438               	.LBE161:
 517:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 439               		.loc 1 517 15 view .LVU117
 440 0038 8111      		cpse r24,__zero_reg__
 441 003a 00C0      		rjmp .L31
 442               	.LVL34:
 443               	.L32:
 518:./tmk_core/protocol/lufa/lufa.c **** 
 444               		.loc 1 518 9 is_stmt 1 view .LVU118
 445               	.LBB163:
 446               	.LBI163:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 447               		.loc 2 358 23 view .LVU119
 448               	.LBB164:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 449               		.loc 2 360 5 view .LVU120
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 450               		.loc 2 360 14 is_stmt 0 view .LVU121
 451 003c 8091 E800 		lds r24,232
 452               	.LBE164:
 453               	.LBE163:
 521:./tmk_core/protocol/lufa/lufa.c ****     }
 454               		.loc 1 521 9 view .LVU122
 455 0040 50E0      		ldi r21,0
 456 0042 40E0      		ldi r20,0
 457 0044 60E2      		ldi r22,lo8(32)
 458 0046 70E0      		ldi r23,0
 518:./tmk_core/protocol/lufa/lufa.c **** 
 459               		.loc 1 518 12 view .LVU123
 460 0048 85FD      		sbrc r24,5
 461 004a 00C0      		rjmp .L54
 462               	.LVL35:
 463               	.L27:
 464               	/* epilogue start */
 541:./tmk_core/protocol/lufa/lufa.c **** 
 465               		.loc 1 541 1 view .LVU124
 466 004c DF91      		pop r29
 467 004e CF91      		pop r28
 468               	.LVL36:
 541:./tmk_core/protocol/lufa/lufa.c **** 
 469               		.loc 1 541 1 view .LVU125
 470 0050 0895      		ret
 471               	.LVL37:
 472               	.L30:
 527:./tmk_core/protocol/lufa/lufa.c **** 
 473               		.loc 1 527 9 is_stmt 1 view .LVU126
 474               	.LBB165:
 475               	.LBI165:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 476               		.loc 2 267 23 view .LVU127
 477               	.LBB166:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 478               		.loc 2 270 6 view .LVU128
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 479               		.loc 2 270 12 is_stmt 0 view .LVU129
 480 0052 81E0      		ldi r24,lo8(1)
 481 0054 8093 E900 		sts 233,r24
 482               	.LVL38:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 483               		.loc 2 270 12 view .LVU130
 484 0058 8FEF      		ldi r24,lo8(-1)
 485               	.LVL39:
 486               	.L36:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 487               		.loc 2 270 12 view .LVU131
 488               	.LBE166:
 489               	.LBE165:
 490               	.LBB167:
 491               	.LBI167:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 492               		.loc 2 358 23 is_stmt 1 view .LVU132
 493               	.LBB168:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 494               		.loc 2 360 5 view .LVU133
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 495               		.loc 2 360 14 is_stmt 0 view .LVU134
 496 005a 9091 E800 		lds r25,232
 497 005e 8150      		subi r24,lo8(-(-1))
 498               	.LVL40:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 499               		.loc 2 360 14 view .LVU135
 500               	.LBE168:
 501               	.LBE167:
 530:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 502               		.loc 1 530 26 view .LVU136
 503 0060 95FD      		sbrc r25,5
 504 0062 00C0      		rjmp .L37
 530:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 505               		.loc 1 530 61 is_stmt 1 view .LVU137
 506               	.LVL41:
 507               	.LBB169:
 508               	.LBI169:
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 509               		.loc 3 255 1 view .LVU138
 510               	.LBB170:
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 511               		.loc 3 257 2 view .LVU139
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 512               		.loc 3 261 2 view .LVU140
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 513               		.loc 3 262 2 view .LVU141
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 514               		.loc 3 263 2 view .LVU142
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 515               		.loc 3 273 3 view .LVU143
 516               		.loc 3 276 2 view .LVU144
 517 0064 95ED      		ldi r25,lo8(-43)
 518 0066 9A95      	1:	dec r25
 519 0068 01F4      		brne 1b
 520 006a 0000      		nop
 521               	.LVL42:
 522               		.loc 3 276 2 is_stmt 0 view .LVU145
 523               	.LBE170:
 524               	.LBE169:
 530:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 525               		.loc 1 530 15 view .LVU146
 526 006c 8111      		cpse r24,__zero_reg__
 527 006e 00C0      		rjmp .L36
 528               	.LVL43:
 529               	.L37:
 531:./tmk_core/protocol/lufa/lufa.c **** 
 530               		.loc 1 531 9 is_stmt 1 view .LVU147
 531               	.LBB171:
 532               	.LBI171:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 533               		.loc 2 358 23 view .LVU148
 534               	.LBB172:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 535               		.loc 2 360 5 view .LVU149
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536               		.loc 2 360 14 is_stmt 0 view .LVU150
 537 0070 8091 E800 		lds r24,232
 538               	.LBE172:
 539               	.LBE171:
 531:./tmk_core/protocol/lufa/lufa.c **** 
 540               		.loc 1 531 12 view .LVU151
 541 0074 85FF      		sbrs r24,5
 542 0076 00C0      		rjmp .L27
 534:./tmk_core/protocol/lufa/lufa.c ****     }
 543               		.loc 1 534 9 is_stmt 1 view .LVU152
 544 0078 50E0      		ldi r21,0
 545 007a 40E0      		ldi r20,0
 546 007c 68E0      		ldi r22,lo8(8)
 547 007e 70E0      		ldi r23,0
 548               	.LVL44:
 549               	.L54:
 534:./tmk_core/protocol/lufa/lufa.c ****     }
 550               		.loc 1 534 9 is_stmt 0 view .LVU153
 551 0080 CE01      		movw r24,r28
 552 0082 0E94 0000 		call Endpoint_Write_Stream_LE
 553               	.LVL45:
 538:./tmk_core/protocol/lufa/lufa.c **** 
 554               		.loc 1 538 5 is_stmt 1 view .LVU154
 555               	.LBB173:
 556               	.LBI173:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 557               		.loc 2 453 23 view .LVU155
 558               	.LBB174:
 559               		.loc 2 456 6 view .LVU156
 560               		.loc 2 456 13 is_stmt 0 view .LVU157
 561 0086 8091 E800 		lds r24,232
 562 008a 8E77      		andi r24,lo8(126)
 563 008c 8093 E800 		sts 232,r24
 564               	.LBE174:
 565               	.LBE173:
 540:./tmk_core/protocol/lufa/lufa.c **** }
 566               		.loc 1 540 5 is_stmt 1 view .LVU158
 540:./tmk_core/protocol/lufa/lufa.c **** }
 567               		.loc 1 540 26 is_stmt 0 view .LVU159
 568 0090 80E2      		ldi r24,lo8(32)
 569 0092 FE01      		movw r30,r28
 570 0094 A0E0      		ldi r26,lo8(keyboard_report_sent)
 571 0096 B0E0      		ldi r27,hi8(keyboard_report_sent)
 572               		0:
 573 0098 0190      		ld r0,Z+
 574 009a 0D92      		st X+,r0
 575 009c 8A95      		dec r24
 576 009e 01F4      		brne 0b
 577 00a0 00C0      		rjmp .L27
 578               		.cfi_endproc
 579               	.LFE116:
 581               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 582               	.global	EVENT_USB_Device_Connect
 584               	EVENT_USB_Device_Connect:
 585               	.LFB108:
 239:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 586               		.loc 1 239 1 is_stmt 1 view -0
 587               		.cfi_startproc
 588               	/* prologue: function */
 589               	/* frame size = 0 */
 590               	/* stack size = 0 */
 591               	.L__stack_usage = 0
 240:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 592               		.loc 1 240 17 view .LVU161
 242:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 593               		.loc 1 242 5 view .LVU162
 242:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 594               		.loc 1 242 9 is_stmt 0 view .LVU163
 595 0000 8091 0000 		lds r24,USB_IsInitialized
 242:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 596               		.loc 1 242 8 view .LVU164
 597 0004 8111      		cpse r24,__zero_reg__
 598 0006 00C0      		rjmp .L55
 243:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 599               		.loc 1 243 9 is_stmt 1 view .LVU165
 600 0008 0E94 0000 		call USB_Disable
 601               	.LVL46:
 244:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 602               		.loc 1 244 9 view .LVU166
 603 000c 0E94 0000 		call USB_Init
 604               	.LVL47:
 245:./tmk_core/protocol/lufa/lufa.c ****     }
 605               		.loc 1 245 9 view .LVU167
 606               	.LBB175:
 607               	.LBI175:
 608               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 609               		.loc 4 176 24 view .LVU168
 610               	.LBE175:
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 611               		.loc 4 178 6 view .LVU169
 612               	.LBB178:
 613               	.LBB176:
 614               	.LBI176:
 615               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
 616               		.loc 5 88 23 view .LVU170
 617               	.LBB177:
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 618               		.loc 5 90 5 view .LVU171
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 619               		.loc 5 113 7 view .LVU172
 620               		.loc 5 113 14 is_stmt 0 view .LVU173
 621 0010 8091 E200 		lds r24,226
 622 0014 8460      		ori r24,lo8(4)
 623 0016 8093 E200 		sts 226,r24
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 624               		.loc 5 114 7 is_stmt 1 view .LVU174
 625               	.LVL48:
 626               	.L55:
 627               	/* epilogue start */
 628               		.loc 5 114 7 is_stmt 0 view .LVU175
 629               	.LBE177:
 630               	.LBE176:
 631               	.LBE178:
 247:./tmk_core/protocol/lufa/lufa.c **** 
 632               		.loc 1 247 1 view .LVU176
 633 001a 0895      		ret
 634               		.cfi_endproc
 635               	.LFE108:
 637               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 638               	.global	EVENT_USB_Device_Disconnect
 640               	EVENT_USB_Device_Disconnect:
 641               	.LFB109:
 250:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 642               		.loc 1 250 1 is_stmt 1 view -0
 643               		.cfi_startproc
 644               	/* prologue: function */
 645               	/* frame size = 0 */
 646               	/* stack size = 0 */
 647               	.L__stack_usage = 0
 251:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 648               		.loc 1 251 17 view .LVU178
 253:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 649               		.loc 1 253 5 view .LVU179
 253:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 650               		.loc 1 253 23 is_stmt 0 view .LVU180
 651 0000 1092 0000 		sts USB_IsInitialized,__zero_reg__
 652               	/* epilogue start */
 261:./tmk_core/protocol/lufa/lufa.c **** 
 653               		.loc 1 261 1 view .LVU181
 654 0004 0895      		ret
 655               		.cfi_endproc
 656               	.LFE109:
 658               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 659               	.global	EVENT_USB_Device_Reset
 661               	EVENT_USB_Device_Reset:
 662               	.LFB129:
 663               		.cfi_startproc
 664               	/* prologue: function */
 665               	/* frame size = 0 */
 666               	/* stack size = 0 */
 667               	.L__stack_usage = 0
 668               	/* epilogue start */
 669 0000 0895      		ret
 670               		.cfi_endproc
 671               	.LFE129:
 673               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 674               	.global	EVENT_USB_Device_Suspend
 676               	EVENT_USB_Device_Suspend:
 677               	.LFB111:
 269:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 678               		.loc 1 269 1 is_stmt 1 view -0
 679               		.cfi_startproc
 680               	/* prologue: function */
 681               	/* frame size = 0 */
 682               	/* stack size = 0 */
 683               	.L__stack_usage = 0
 270:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 684               		.loc 1 270 17 view .LVU183
 685               	/* epilogue start */
 274:./tmk_core/protocol/lufa/lufa.c **** 
 686               		.loc 1 274 1 is_stmt 0 view .LVU184
 687 0000 0895      		ret
 688               		.cfi_endproc
 689               	.LFE111:
 691               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 692               	.global	EVENT_USB_Device_WakeUp
 694               	EVENT_USB_Device_WakeUp:
 695               	.LFB112:
 277:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 696               		.loc 1 277 1 is_stmt 1 view -0
 697               		.cfi_startproc
 698               	/* prologue: function */
 699               	/* frame size = 0 */
 700               	/* stack size = 0 */
 701               	.L__stack_usage = 0
 278:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 702               		.loc 1 278 17 view .LVU186
 279:./tmk_core/protocol/lufa/lufa.c **** 
 703               		.loc 1 279 5 view .LVU187
 704 0000 0C94 0000 		jmp suspend_wakeup_init
 705               	.LVL49:
 706               		.cfi_endproc
 707               	.LFE112:
 709               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 710               	.global	EVENT_USB_Device_ConfigurationChanged
 712               	EVENT_USB_Device_ConfigurationChanged:
 713               	.LFB113:
 314:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 714               		.loc 1 314 1 view -0
 715               		.cfi_startproc
 716               	/* prologue: function */
 717               	/* frame size = 0 */
 718               	/* stack size = 0 */
 719               	.L__stack_usage = 0
 315:./tmk_core/protocol/lufa/lufa.c **** 
 720               		.loc 1 315 5 view .LVU189
 721               	.LVL50:
 318:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 722               		.loc 1 318 5 view .LVU190
 723               	.LBB179:
 724               	.LBI179:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 725               		.loc 2 200 23 view .LVU191
 726               	.LBB180:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 727               		.loc 2 205 5 view .LVU192
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 728               		.loc 2 207 5 view .LVU193
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 729               		.loc 2 210 5 view .LVU194
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 730               		.loc 2 210 5 is_stmt 0 view .LVU195
 731               	.LBE180:
 732               	.LBE179:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 733               		.loc 2 97 5 is_stmt 1 view .LVU196
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 734               		.loc 2 98 5 view .LVU197
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 735               		.loc 2 100 5 view .LVU198
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 736               		.loc 2 106 5 view .LVU199
 737               	.LBB182:
 738               	.LBB181:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 739               		.loc 2 210 12 is_stmt 0 view .LVU200
 740 0000 42E0      		ldi r20,lo8(2)
 741 0002 61EC      		ldi r22,lo8(-63)
 742 0004 81E0      		ldi r24,lo8(1)
 743 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 744               	.LVL51:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 745               		.loc 2 210 12 view .LVU201
 746               	.LBE181:
 747               	.LBE182:
 329:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 748               		.loc 1 329 5 is_stmt 1 view .LVU202
 749               	.LBB183:
 750               	.LBI183:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 751               		.loc 2 200 23 view .LVU203
 752               	.LBB184:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 753               		.loc 2 205 5 view .LVU204
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 754               		.loc 2 207 5 view .LVU205
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 755               		.loc 2 210 5 view .LVU206
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 756               		.loc 2 210 5 is_stmt 0 view .LVU207
 757               	.LBE184:
 758               	.LBE183:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 759               		.loc 2 97 5 is_stmt 1 view .LVU208
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 760               		.loc 2 98 5 view .LVU209
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 761               		.loc 2 100 5 view .LVU210
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 762               		.loc 2 106 5 view .LVU211
 763               	.LBB186:
 764               	.LBB185:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 765               		.loc 2 210 12 is_stmt 0 view .LVU212
 766 000a 42E0      		ldi r20,lo8(2)
 767 000c 61EC      		ldi r22,lo8(-63)
 768 000e 82E0      		ldi r24,lo8(2)
 769 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 770               	.LVL52:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 771               		.loc 2 210 12 view .LVU213
 772               	.LBE185:
 773               	.LBE186:
 345:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 774               		.loc 1 345 5 is_stmt 1 view .LVU214
 775               	.LBB187:
 776               	.LBI187:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 777               		.loc 2 200 23 view .LVU215
 778               	.LBB188:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 779               		.loc 2 205 5 view .LVU216
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 780               		.loc 2 207 5 view .LVU217
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 781               		.loc 2 207 5 is_stmt 0 view .LVU218
 782               	.LBE188:
 783               	.LBE187:
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 784               		.loc 2 102 6 is_stmt 1 view .LVU219
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 785               		.loc 2 103 6 view .LVU220
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 786               		.loc 2 102 6 view .LVU221
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 787               		.loc 2 103 6 view .LVU222
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 788               		.loc 2 106 5 view .LVU223
 789               	.LBB190:
 790               	.LBB189:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 791               		.loc 2 210 12 is_stmt 0 view .LVU224
 792 0014 42E2      		ldi r20,lo8(34)
 793 0016 61EC      		ldi r22,lo8(-63)
 794 0018 83E0      		ldi r24,lo8(3)
 795 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 796               	.LVL53:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 797               		.loc 2 210 12 view .LVU225
 798               	.LBE189:
 799               	.LBE190:
 355:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 800               		.loc 1 355 5 is_stmt 1 view .LVU226
 801               	.LBB191:
 802               	.LBI191:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 803               		.loc 2 200 23 view .LVU227
 804               	.LBB192:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 805               		.loc 2 205 5 view .LVU228
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 806               		.loc 2 207 5 view .LVU229
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 807               		.loc 2 210 5 view .LVU230
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 808               		.loc 2 210 5 is_stmt 0 view .LVU231
 809               	.LBE192:
 810               	.LBE191:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 811               		.loc 2 97 5 is_stmt 1 view .LVU232
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 812               		.loc 2 98 5 view .LVU233
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 813               		.loc 2 100 5 view .LVU234
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 814               		.loc 2 106 5 view .LVU235
 815               	.LBB194:
 816               	.LBB193:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 817               		.loc 2 210 12 is_stmt 0 view .LVU236
 818 001e 42E0      		ldi r20,lo8(2)
 819 0020 61EC      		ldi r22,lo8(-63)
 820 0022 84E0      		ldi r24,lo8(4)
 821 0024 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 822               	.LVL54:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 823               		.loc 2 210 12 view .LVU237
 824               	.LBE193:
 825               	.LBE194:
 356:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 826               		.loc 1 356 5 is_stmt 1 view .LVU238
 827               	.LBB195:
 828               	.LBI195:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 829               		.loc 2 200 23 view .LVU239
 830               	.LBB196:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 831               		.loc 2 205 5 view .LVU240
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 832               		.loc 2 207 5 view .LVU241
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 833               		.loc 2 207 5 is_stmt 0 view .LVU242
 834               	.LBE196:
 835               	.LBE195:
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 836               		.loc 2 102 6 is_stmt 1 view .LVU243
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 837               		.loc 2 103 6 view .LVU244
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 838               		.loc 2 106 5 view .LVU245
 839               	.LBB198:
 840               	.LBB197:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 841               		.loc 2 210 12 is_stmt 0 view .LVU246
 842 0028 42E1      		ldi r20,lo8(18)
 843 002a 60E8      		ldi r22,lo8(-128)
 844 002c 86E0      		ldi r24,lo8(6)
 845 002e 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 846               	.LVL55:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 847               		.loc 2 210 12 view .LVU247
 848               	.LBE197:
 849               	.LBE198:
 357:./tmk_core/protocol/lufa/lufa.c **** #endif
 850               		.loc 1 357 5 is_stmt 1 view .LVU248
 851               	.LBB199:
 852               	.LBI199:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 853               		.loc 2 200 23 view .LVU249
 854               	.LBB200:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 855               		.loc 2 205 5 view .LVU250
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 856               		.loc 2 207 5 view .LVU251
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 857               		.loc 2 207 5 is_stmt 0 view .LVU252
 858               	.LBE200:
 859               	.LBE199:
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 860               		.loc 2 102 6 is_stmt 1 view .LVU253
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 861               		.loc 2 103 6 view .LVU254
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 862               		.loc 2 106 5 view .LVU255
 863               	.LBB202:
 864               	.LBB201:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 865               		.loc 2 210 12 is_stmt 0 view .LVU256
 866 0032 42E1      		ldi r20,lo8(18)
 867 0034 61E8      		ldi r22,lo8(-127)
 868 0036 85E0      		ldi r24,lo8(5)
 869 0038 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 870               	.LVL56:
 871               	.LBE201:
 872               	.LBE202:
 873               		.cfi_endproc
 874               	.LFE113:
 876               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 877               	.global	EVENT_USB_Device_ControlRequest
 879               	EVENT_USB_Device_ControlRequest:
 880               	.LFB114:
 378:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 881               		.loc 1 378 1 is_stmt 1 view -0
 882               		.cfi_startproc
 883               	/* prologue: function */
 884               	/* frame size = 0 */
 885               	/* stack size = 0 */
 886               	.L__stack_usage = 0
 379:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 887               		.loc 1 379 5 view .LVU258
 888               	.LVL57:
 380:./tmk_core/protocol/lufa/lufa.c **** 
 889               		.loc 1 380 5 view .LVU259
 383:./tmk_core/protocol/lufa/lufa.c ****     {
 890               		.loc 1 383 5 view .LVU260
 383:./tmk_core/protocol/lufa/lufa.c ****     {
 891               		.loc 1 383 31 is_stmt 0 view .LVU261
 892 0000 8091 0000 		lds r24,USB_ControlRequest+1
 893 0004 8330      		cpi r24,lo8(3)
 894 0006 01F4      		brne .+2
 895 0008 00C0      		rjmp .L63
 896 000a 00F4      		brsh .L64
 897 000c 8130      		cpi r24,lo8(1)
 898 000e 01F0      		breq .L65
 899 0010 8230      		cpi r24,lo8(2)
 900 0012 01F4      		brne .+2
 901 0014 00C0      		rjmp .L66
 902               	.LVL58:
 903               	.L67:
 482:./tmk_core/protocol/lufa/lufa.c **** #endif
 904               		.loc 1 482 5 is_stmt 1 view .LVU262
 905 0016 80E0      		ldi r24,lo8(cdc_device)
 906 0018 90E0      		ldi r25,hi8(cdc_device)
 907 001a 0C94 0000 		jmp CDC_Device_ProcessControlRequest
 908               	.LVL59:
 909               	.L64:
 482:./tmk_core/protocol/lufa/lufa.c **** #endif
 910               		.loc 1 482 5 is_stmt 0 view .LVU263
 911 001e 8A30      		cpi r24,lo8(10)
 912 0020 01F4      		brne .+2
 913 0022 00C0      		rjmp .L68
 914 0024 8B30      		cpi r24,lo8(11)
 915 0026 01F4      		brne .+2
 916 0028 00C0      		rjmp .L69
 917 002a 8930      		cpi r24,lo8(9)
 918 002c 01F4      		brne .L67
 406:./tmk_core/protocol/lufa/lufa.c ****             {
 919               		.loc 1 406 13 is_stmt 1 view .LVU264
 406:./tmk_core/protocol/lufa/lufa.c ****             {
 920               		.loc 1 406 16 is_stmt 0 view .LVU265
 921 002e 8091 0000 		lds r24,USB_ControlRequest
 922 0032 8132      		cpi r24,lo8(33)
 923 0034 01F4      		brne .L67
 410:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 924               		.loc 1 410 17 is_stmt 1 view .LVU266
 410:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 925               		.loc 1 410 43 is_stmt 0 view .LVU267
 926 0036 8091 0000 		lds r24,USB_ControlRequest+4
 927 003a 9091 0000 		lds r25,USB_ControlRequest+4+1
 928 003e 0097      		sbiw r24,0
 929 0040 01F0      		breq .L72
 930 0042 0297      		sbiw r24,2
 931 0044 01F4      		brne .L67
 932               	.L72:
 415:./tmk_core/protocol/lufa/lufa.c **** 
 933               		.loc 1 415 21 is_stmt 1 view .LVU268
 934               	.LBB203:
 935               	.LBI203:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 936               		.loc 2 442 23 view .LVU269
 937               	.LBB204:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 938               		.loc 2 444 5 view .LVU270
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 939               		.loc 2 444 12 is_stmt 0 view .LVU271
 940 0046 8091 E800 		lds r24,232
 941 004a 877F      		andi r24,lo8(-9)
 942 004c 8093 E800 		sts 232,r24
 943               	.L73:
 944               	.LBE204:
 945               	.LBE203:
 946               	.LBB205:
 947               	.LBI205:
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 948               		.loc 2 417 23 is_stmt 1 view .LVU272
 949               	.LBB206:
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 950               		.loc 2 419 5 view .LVU273
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 951               		.loc 2 419 14 is_stmt 0 view .LVU274
 952 0050 8091 E800 		lds r24,232
 953               	.LBE206:
 954               	.LBE205:
 417:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 955               		.loc 1 417 27 view .LVU275
 956 0054 82FF      		sbrs r24,2
 957 0056 00C0      		rjmp .L75
 421:./tmk_core/protocol/lufa/lufa.c **** 
 958               		.loc 1 421 21 is_stmt 1 view .LVU276
 959               	.LBB207:
 960               	.LBI207:
 457:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 961               		.loc 2 540 26 view .LVU277
 962               	.LBB208:
 541:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 963               		.loc 2 542 5 view .LVU278
 964               		.loc 2 542 12 is_stmt 0 view .LVU279
 965 0058 8091 F100 		lds r24,241
 966               	.LBE208:
 967               	.LBE207:
 421:./tmk_core/protocol/lufa/lufa.c **** 
 968               		.loc 1 421 40 view .LVU280
 969 005c 8093 0000 		sts keyboard_led_stats,r24
 423:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 970               		.loc 1 423 21 is_stmt 1 view .LVU281
 971               	.LBB209:
 972               	.LBI209:
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 973               		.loc 2 468 23 view .LVU282
 974               	.LBB210:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 975               		.loc 2 471 6 view .LVU283
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 976               		.loc 2 471 13 is_stmt 0 view .LVU284
 977 0060 8091 E800 		lds r24,232
 978 0064 8B77      		andi r24,lo8(123)
 979               	.L87:
 980               	.LBE210:
 981               	.LBE209:
 982               	.LBB211:
 983               	.LBB212:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 984               		.loc 2 456 13 view .LVU285
 985 0066 8093 E800 		sts 232,r24
 986               	.LBE212:
 987               	.LBE211:
 475:./tmk_core/protocol/lufa/lufa.c ****             }
 988               		.loc 1 475 17 is_stmt 1 view .LVU286
 989 006a 0E94 0000 		call Endpoint_ClearStatusStage
 990               	.LVL60:
 991 006e 00C0      		rjmp .L67
 992               	.L65:
 386:./tmk_core/protocol/lufa/lufa.c ****             {
 993               		.loc 1 386 13 view .LVU287
 386:./tmk_core/protocol/lufa/lufa.c ****             {
 994               		.loc 1 386 16 is_stmt 0 view .LVU288
 995 0070 8091 0000 		lds r24,USB_ControlRequest
 996 0074 813A      		cpi r24,lo8(-95)
 997 0076 01F4      		brne .L67
 388:./tmk_core/protocol/lufa/lufa.c **** 
 998               		.loc 1 388 17 is_stmt 1 view .LVU289
 999               	.LBB214:
 1000               	.LBI214:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1001               		.loc 2 442 23 view .LVU290
 1002               	.LBB215:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1003               		.loc 2 444 5 view .LVU291
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1004               		.loc 2 444 12 is_stmt 0 view .LVU292
 1005 0078 8091 E800 		lds r24,232
 1006 007c 877F      		andi r24,lo8(-9)
 1007 007e 8093 E800 		sts 232,r24
 1008               	.LBE215:
 1009               	.LBE214:
 391:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1010               		.loc 1 391 17 is_stmt 1 view .LVU293
 1011 0082 8091 0000 		lds r24,USB_ControlRequest+4
 1012 0086 9091 0000 		lds r25,USB_ControlRequest+4+1
 1013 008a 892B      		or r24,r25
 1014 008c 01F4      		brne .L78
 395:./tmk_core/protocol/lufa/lufa.c ****                     break;
 1015               		.loc 1 395 32 is_stmt 0 view .LVU294
 1016 008e 60E2      		ldi r22,lo8(32)
 394:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 1017               		.loc 1 394 32 view .LVU295
 1018 0090 80E0      		ldi r24,lo8(keyboard_report_sent)
 1019 0092 90E0      		ldi r25,hi8(keyboard_report_sent)
 1020               	.L71:
 1021               	.LVL61:
 400:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 1022               		.loc 1 400 17 is_stmt 1 view .LVU296
 1023 0094 70E0      		ldi r23,0
 1024 0096 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1025               	.LVL62:
 401:./tmk_core/protocol/lufa/lufa.c ****             }
 1026               		.loc 1 401 17 view .LVU297
 1027               	.LBB216:
 1028               	.LBI216:
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1029               		.loc 2 468 23 view .LVU298
 1030               	.LBB217:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1031               		.loc 2 471 6 view .LVU299
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1032               		.loc 2 471 13 is_stmt 0 view .LVU300
 1033 009a 8091 E800 		lds r24,232
 1034 009e 8B77      		andi r24,lo8(123)
 1035 00a0 8093 E800 		sts 232,r24
 1036 00a4 00C0      		rjmp .L67
 1037               	.LVL63:
 1038               	.L78:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1039               		.loc 2 471 13 view .LVU301
 1040               	.LBE217:
 1041               	.LBE216:
 380:./tmk_core/protocol/lufa/lufa.c **** 
 1042               		.loc 1 380 14 view .LVU302
 1043 00a6 60E0      		ldi r22,0
 379:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1044               		.loc 1 379 14 view .LVU303
 1045 00a8 90E0      		ldi r25,0
 1046 00aa 80E0      		ldi r24,0
 1047 00ac 00C0      		rjmp .L71
 1048               	.L75:
 418:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1049               		.loc 1 418 25 is_stmt 1 view .LVU304
 418:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1050               		.loc 1 418 45 is_stmt 0 view .LVU305
 1051 00ae 8091 0000 		lds r24,USB_DeviceState
 418:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1052               		.loc 1 418 28 view .LVU306
 1053 00b2 8111      		cpse r24,__zero_reg__
 1054 00b4 00C0      		rjmp .L73
 1055               	/* epilogue start */
 484:./tmk_core/protocol/lufa/lufa.c **** 
 1056               		.loc 1 484 1 view .LVU307
 1057 00b6 0895      		ret
 1058               	.L63:
 433:./tmk_core/protocol/lufa/lufa.c ****             {
 1059               		.loc 1 433 13 is_stmt 1 view .LVU308
 433:./tmk_core/protocol/lufa/lufa.c ****             {
 1060               		.loc 1 433 16 is_stmt 0 view .LVU309
 1061 00b8 8091 0000 		lds r24,USB_ControlRequest
 1062 00bc 813A      		cpi r24,lo8(-95)
 1063 00be 01F0      		breq .+2
 1064 00c0 00C0      		rjmp .L67
 435:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1065               		.loc 1 435 17 is_stmt 1 view .LVU310
 435:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1066               		.loc 1 435 20 is_stmt 0 view .LVU311
 1067 00c2 8091 0000 		lds r24,USB_ControlRequest+4
 1068 00c6 9091 0000 		lds r25,USB_ControlRequest+4+1
 1069 00ca 892B      		or r24,r25
 1070 00cc 01F0      		breq .+2
 1071 00ce 00C0      		rjmp .L67
 436:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 1072               		.loc 1 436 21 is_stmt 1 view .LVU312
 1073               	.LBB218:
 1074               	.LBI218:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1075               		.loc 2 442 23 view .LVU313
 1076               	.LBB219:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1077               		.loc 2 444 5 view .LVU314
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1078               		.loc 2 444 12 is_stmt 0 view .LVU315
 1079 00d0 8091 E800 		lds r24,232
 1080 00d4 877F      		andi r24,lo8(-9)
 1081 00d6 8093 E800 		sts 232,r24
 1082               	.L76:
 1083               	.LBE219:
 1084               	.LBE218:
 437:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1085               		.loc 1 437 52 is_stmt 1 discriminator 1 view .LVU316
 1086               	.LBB220:
 1087               	.LBI220:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1088               		.loc 2 405 23 discriminator 1 view .LVU317
 1089               	.LBB221:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1090               		.loc 2 407 5 discriminator 1 view .LVU318
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1091               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU319
 1092 00da 8091 E800 		lds r24,232
 1093               	.LBE221:
 1094               	.LBE220:
 437:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1095               		.loc 1 437 27 discriminator 1 view .LVU320
 1096 00de 80FF      		sbrs r24,0
 1097 00e0 00C0      		rjmp .L76
 438:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 1098               		.loc 1 438 21 is_stmt 1 view .LVU321
 1099 00e2 8091 0000 		lds r24,keyboard_protocol
 1100               	.LVL64:
 1101               	.LBB222:
 1102               	.LBI222:
 543:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 1103               		.loc 2 552 23 view .LVU322
 1104               	.LBB223:
 553:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1105               		.loc 2 554 5 view .LVU323
 1106               	.L86:
 1107               		.loc 2 554 5 is_stmt 0 view .LVU324
 1108               	.LBE223:
 1109               	.LBE222:
 1110               	.LBB224:
 1111               	.LBI224:
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1112               		.loc 2 552 23 is_stmt 1 view .LVU325
 1113               	.LBB225:
 1114               		.loc 2 554 5 view .LVU326
 1115               		.loc 2 554 12 is_stmt 0 view .LVU327
 1116 00e6 8093 F100 		sts 241,r24
 1117               	.LVL65:
 1118               		.loc 2 554 12 view .LVU328
 1119               	.LBE225:
 1120               	.LBE224:
 474:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1121               		.loc 1 474 17 is_stmt 1 view .LVU329
 1122               	.LBB226:
 1123               	.LBI211:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1124               		.loc 2 453 23 view .LVU330
 1125               	.LBB213:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1126               		.loc 2 456 6 view .LVU331
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1127               		.loc 2 456 13 is_stmt 0 view .LVU332
 1128 00ea 8091 E800 		lds r24,232
 1129 00ee 8E77      		andi r24,lo8(126)
 1130 00f0 00C0      		rjmp .L87
 1131               	.L69:
 1132               	.LBE213:
 1133               	.LBE226:
 446:./tmk_core/protocol/lufa/lufa.c ****             {
 1134               		.loc 1 446 13 is_stmt 1 view .LVU333
 446:./tmk_core/protocol/lufa/lufa.c ****             {
 1135               		.loc 1 446 16 is_stmt 0 view .LVU334
 1136 00f2 8091 0000 		lds r24,USB_ControlRequest
 1137 00f6 8132      		cpi r24,lo8(33)
 1138 00f8 01F0      		breq .+2
 1139 00fa 00C0      		rjmp .L67
 448:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1140               		.loc 1 448 17 is_stmt 1 view .LVU335
 448:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1141               		.loc 1 448 20 is_stmt 0 view .LVU336
 1142 00fc 8091 0000 		lds r24,USB_ControlRequest+4
 1143 0100 9091 0000 		lds r25,USB_ControlRequest+4+1
 1144 0104 892B      		or r24,r25
 1145 0106 01F0      		breq .+2
 1146 0108 00C0      		rjmp .L67
 449:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1147               		.loc 1 449 21 is_stmt 1 view .LVU337
 1148               	.LBB227:
 1149               	.LBI227:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1150               		.loc 2 442 23 view .LVU338
 1151               	.LBB228:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1152               		.loc 2 444 5 view .LVU339
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1153               		.loc 2 444 12 is_stmt 0 view .LVU340
 1154 010a 8091 E800 		lds r24,232
 1155 010e 877F      		andi r24,lo8(-9)
 1156 0110 8093 E800 		sts 232,r24
 1157               	.LBE228:
 1158               	.LBE227:
 450:./tmk_core/protocol/lufa/lufa.c **** 
 1159               		.loc 1 450 21 is_stmt 1 view .LVU341
 1160 0114 0E94 0000 		call Endpoint_ClearStatusStage
 1161               	.LVL66:
 452:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1162               		.loc 1 452 21 view .LVU342
 452:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1163               		.loc 1 452 39 is_stmt 0 view .LVU343
 1164 0118 8091 0000 		lds r24,USB_ControlRequest+2
 1165 011c 8093 0000 		sts keyboard_protocol,r24
 453:./tmk_core/protocol/lufa/lufa.c ****                 }
 1166               		.loc 1 453 21 is_stmt 1 view .LVU344
 1167 0120 0E94 0000 		call clear_keyboard
 1168               	.LVL67:
 1169 0124 00C0      		rjmp .L67
 1170               	.L68:
 459:./tmk_core/protocol/lufa/lufa.c ****             {
 1171               		.loc 1 459 13 view .LVU345
 459:./tmk_core/protocol/lufa/lufa.c ****             {
 1172               		.loc 1 459 16 is_stmt 0 view .LVU346
 1173 0126 8091 0000 		lds r24,USB_ControlRequest
 1174 012a 8132      		cpi r24,lo8(33)
 1175 012c 01F0      		breq .+2
 1176 012e 00C0      		rjmp .L67
 461:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1177               		.loc 1 461 17 is_stmt 1 view .LVU347
 1178               	.LBB229:
 1179               	.LBI229:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1180               		.loc 2 442 23 view .LVU348
 1181               	.LBB230:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1182               		.loc 2 444 5 view .LVU349
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1183               		.loc 2 444 12 is_stmt 0 view .LVU350
 1184 0130 8091 E800 		lds r24,232
 1185 0134 877F      		andi r24,lo8(-9)
 1186 0136 8093 E800 		sts 232,r24
 1187               	.LBE230:
 1188               	.LBE229:
 462:./tmk_core/protocol/lufa/lufa.c **** 
 1189               		.loc 1 462 17 is_stmt 1 view .LVU351
 1190 013a 0E94 0000 		call Endpoint_ClearStatusStage
 1191               	.LVL68:
 464:./tmk_core/protocol/lufa/lufa.c ****             }
 1192               		.loc 1 464 17 view .LVU352
 464:./tmk_core/protocol/lufa/lufa.c ****             }
 1193               		.loc 1 464 71 is_stmt 0 view .LVU353
 1194 013e 8091 0000 		lds r24,USB_ControlRequest+3
 464:./tmk_core/protocol/lufa/lufa.c ****             }
 1195               		.loc 1 464 31 view .LVU354
 1196 0142 8093 0000 		sts keyboard_idle,r24
 1197 0146 00C0      		rjmp .L67
 1198               	.L66:
 469:./tmk_core/protocol/lufa/lufa.c ****             {
 1199               		.loc 1 469 13 is_stmt 1 view .LVU355
 469:./tmk_core/protocol/lufa/lufa.c ****             {
 1200               		.loc 1 469 16 is_stmt 0 view .LVU356
 1201 0148 8091 0000 		lds r24,USB_ControlRequest
 1202 014c 813A      		cpi r24,lo8(-95)
 1203 014e 01F0      		breq .+2
 1204 0150 00C0      		rjmp .L67
 471:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 1205               		.loc 1 471 17 is_stmt 1 view .LVU357
 1206               	.LBB231:
 1207               	.LBI231:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1208               		.loc 2 442 23 view .LVU358
 1209               	.LBB232:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1210               		.loc 2 444 5 view .LVU359
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1211               		.loc 2 444 12 is_stmt 0 view .LVU360
 1212 0152 8091 E800 		lds r24,232
 1213 0156 877F      		andi r24,lo8(-9)
 1214 0158 8093 E800 		sts 232,r24
 1215               	.L77:
 1216               	.LBE232:
 1217               	.LBE231:
 472:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1218               		.loc 1 472 48 is_stmt 1 discriminator 1 view .LVU361
 1219               	.LBB233:
 1220               	.LBI233:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1221               		.loc 2 405 23 discriminator 1 view .LVU362
 1222               	.LBB234:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1223               		.loc 2 407 5 discriminator 1 view .LVU363
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1224               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU364
 1225 015c 8091 E800 		lds r24,232
 1226               	.LBE234:
 1227               	.LBE233:
 472:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1228               		.loc 1 472 23 discriminator 1 view .LVU365
 1229 0160 80FF      		sbrs r24,0
 1230 0162 00C0      		rjmp .L77
 473:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 1231               		.loc 1 473 17 is_stmt 1 view .LVU366
 1232 0164 8091 0000 		lds r24,keyboard_idle
 1233 0168 00C0      		rjmp .L86
 1234               		.cfi_endproc
 1235               	.LFE114:
 1237               		.section	.text.sendchar,"ax",@progbits
 1238               	.global	sendchar
 1240               	sendchar:
 1241               	.LVL69:
 1242               	.LFB120:
 637:./tmk_core/protocol/lufa/lufa.c **** 
 638:./tmk_core/protocol/lufa/lufa.c **** 
 639:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 640:./tmk_core/protocol/lufa/lufa.c ****  * sendchar
 641:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 642:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 643:./tmk_core/protocol/lufa/lufa.c **** #define SEND_TIMEOUT 5
 644:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 645:./tmk_core/protocol/lufa/lufa.c **** {
 646:./tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 647:./tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 648:./tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
 649:./tmk_core/protocol/lufa/lufa.c **** 
 650:./tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 651:./tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 652:./tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
 653:./tmk_core/protocol/lufa/lufa.c **** 
 654:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 655:./tmk_core/protocol/lufa/lufa.c ****         return -1;
 656:./tmk_core/protocol/lufa/lufa.c **** 
 657:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 658:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 659:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 660:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 661:./tmk_core/protocol/lufa/lufa.c ****     }
 662:./tmk_core/protocol/lufa/lufa.c **** 
 663:./tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 664:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 665:./tmk_core/protocol/lufa/lufa.c ****     }
 666:./tmk_core/protocol/lufa/lufa.c **** 
 667:./tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 668:./tmk_core/protocol/lufa/lufa.c **** 
 669:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 670:./tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 671:./tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 672:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 673:./tmk_core/protocol/lufa/lufa.c ****         }
 674:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 675:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 676:./tmk_core/protocol/lufa/lufa.c ****         }
 677:./tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 678:./tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 679:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 680:./tmk_core/protocol/lufa/lufa.c ****         }
 681:./tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 682:./tmk_core/protocol/lufa/lufa.c ****     }
 683:./tmk_core/protocol/lufa/lufa.c **** 
 684:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 685:./tmk_core/protocol/lufa/lufa.c **** 
 686:./tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 687:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 688:./tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()));
 689:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 690:./tmk_core/protocol/lufa/lufa.c ****     } else {
 691:./tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 692:./tmk_core/protocol/lufa/lufa.c ****     }
 693:./tmk_core/protocol/lufa/lufa.c **** 
 694:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 695:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 696:./tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 697:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 698:./tmk_core/protocol/lufa/lufa.c ****     return -1;
 699:./tmk_core/protocol/lufa/lufa.c **** }
 700:./tmk_core/protocol/lufa/lufa.c **** #else
 701:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 702:./tmk_core/protocol/lufa/lufa.c **** {
 1243               		.loc 1 702 1 view -0
 1244               		.cfi_startproc
 1245               	/* prologue: function */
 1246               	/* frame size = 0 */
 1247               	/* stack size = 0 */
 1248               	.L__stack_usage = 0
 703:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 1249               		.loc 1 703 5 view .LVU368
 704:./tmk_core/protocol/lufa/lufa.c **** }
 1250               		.loc 1 704 1 is_stmt 0 view .LVU369
 1251 0000 80E0      		ldi r24,0
 1252               	.LVL70:
 1253               	/* epilogue start */
 1254               		.loc 1 704 1 view .LVU370
 1255 0002 0895      		ret
 1256               		.cfi_endproc
 1257               	.LFE120:
 1259               		.section	.text.virtser_init,"ax",@progbits
 1260               	.global	virtser_init
 1262               	virtser_init:
 1263               	.LFB121:
 705:./tmk_core/protocol/lufa/lufa.c **** #endif
 706:./tmk_core/protocol/lufa/lufa.c **** 
 707:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 708:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 709:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 710:./tmk_core/protocol/lufa/lufa.c **** 
 711:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 712:./tmk_core/protocol/lufa/lufa.c **** void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t byte2) 
 713:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 714:./tmk_core/protocol/lufa/lufa.c ****   event.Data1 = byte0;
 715:./tmk_core/protocol/lufa/lufa.c ****   event.Data2 = byte1;
 716:./tmk_core/protocol/lufa/lufa.c ****   event.Data3 = byte2;
 717:./tmk_core/protocol/lufa/lufa.c **** 
 718:./tmk_core/protocol/lufa/lufa.c ****   uint8_t cable = 0;
 719:./tmk_core/protocol/lufa/lufa.c **** 
 720:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPNUM);
 721:./tmk_core/protocol/lufa/lufa.c **** 
 722:./tmk_core/protocol/lufa/lufa.c ****   //if the length is undefined we assume it is a SYSEX message
 723:./tmk_core/protocol/lufa/lufa.c ****   if (midi_packet_length(byte0) == UNDEFINED) {
 724:./tmk_core/protocol/lufa/lufa.c ****     switch(cnt) {
 725:./tmk_core/protocol/lufa/lufa.c ****       case 3:
 726:./tmk_core/protocol/lufa/lufa.c ****         if (byte2 == SYSEX_END)
 727:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_3);
 728:./tmk_core/protocol/lufa/lufa.c ****         else
 729:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 730:./tmk_core/protocol/lufa/lufa.c ****         break;
 731:./tmk_core/protocol/lufa/lufa.c ****       case 2:
 732:./tmk_core/protocol/lufa/lufa.c ****         if (byte1 == SYSEX_END)
 733:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_2);
 734:./tmk_core/protocol/lufa/lufa.c ****         else
 735:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 736:./tmk_core/protocol/lufa/lufa.c ****         break;
 737:./tmk_core/protocol/lufa/lufa.c ****       case 1:
 738:./tmk_core/protocol/lufa/lufa.c ****         if (byte0 == SYSEX_END)
 739:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_1);
 740:./tmk_core/protocol/lufa/lufa.c ****         else
 741:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 742:./tmk_core/protocol/lufa/lufa.c ****         break;
 743:./tmk_core/protocol/lufa/lufa.c ****       default:
 744:./tmk_core/protocol/lufa/lufa.c ****         return; //invalid cnt
 745:./tmk_core/protocol/lufa/lufa.c ****     }
 746:./tmk_core/protocol/lufa/lufa.c ****   } else {
 747:./tmk_core/protocol/lufa/lufa.c ****     //deal with 'system common' messages
 748:./tmk_core/protocol/lufa/lufa.c ****     //TODO are there any more?
 749:./tmk_core/protocol/lufa/lufa.c ****     switch(byte0 & 0xF0){
 750:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGPOSITION:
 751:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_3);
 752:./tmk_core/protocol/lufa/lufa.c ****         break;
 753:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGSELECT:
 754:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_TC_QUARTERFRAME:
 755:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_2);
 756:./tmk_core/protocol/lufa/lufa.c ****         break;
 757:./tmk_core/protocol/lufa/lufa.c ****       default:
 758:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, byte0);
 759:./tmk_core/protocol/lufa/lufa.c ****         break;
 760:./tmk_core/protocol/lufa/lufa.c ****     }
 761:./tmk_core/protocol/lufa/lufa.c ****   }
 762:./tmk_core/protocol/lufa/lufa.c **** 
 763:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_Write_Stream_LE(&event, sizeof(event), NULL);
 764:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_ClearIN();
 765:./tmk_core/protocol/lufa/lufa.c **** 
 766:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_SendEventPacket(&USB_MIDI_Interface, &event);
 767:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_Flush(&USB_MIDI_Interface);
 768:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 769:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 770:./tmk_core/protocol/lufa/lufa.c **** }
 771:./tmk_core/protocol/lufa/lufa.c **** 
 772:./tmk_core/protocol/lufa/lufa.c **** void usb_get_midi(MidiDevice * device) {
 773:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 774:./tmk_core/protocol/lufa/lufa.c ****   while (MIDI_Device_ReceiveEventPacket(&USB_MIDI_Interface, &event)) {
 775:./tmk_core/protocol/lufa/lufa.c **** 
 776:./tmk_core/protocol/lufa/lufa.c ****     midi_packet_length_t length = midi_packet_length(event.Data1);
 777:./tmk_core/protocol/lufa/lufa.c ****     uint8_t input[3];
 778:./tmk_core/protocol/lufa/lufa.c ****     input[0] = event.Data1;
 779:./tmk_core/protocol/lufa/lufa.c ****     input[1] = event.Data2;
 780:./tmk_core/protocol/lufa/lufa.c ****     input[2] = event.Data3;
 781:./tmk_core/protocol/lufa/lufa.c ****     if (length == UNDEFINED) {
 782:./tmk_core/protocol/lufa/lufa.c ****       //sysex
 783:./tmk_core/protocol/lufa/lufa.c ****       if (event.Event == MIDI_EVENT(0, SYSEX_START_OR_CONT) || event.Event == MIDI_EVENT(0, SYSEX_E
 784:./tmk_core/protocol/lufa/lufa.c ****         length = 3;
 785:./tmk_core/protocol/lufa/lufa.c ****       } else if (event.Event == MIDI_EVENT(0, SYSEX_ENDS_IN_2)) {
 786:./tmk_core/protocol/lufa/lufa.c ****         length = 2;
 787:./tmk_core/protocol/lufa/lufa.c ****       } else if(event.Event ==  MIDI_EVENT(0, SYSEX_ENDS_IN_1)) {
 788:./tmk_core/protocol/lufa/lufa.c ****         length = 1;
 789:./tmk_core/protocol/lufa/lufa.c ****       } else {
 790:./tmk_core/protocol/lufa/lufa.c ****         //XXX what to do?
 791:./tmk_core/protocol/lufa/lufa.c ****       }
 792:./tmk_core/protocol/lufa/lufa.c ****     }
 793:./tmk_core/protocol/lufa/lufa.c **** 
 794:./tmk_core/protocol/lufa/lufa.c ****     //pass the data to the device input function
 795:./tmk_core/protocol/lufa/lufa.c ****     if (length != UNDEFINED)
 796:./tmk_core/protocol/lufa/lufa.c ****       midi_device_input(device, length, input);
 797:./tmk_core/protocol/lufa/lufa.c ****   }
 798:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 799:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 800:./tmk_core/protocol/lufa/lufa.c **** }
 801:./tmk_core/protocol/lufa/lufa.c **** 
 802:./tmk_core/protocol/lufa/lufa.c **** void midi_usb_init(MidiDevice * device){
 803:./tmk_core/protocol/lufa/lufa.c ****   midi_device_init(device);
 804:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_send_func(device, usb_send_func);
 805:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_pre_input_process_func(device, usb_get_midi);
 806:./tmk_core/protocol/lufa/lufa.c **** 
 807:./tmk_core/protocol/lufa/lufa.c ****   SetupHardware();
 808:./tmk_core/protocol/lufa/lufa.c ****   sei();
 809:./tmk_core/protocol/lufa/lufa.c **** }
 810:./tmk_core/protocol/lufa/lufa.c **** 
 811:./tmk_core/protocol/lufa/lufa.c **** void MIDI_Task(void)
 812:./tmk_core/protocol/lufa/lufa.c **** {
 813:./tmk_core/protocol/lufa/lufa.c **** 
 814:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 815:./tmk_core/protocol/lufa/lufa.c ****     dprint("in MIDI_TASK\n");
 816:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 817:./tmk_core/protocol/lufa/lufa.c ****       return;
 818:./tmk_core/protocol/lufa/lufa.c ****     dprint("continuing in MIDI_TASK\n");
 819:./tmk_core/protocol/lufa/lufa.c **** 
 820:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPADDR);
 821:./tmk_core/protocol/lufa/lufa.c **** 
 822:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady())
 823:./tmk_core/protocol/lufa/lufa.c ****     {
 824:./tmk_core/protocol/lufa/lufa.c **** 
 825:./tmk_core/protocol/lufa/lufa.c ****         dprint("Endpoint is ready\n");
 826:./tmk_core/protocol/lufa/lufa.c **** 
 827:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDICommand = 0;
 828:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDIPitch;
 829:./tmk_core/protocol/lufa/lufa.c **** 
 830:./tmk_core/protocol/lufa/lufa.c ****         /* Get board button status - if pressed use channel 10 (percussion), otherwise use channel 
 831:./tmk_core/protocol/lufa/lufa.c ****         uint8_t Channel = MIDI_CHANNEL(1);
 832:./tmk_core/protocol/lufa/lufa.c **** 
 833:./tmk_core/protocol/lufa/lufa.c ****         MIDICommand = MIDI_COMMAND_NOTE_ON;
 834:./tmk_core/protocol/lufa/lufa.c ****         MIDIPitch   = 0x3E;
 835:./tmk_core/protocol/lufa/lufa.c **** 
 836:./tmk_core/protocol/lufa/lufa.c ****         /* Check if a MIDI command is to be sent */
 837:./tmk_core/protocol/lufa/lufa.c ****         if (MIDICommand)
 838:./tmk_core/protocol/lufa/lufa.c ****         {
 839:./tmk_core/protocol/lufa/lufa.c ****             dprint("Command exists\n");
 840:./tmk_core/protocol/lufa/lufa.c ****             MIDI_EventPacket_t MIDIEvent = (MIDI_EventPacket_t)
 841:./tmk_core/protocol/lufa/lufa.c ****                 {
 842:./tmk_core/protocol/lufa/lufa.c ****                     .Event       = MIDI_EVENT(0, MIDICommand),
 843:./tmk_core/protocol/lufa/lufa.c **** 
 844:./tmk_core/protocol/lufa/lufa.c ****                     .Data1       = MIDICommand | Channel,
 845:./tmk_core/protocol/lufa/lufa.c ****                     .Data2       = MIDIPitch,
 846:./tmk_core/protocol/lufa/lufa.c ****                     .Data3       = MIDI_STANDARD_VELOCITY,
 847:./tmk_core/protocol/lufa/lufa.c ****                 };
 848:./tmk_core/protocol/lufa/lufa.c **** 
 849:./tmk_core/protocol/lufa/lufa.c ****             /* Write the MIDI event packet to the endpoint */
 850:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Write_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
 851:./tmk_core/protocol/lufa/lufa.c **** 
 852:./tmk_core/protocol/lufa/lufa.c ****             /* Send the data in the endpoint to the host */
 853:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearIN();
 854:./tmk_core/protocol/lufa/lufa.c ****         }
 855:./tmk_core/protocol/lufa/lufa.c ****     }
 856:./tmk_core/protocol/lufa/lufa.c **** 
 857:./tmk_core/protocol/lufa/lufa.c **** 
 858:./tmk_core/protocol/lufa/lufa.c ****     /* Select the MIDI OUT stream */
 859:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_OUT_EPADDR);
 860:./tmk_core/protocol/lufa/lufa.c **** 
 861:./tmk_core/protocol/lufa/lufa.c ****     /* Check if a MIDI command has been received */
 862:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 863:./tmk_core/protocol/lufa/lufa.c ****     {
 864:./tmk_core/protocol/lufa/lufa.c ****         MIDI_EventPacket_t MIDIEvent;
 865:./tmk_core/protocol/lufa/lufa.c **** 
 866:./tmk_core/protocol/lufa/lufa.c ****         /* Read the MIDI event packet from the endpoint */
 867:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Read_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
 868:./tmk_core/protocol/lufa/lufa.c **** 
 869:./tmk_core/protocol/lufa/lufa.c ****         /* If the endpoint is now empty, clear the bank */
 870:./tmk_core/protocol/lufa/lufa.c ****         if (!(Endpoint_BytesInEndpoint()))
 871:./tmk_core/protocol/lufa/lufa.c ****         {
 872:./tmk_core/protocol/lufa/lufa.c ****             /* Clear the endpoint ready for new packet */
 873:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearOUT();
 874:./tmk_core/protocol/lufa/lufa.c ****         }
 875:./tmk_core/protocol/lufa/lufa.c ****     }
 876:./tmk_core/protocol/lufa/lufa.c **** }
 877:./tmk_core/protocol/lufa/lufa.c **** 
 878:./tmk_core/protocol/lufa/lufa.c **** #endif
 879:./tmk_core/protocol/lufa/lufa.c **** 
 880:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 881:./tmk_core/protocol/lufa/lufa.c ****  * VIRTUAL SERIAL
 882:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 883:./tmk_core/protocol/lufa/lufa.c **** 
 884:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 885:./tmk_core/protocol/lufa/lufa.c **** void virtser_init(void)
 886:./tmk_core/protocol/lufa/lufa.c **** {
 1264               		.loc 1 886 1 is_stmt 1 view -0
 1265               		.cfi_startproc
 1266               	/* prologue: function */
 1267               	/* frame size = 0 */
 1268               	/* stack size = 0 */
 1269               	.L__stack_usage = 0
 887:./tmk_core/protocol/lufa/lufa.c ****   cdc_device.State.ControlLineStates.DeviceToHost = CDC_CONTROL_LINE_IN_DSR ;
 1270               		.loc 1 887 3 view .LVU372
 1271               		.loc 1 887 51 is_stmt 0 view .LVU373
 1272 0000 82E0      		ldi r24,lo8(2)
 1273 0002 90E0      		ldi r25,0
 1274 0004 9093 0000 		sts cdc_device+18+1,r25
 1275 0008 8093 0000 		sts cdc_device+18,r24
 888:./tmk_core/protocol/lufa/lufa.c ****   CDC_Device_SendControlLineStateChange(&cdc_device);
 1276               		.loc 1 888 3 is_stmt 1 view .LVU374
 1277 000c 80E0      		ldi r24,lo8(cdc_device)
 1278 000e 90E0      		ldi r25,hi8(cdc_device)
 1279 0010 0C94 0000 		jmp CDC_Device_SendControlLineStateChange
 1280               	.LVL71:
 1281               		.cfi_endproc
 1282               	.LFE121:
 1284               		.section	.text.virtser_recv,"ax",@progbits
 1285               		.weak	virtser_recv
 1287               	virtser_recv:
 1288               	.LVL72:
 1289               	.LFB122:
 889:./tmk_core/protocol/lufa/lufa.c **** }
 890:./tmk_core/protocol/lufa/lufa.c **** 
 891:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) __attribute__ ((weak));
 892:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c)
 893:./tmk_core/protocol/lufa/lufa.c **** {
 1290               		.loc 1 893 1 view -0
 1291               		.cfi_startproc
 1292               	/* prologue: function */
 1293               	/* frame size = 0 */
 1294               	/* stack size = 0 */
 1295               	.L__stack_usage = 0
 894:./tmk_core/protocol/lufa/lufa.c ****   // Ignore by default
 895:./tmk_core/protocol/lufa/lufa.c **** }
 1296               		.loc 1 895 1 view .LVU376
 1297               	/* epilogue start */
 1298 0000 0895      		ret
 1299               		.cfi_endproc
 1300               	.LFE122:
 1302               		.section	.text.virtser_task,"ax",@progbits
 1303               	.global	virtser_task
 1305               	virtser_task:
 1306               	.LFB123:
 896:./tmk_core/protocol/lufa/lufa.c **** 
 897:./tmk_core/protocol/lufa/lufa.c **** void virtser_task(void)
 898:./tmk_core/protocol/lufa/lufa.c **** {
 1307               		.loc 1 898 1 view -0
 1308               		.cfi_startproc
 1309               	/* prologue: function */
 1310               	/* frame size = 0 */
 1311               	/* stack size = 0 */
 1312               	.L__stack_usage = 0
 899:./tmk_core/protocol/lufa/lufa.c ****   uint16_t count = CDC_Device_BytesReceived(&cdc_device);
 1313               		.loc 1 899 3 view .LVU378
 1314               		.loc 1 899 20 is_stmt 0 view .LVU379
 1315 0000 80E0      		ldi r24,lo8(cdc_device)
 1316 0002 90E0      		ldi r25,hi8(cdc_device)
 1317 0004 0E94 0000 		call CDC_Device_BytesReceived
 1318               	.LVL73:
 900:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ch;
 1319               		.loc 1 900 3 is_stmt 1 view .LVU380
 901:./tmk_core/protocol/lufa/lufa.c ****   if (count)
 1320               		.loc 1 901 3 view .LVU381
 1321               		.loc 1 901 6 is_stmt 0 view .LVU382
 1322 0008 892B      		or r24,r25
 1323 000a 01F0      		breq .L91
 902:./tmk_core/protocol/lufa/lufa.c ****   {
 903:./tmk_core/protocol/lufa/lufa.c ****     ch = CDC_Device_ReceiveByte(&cdc_device);
 1324               		.loc 1 903 5 is_stmt 1 view .LVU383
 1325               		.loc 1 903 10 is_stmt 0 view .LVU384
 1326 000c 80E0      		ldi r24,lo8(cdc_device)
 1327 000e 90E0      		ldi r25,hi8(cdc_device)
 1328               	.LVL74:
 1329               		.loc 1 903 10 view .LVU385
 1330 0010 0E94 0000 		call CDC_Device_ReceiveByte
 1331               	.LVL75:
 904:./tmk_core/protocol/lufa/lufa.c ****     virtser_recv(ch);
 1332               		.loc 1 904 5 is_stmt 1 view .LVU386
 1333 0014 0C94 0000 		jmp virtser_recv
 1334               	.LVL76:
 1335               	.L91:
 1336               	/* epilogue start */
 905:./tmk_core/protocol/lufa/lufa.c ****   }
 906:./tmk_core/protocol/lufa/lufa.c **** }
 1337               		.loc 1 906 1 is_stmt 0 view .LVU387
 1338 0018 0895      		ret
 1339               		.cfi_endproc
 1340               	.LFE123:
 1342               		.section	.text.virtser_send,"ax",@progbits
 1343               	.global	virtser_send
 1345               	virtser_send:
 1346               	.LVL77:
 1347               	.LFB124:
 907:./tmk_core/protocol/lufa/lufa.c **** void virtser_send(const uint8_t byte)
 908:./tmk_core/protocol/lufa/lufa.c **** {
 1348               		.loc 1 908 1 is_stmt 1 view -0
 1349               		.cfi_startproc
 1350               		.loc 1 908 1 is_stmt 0 view .LVU389
 1351 0000 CF93      		push r28
 1352               	.LCFI10:
 1353               		.cfi_def_cfa_offset 3
 1354               		.cfi_offset 28, -2
 1355               	/* prologue: function */
 1356               	/* frame size = 0 */
 1357               	/* stack size = 1 */
 1358               	.L__stack_usage = 1
 909:./tmk_core/protocol/lufa/lufa.c ****   uint8_t timeout = 255;
 1359               		.loc 1 909 3 is_stmt 1 view .LVU390
 1360               	.LVL78:
 910:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ep = Endpoint_GetCurrentEndpoint();
 1361               		.loc 1 910 3 view .LVU391
 1362               	.LBB235:
 1363               	.LBI235:
 250:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1364               		.loc 2 250 26 view .LVU392
 1365               	.LBB236:
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1366               		.loc 2 253 6 view .LVU393
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1367               		.loc 2 253 15 is_stmt 0 view .LVU394
 1368 0002 C091 E900 		lds r28,233
 1369               	.LBB237:
 1370               	.LBI237:
 238:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1371               		.loc 2 238 26 is_stmt 1 view .LVU395
 1372               	.LBB238:
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1373               		.loc 2 240 5 view .LVU396
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1374               		.loc 2 240 13 is_stmt 0 view .LVU397
 1375 0006 9091 EC00 		lds r25,236
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1376               		.loc 2 240 55 view .LVU398
 1377 000a 90FD      		sbrc r25,0
 1378 000c 00C0      		rjmp .L101
 1379 000e 90E0      		ldi r25,0
 1380               	.L94:
 1381               	.LVL79:
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1382               		.loc 2 240 55 view .LVU399
 1383               	.LBE238:
 1384               	.LBE237:
 1385               	.LBE236:
 1386               	.LBE235:
 911:./tmk_core/protocol/lufa/lufa.c **** 
 912:./tmk_core/protocol/lufa/lufa.c ****   if (cdc_device.State.ControlLineStates.HostToDevice & CDC_CONTROL_LINE_OUT_DTR)
 1387               		.loc 1 912 3 is_stmt 1 view .LVU400
 1388               		.loc 1 912 55 is_stmt 0 view .LVU401
 1389 0010 2091 0000 		lds r18,cdc_device+16
 1390               		.loc 1 912 6 view .LVU402
 1391 0014 20FF      		sbrs r18,0
 1392 0016 00C0      		rjmp .L93
 1393               	.LBB243:
 1394               	.LBB241:
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1395               		.loc 2 253 21 view .LVU403
 1396 0018 CF70      		andi r28,lo8(15)
 1397               	.LVL80:
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1398               		.loc 2 253 44 view .LVU404
 1399 001a C92B      		or r28,r25
 1400               	.LBE241:
 1401               	.LBE243:
 913:./tmk_core/protocol/lufa/lufa.c ****   {
 914:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 915:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(cdc_device.Config.DataINEndpoint.Address);
 1402               		.loc 1 915 5 is_stmt 1 view .LVU405
 1403               	.LVL81:
 1404               	.LBB244:
 1405               	.LBI244:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1406               		.loc 2 267 23 view .LVU406
 1407               	.LBB245:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1408               		.loc 2 270 6 view .LVU407
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1409               		.loc 2 270 23 is_stmt 0 view .LVU408
 1410 001c 9091 0000 		lds r25,cdc_device+1
 1411 0020 9F70      		andi r25,lo8(15)
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1412               		.loc 2 270 12 view .LVU409
 1413 0022 9093 E900 		sts 233,r25
 1414               	.LVL82:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1415               		.loc 2 270 12 view .LVU410
 1416               	.LBE245:
 1417               	.LBE244:
 916:./tmk_core/protocol/lufa/lufa.c **** 
 917:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 1418               		.loc 1 917 5 is_stmt 1 view .LVU411
 1419               	.LBB246:
 1420               	.LBI246:
 311:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1421               		.loc 2 311 23 view .LVU412
 1422               	.LBB247:
 313:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1423               		.loc 2 313 5 view .LVU413
 313:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1424               		.loc 2 313 14 is_stmt 0 view .LVU414
 1425 0026 9091 EB00 		lds r25,235
 1426               	.LBE247:
 1427               	.LBE246:
 1428               		.loc 1 917 8 view .LVU415
 1429 002a 90FF      		sbrs r25,0
 1430 002c 00C0      		rjmp .L100
 1431               	.LBB248:
 1432               	.LBI248:
 368:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1433               		.loc 2 368 23 is_stmt 1 view .LVU416
 1434               	.LBB249:
 370:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1435               		.loc 2 370 5 view .LVU417
 370:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1436               		.loc 2 370 14 is_stmt 0 view .LVU418
 1437 002e 9091 EE00 		lds r25,238
 1438               	.LBE249:
 1439               	.LBE248:
 1440               		.loc 1 917 31 view .LVU419
 1441 0032 97FD      		sbrc r25,7
 1442 0034 00C0      		rjmp .L102
 1443               	.LVL83:
 1444               	.L100:
 918:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 919:./tmk_core/protocol/lufa/lufa.c ****         return;
 920:./tmk_core/protocol/lufa/lufa.c ****     }
 921:./tmk_core/protocol/lufa/lufa.c **** 
 922:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 923:./tmk_core/protocol/lufa/lufa.c **** 
 924:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(byte);
 925:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_Flush(&cdc_device);
 926:./tmk_core/protocol/lufa/lufa.c **** 
 927:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 928:./tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
 929:./tmk_core/protocol/lufa/lufa.c ****     }
 930:./tmk_core/protocol/lufa/lufa.c **** 
 931:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 1445               		.loc 1 931 5 is_stmt 1 view .LVU420
 1446               	.LBB250:
 1447               	.LBI250:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1448               		.loc 2 267 23 view .LVU421
 1449               	.LBB251:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1450               		.loc 2 270 6 view .LVU422
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1451               		.loc 2 270 23 is_stmt 0 view .LVU423
 1452 0036 CF70      		andi r28,lo8(15)
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1453               		.loc 2 270 12 view .LVU424
 1454 0038 C093 E900 		sts 233,r28
 1455               	.L93:
 1456               	/* epilogue start */
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 1457               		.loc 2 270 12 view .LVU425
 1458               	.LBE251:
 1459               	.LBE250:
 932:./tmk_core/protocol/lufa/lufa.c ****   }
 933:./tmk_core/protocol/lufa/lufa.c **** }
 1460               		.loc 1 933 1 view .LVU426
 1461 003c CF91      		pop r28
 1462 003e 0895      		ret
 1463               	.LVL84:
 1464               	.L101:
 1465               	.LBB252:
 1466               	.LBB242:
 1467               	.LBB240:
 1468               	.LBB239:
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1469               		.loc 2 240 55 view .LVU427
 1470 0040 90E8      		ldi r25,lo8(-128)
 1471 0042 00C0      		rjmp .L94
 1472               	.L102:
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1473               		.loc 2 240 55 view .LVU428
 1474               	.LBE239:
 1475               	.LBE240:
 1476               	.LBE242:
 1477               	.LBE252:
 1478 0044 9FEF      		ldi r25,lo8(-1)
 1479               	.LVL85:
 1480               	.L97:
 1481               	.LBB253:
 1482               	.LBI253:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1483               		.loc 2 358 23 is_stmt 1 view .LVU429
 1484               	.LBB254:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1485               		.loc 2 360 5 view .LVU430
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1486               		.loc 2 360 14 is_stmt 0 view .LVU431
 1487 0046 2091 E800 		lds r18,232
 1488 004a 9150      		subi r25,lo8(-(-1))
 1489               	.LVL86:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1490               		.loc 2 360 14 view .LVU432
 1491               	.LBE254:
 1492               	.LBE253:
 922:./tmk_core/protocol/lufa/lufa.c **** 
 1493               		.loc 1 922 22 view .LVU433
 1494 004c 25FD      		sbrc r18,5
 1495 004e 00C0      		rjmp .L98
 922:./tmk_core/protocol/lufa/lufa.c **** 
 1496               		.loc 1 922 57 is_stmt 1 view .LVU434
 1497               	.LVL87:
 1498               	.LBB255:
 1499               	.LBI255:
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** {
 1500               		.loc 3 255 1 view .LVU435
 1501               	.LBB256:
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 1502               		.loc 3 257 2 view .LVU436
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1503               		.loc 3 261 2 view .LVU437
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 1504               		.loc 3 262 2 view .LVU438
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 
 1505               		.loc 3 263 2 view .LVU439
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/util/delay.h **** 	#endif
 1506               		.loc 3 273 3 view .LVU440
 1507               		.loc 3 276 2 view .LVU441
 1508 0050 25ED      		ldi r18,lo8(-43)
 1509 0052 2A95      	1:	dec r18
 1510 0054 01F4      		brne 1b
 1511 0056 0000      		nop
 1512               	.LVL88:
 1513               		.loc 3 276 2 is_stmt 0 view .LVU442
 1514               	.LBE256:
 1515               	.LBE255:
 922:./tmk_core/protocol/lufa/lufa.c **** 
 1516               		.loc 1 922 11 view .LVU443
 1517 0058 9111      		cpse r25,__zero_reg__
 1518 005a 00C0      		rjmp .L97
 1519               	.LVL89:
 1520               	.L98:
 924:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_Flush(&cdc_device);
 1521               		.loc 1 924 5 is_stmt 1 view .LVU444
 1522               	.LBB257:
 1523               	.LBI257:
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1524               		.loc 2 552 23 view .LVU445
 1525               	.LBB258:
 1526               		.loc 2 554 5 view .LVU446
 1527               		.loc 2 554 12 is_stmt 0 view .LVU447
 1528 005c 8093 F100 		sts 241,r24
 1529               	.LVL90:
 1530               		.loc 2 554 12 view .LVU448
 1531               	.LBE258:
 1532               	.LBE257:
 925:./tmk_core/protocol/lufa/lufa.c **** 
 1533               		.loc 1 925 5 is_stmt 1 view .LVU449
 1534 0060 80E0      		ldi r24,lo8(cdc_device)
 1535 0062 90E0      		ldi r25,hi8(cdc_device)
 1536               	.LVL91:
 925:./tmk_core/protocol/lufa/lufa.c **** 
 1537               		.loc 1 925 5 is_stmt 0 view .LVU450
 1538 0064 0E94 0000 		call CDC_Device_Flush
 1539               	.LVL92:
 927:./tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
 1540               		.loc 1 927 5 is_stmt 1 view .LVU451
 1541               	.LBB259:
 1542               	.LBI259:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1543               		.loc 2 405 23 view .LVU452
 1544               	.LBB260:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1545               		.loc 2 407 5 view .LVU453
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1546               		.loc 2 407 14 is_stmt 0 view .LVU454
 1547 0068 8091 E800 		lds r24,232
 1548               	.LBE260:
 1549               	.LBE259:
 927:./tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
 1550               		.loc 1 927 8 view .LVU455
 1551 006c 80FF      		sbrs r24,0
 1552 006e 00C0      		rjmp .L100
 928:./tmk_core/protocol/lufa/lufa.c ****     }
 1553               		.loc 1 928 7 is_stmt 1 view .LVU456
 1554               	.LBB261:
 1555               	.LBI261:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1556               		.loc 2 453 23 view .LVU457
 1557               	.LBB262:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1558               		.loc 2 456 6 view .LVU458
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1559               		.loc 2 456 13 is_stmt 0 view .LVU459
 1560 0070 8091 E800 		lds r24,232
 1561 0074 8E77      		andi r24,lo8(126)
 1562 0076 8093 E800 		sts 232,r24
 1563 007a 00C0      		rjmp .L100
 1564               	.LBE262:
 1565               	.LBE261:
 1566               		.cfi_endproc
 1567               	.LFE124:
 1569               		.section	.text.startup.main,"ax",@progbits
 1570               		.weak	main
 1572               	main:
 1573               	.LFB127:
 934:./tmk_core/protocol/lufa/lufa.c **** #endif
 935:./tmk_core/protocol/lufa/lufa.c **** 
 936:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 937:./tmk_core/protocol/lufa/lufa.c ****  * main
 938:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 939:./tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void)
 940:./tmk_core/protocol/lufa/lufa.c **** {
 941:./tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
 942:./tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
 943:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 944:./tmk_core/protocol/lufa/lufa.c **** 
 945:./tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
 946:./tmk_core/protocol/lufa/lufa.c ****     // clock_prescale_set(clock_div_1);
 947:./tmk_core/protocol/lufa/lufa.c **** 
 948:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (1 << CLKPCE);
 949:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 950:./tmk_core/protocol/lufa/lufa.c **** }
 951:./tmk_core/protocol/lufa/lufa.c **** 
 952:./tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void)
 953:./tmk_core/protocol/lufa/lufa.c **** {
 954:./tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
 955:./tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
 956:./tmk_core/protocol/lufa/lufa.c **** 
 957:./tmk_core/protocol/lufa/lufa.c ****     USB_Init();
 958:./tmk_core/protocol/lufa/lufa.c **** 
 959:./tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
 960:./tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
 961:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 962:./tmk_core/protocol/lufa/lufa.c **** }
 963:./tmk_core/protocol/lufa/lufa.c **** 
 964:./tmk_core/protocol/lufa/lufa.c **** 
 965:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 966:./tmk_core/protocol/lufa/lufa.c **** void fallthrough_callback(MidiDevice * device,
 967:./tmk_core/protocol/lufa/lufa.c ****     uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t byte2);
 968:./tmk_core/protocol/lufa/lufa.c **** void cc_callback(MidiDevice * device,
 969:./tmk_core/protocol/lufa/lufa.c ****     uint8_t chan, uint8_t num, uint8_t val);
 970:./tmk_core/protocol/lufa/lufa.c **** void sysex_callback(MidiDevice * device,
 971:./tmk_core/protocol/lufa/lufa.c ****     uint16_t start, uint8_t length, uint8_t * data);
 972:./tmk_core/protocol/lufa/lufa.c **** #endif
 973:./tmk_core/protocol/lufa/lufa.c **** 
 974:./tmk_core/protocol/lufa/lufa.c **** int main(void)  __attribute__ ((weak));
 975:./tmk_core/protocol/lufa/lufa.c **** int main(void)
 976:./tmk_core/protocol/lufa/lufa.c **** {
 1574               		.loc 1 976 1 is_stmt 1 view -0
 1575               		.cfi_startproc
 1576               	/* prologue: function */
 1577               	/* frame size = 0 */
 1578               	/* stack size = 0 */
 1579               	.L__stack_usage = 0
 977:./tmk_core/protocol/lufa/lufa.c **** 
 978:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 979:./tmk_core/protocol/lufa/lufa.c ****     midi_device_init(&midi_device);
 980:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_send_func(&midi_device, usb_send_func);
 981:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_pre_input_process_func(&midi_device, usb_get_midi);
 982:./tmk_core/protocol/lufa/lufa.c **** #endif
 983:./tmk_core/protocol/lufa/lufa.c **** 
 984:./tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 1580               		.loc 1 984 5 view .LVU461
 1581               	.LBB272:
 1582               	.LBI272:
 939:./tmk_core/protocol/lufa/lufa.c **** {
 1583               		.loc 1 939 13 view .LVU462
 1584               	.LBB273:
 942:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1585               		.loc 1 942 5 view .LVU463
 942:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1586               		.loc 1 942 11 is_stmt 0 view .LVU464
 1587 0000 84B7      		in r24,0x34
 1588 0002 877F      		andi r24,lo8(-9)
 1589 0004 84BF      		out 0x34,r24
 943:./tmk_core/protocol/lufa/lufa.c **** 
 1590               		.loc 1 943 5 is_stmt 1 view .LVU465
 1591               	.LBB274:
 1592               	.LBI274:
 1593               		.file 6 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h"
   1:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
   5:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
   8:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  11:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      distribution.
  15:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  16:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  20:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  32:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /* $Id: wdt.h 2503 2016-02-07 22:59:47Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  34:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /*
  35:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****  */
  37:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  38:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  41:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  44:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /** \file */
  45:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  48:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  57:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  61:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     the following:
  68:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  69:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     \code
  70:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  73:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  75:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     {
  80:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     }
  84:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     \endcode
  85:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  86:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** */
  91:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  92:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /**
  93:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** */
  98:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
  99:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 101:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 103:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #else
 106:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #endif
 108:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 109:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #else
 114:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #endif
 116:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 117:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #else
 120:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #endif
 122:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 123:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 125:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 126:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /**
 127:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 134:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** */
 136:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 137:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 138:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 140:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** /*
 141:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** */
 152:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** do { \
 154:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** ); \
 174:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** } while(0)
 175:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 176:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : \
 184:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** );
 191:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 192:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 194:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** )
 210:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 211:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** do { \
 213:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** ); \
 231:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** }while(0)
 232:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 233:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 235:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** static __inline__
 236:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** {
 239:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 241:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			);
 256:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 257:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 259:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			);
 274:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 275:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 277:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			);
 292:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 293:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else
 294:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****  	{
 295:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 			);
 310:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 311:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** }
 312:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 313:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** static __inline__
 314:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** {
 317:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 319:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				);
 337:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 338:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 340:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				);
 358:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 359:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 361:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				);
 379:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 380:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else
 381:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 382:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				);
 400:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 401:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** }
 402:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 403:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** #else
 404:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 405:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** static __inline__
 406:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** {
 409:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 411:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		);
 425:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 426:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else
 427:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 428:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		);
 442:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 443:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** }
 444:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 
 445:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** static __inline__
 446:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** void wdt_disable (void)
 1594               		.loc 6 447 6 view .LVU466
 1595               	.LBE274:
 1596               	.LBE273:
 1597               	.LBE272:
 448:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** {
 449:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 1598               		.loc 6 449 2 view .LVU467
 1599               	.LBB278:
 1600               	.LBB277:
 1601               	.LBB276:
 1602               	.LBB275:
 450:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 451:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		);
 466:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	}
 467:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	else
 468:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 	{
 469:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 1603               		.loc 6 469 9 view .LVU468
 470:/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 1604               		.loc 6 470 3 view .LVU469
 1605               	/* #APP */
 1606               	 ;  470 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/avr/wdt.h" 1
 1607 0006 0FB6      		in __tmp_reg__,__SREG__
 1608 0008 F894      		cli
 1609 000a A895      		wdr
 1610 000c 8091 6000 		lds r24,96
 1611 0010 8861      		ori r24,24
 1612 0012 8093 6000 		sts 96,r24
 1613 0016 1092 6000 		sts 96,__zero_reg__
 1614 001a 0FBE      		out __SREG__,__tmp_reg__
 1615               		
 1616               	 ;  0 "" 2
 1617               	/* #NOAPP */
 1618               	.LBE275:
 1619               	.LBE276:
 948:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1620               		.loc 1 948 5 view .LVU470
 948:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1621               		.loc 1 948 11 is_stmt 0 view .LVU471
 1622 001c 80E8      		ldi r24,lo8(-128)
 1623 001e 8093 6100 		sts 97,r24
 949:./tmk_core/protocol/lufa/lufa.c **** }
 1624               		.loc 1 949 5 is_stmt 1 view .LVU472
 949:./tmk_core/protocol/lufa/lufa.c **** }
 1625               		.loc 1 949 11 is_stmt 0 view .LVU473
 1626 0022 1092 6100 		sts 97,__zero_reg__
 1627               	.LBE277:
 1628               	.LBE278:
 985:./tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1629               		.loc 1 985 5 is_stmt 1 view .LVU474
 1630 0026 0E94 0000 		call keyboard_setup
 1631               	.LVL93:
 986:./tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 1632               		.loc 1 986 5 view .LVU475
 1633               	.LBB279:
 1634               	.LBI279:
 952:./tmk_core/protocol/lufa/lufa.c **** {
 1635               		.loc 1 952 13 view .LVU476
 1636               	.LBB280:
 955:./tmk_core/protocol/lufa/lufa.c **** 
 1637               		.loc 1 955 5 view .LVU477
 1638 002a 0E94 0000 		call USB_Disable
 1639               	.LVL94:
 957:./tmk_core/protocol/lufa/lufa.c **** 
 1640               		.loc 1 957 5 view .LVU478
 1641 002e 0E94 0000 		call USB_Init
 1642               	.LVL95:
 960:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1643               		.loc 1 960 5 view .LVU479
 1644               	.LBB281:
 1645               	.LBI281:
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 1646               		.loc 4 176 24 view .LVU480
 1647               	.LBE281:
 1648               	.LBE280:
 1649               	.LBE279:
 1650               		.loc 4 178 6 view .LVU481
 1651               	.LBB286:
 1652               	.LBB285:
 1653               	.LBB284:
 1654               	.LBB282:
 1655               	.LBI282:
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 1656               		.loc 5 88 23 view .LVU482
 1657               	.LBB283:
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 1658               		.loc 5 90 5 view .LVU483
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1659               		.loc 5 113 7 view .LVU484
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1660               		.loc 5 113 14 is_stmt 0 view .LVU485
 1661 0032 8091 E200 		lds r24,226
 1662 0036 8460      		ori r24,lo8(4)
 1663 0038 8093 E200 		sts 226,r24
 1664               		.loc 5 114 7 is_stmt 1 view .LVU486
 1665               	.LVL96:
 1666               		.loc 5 114 7 is_stmt 0 view .LVU487
 1667               	.LBE283:
 1668               	.LBE282:
 1669               	.LBE284:
 961:./tmk_core/protocol/lufa/lufa.c **** }
 1670               		.loc 1 961 33 is_stmt 1 view .LVU488
 1671               	.LBE285:
 1672               	.LBE286:
 987:./tmk_core/protocol/lufa/lufa.c ****     sei();
 1673               		.loc 1 987 5 view .LVU489
 1674               	/* #APP */
 1675               	 ;  987 "./tmk_core/protocol/lufa/lufa.c" 1
 1676 003c 7894      		sei
 1677               	 ;  0 "" 2
 988:./tmk_core/protocol/lufa/lufa.c **** 
 989:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 990:./tmk_core/protocol/lufa/lufa.c ****     midi_register_fallthrough_callback(&midi_device, fallthrough_callback);
 991:./tmk_core/protocol/lufa/lufa.c ****     midi_register_cc_callback(&midi_device, cc_callback);
 992:./tmk_core/protocol/lufa/lufa.c ****     midi_register_sysex_callback(&midi_device, sysex_callback);
 993:./tmk_core/protocol/lufa/lufa.c **** 
 994:./tmk_core/protocol/lufa/lufa.c ****     // init_notes();
 995:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 0, 1, 2);
 996:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 15, 1, 0);
 997:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteon(&midi_device, 0, 64, 127);
 998:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteoff(&midi_device, 0, 64, 127);
 999:./tmk_core/protocol/lufa/lufa.c **** #endif
1000:./tmk_core/protocol/lufa/lufa.c **** 
1001:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
1002:./tmk_core/protocol/lufa/lufa.c ****     serial_init();
1003:./tmk_core/protocol/lufa/lufa.c **** #endif
1004:./tmk_core/protocol/lufa/lufa.c **** 
1005:./tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
1006:./tmk_core/protocol/lufa/lufa.c **** 
1007:./tmk_core/protocol/lufa/lufa.c **** #ifdef WAIT_FOR_USB
1008:./tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
1009:./tmk_core/protocol/lufa/lufa.c ****     #if defined(INTERRUPT_CONTROL_ENDPOINT)
1010:./tmk_core/protocol/lufa/lufa.c ****             ;
1011:./tmk_core/protocol/lufa/lufa.c ****     #else
1012:./tmk_core/protocol/lufa/lufa.c ****             USB_USBTask();
1013:./tmk_core/protocol/lufa/lufa.c ****     #endif
1014:./tmk_core/protocol/lufa/lufa.c ****     }
1015:./tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
1016:./tmk_core/protocol/lufa/lufa.c **** #else
1017:./tmk_core/protocol/lufa/lufa.c ****     USB_USBTask();
 1678               		.loc 1 1017 5 view .LVU490
 1679               	/* #NOAPP */
 1680 003e 0E94 0000 		call USB_USBTask
 1681               	.LVL97:
1018:./tmk_core/protocol/lufa/lufa.c **** #endif
1019:./tmk_core/protocol/lufa/lufa.c ****     /* init modules */
1020:./tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 1682               		.loc 1 1020 5 view .LVU491
 1683 0042 0E94 0000 		call keyboard_init
 1684               	.LVL98:
1021:./tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 1685               		.loc 1 1021 5 view .LVU492
 1686 0046 80E0      		ldi r24,lo8(lufa_driver)
 1687 0048 90E0      		ldi r25,hi8(lufa_driver)
 1688 004a 0E94 0000 		call host_set_driver
 1689               	.LVL99:
1022:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
1023:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
1024:./tmk_core/protocol/lufa/lufa.c **** #endif
1025:./tmk_core/protocol/lufa/lufa.c **** 
1026:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1027:./tmk_core/protocol/lufa/lufa.c ****     virtser_init();
 1690               		.loc 1 1027 5 view .LVU493
 1691 004e 0E94 0000 		call virtser_init
 1692               	.LVL100:
 1693               	.L116:
1028:./tmk_core/protocol/lufa/lufa.c **** #endif
1029:./tmk_core/protocol/lufa/lufa.c **** 
1030:./tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
1031:./tmk_core/protocol/lufa/lufa.c ****     while (1) {
1032:./tmk_core/protocol/lufa/lufa.c ****         #ifndef BLUETOOTH_ENABLE
1033:./tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 1694               		.loc 1 1033 32 is_stmt 0 view .LVU494
 1695 0052 8091 0000 		lds r24,USB_DeviceState
 1696               		.loc 1 1033 15 view .LVU495
 1697 0056 8530      		cpi r24,lo8(5)
 1698 0058 01F0      		breq .L120
1034:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
1035:./tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
1036:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
1037:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
1038:./tmk_core/protocol/lufa/lufa.c ****             }
1039:./tmk_core/protocol/lufa/lufa.c ****         }
1040:./tmk_core/protocol/lufa/lufa.c ****         #endif
1041:./tmk_core/protocol/lufa/lufa.c **** 
1042:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1043:./tmk_core/protocol/lufa/lufa.c ****         midi_device_process(&midi_device);
1044:./tmk_core/protocol/lufa/lufa.c ****         // MIDI_Task();
1045:./tmk_core/protocol/lufa/lufa.c **** #endif
1046:./tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 1699               		.loc 1 1046 9 is_stmt 1 view .LVU496
 1700 005a 0E94 0000 		call keyboard_task
 1701               	.LVL101:
1047:./tmk_core/protocol/lufa/lufa.c **** 
1048:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1049:./tmk_core/protocol/lufa/lufa.c ****         virtser_task();
 1702               		.loc 1 1049 9 view .LVU497
 1703 005e 0E94 0000 		call virtser_task
 1704               	.LVL102:
1050:./tmk_core/protocol/lufa/lufa.c ****         CDC_Device_USBTask(&cdc_device);
 1705               		.loc 1 1050 9 view .LVU498
 1706 0062 80E0      		ldi r24,lo8(cdc_device)
 1707 0064 90E0      		ldi r25,hi8(cdc_device)
 1708 0066 0E94 0000 		call CDC_Device_USBTask
 1709               	.LVL103:
1033:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1710               		.loc 1 1033 15 is_stmt 0 view .LVU499
 1711 006a 00C0      		rjmp .L116
 1712               	.L120:
1034:./tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
 1713               		.loc 1 1034 25 is_stmt 1 view .LVU500
1035:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 1714               		.loc 1 1035 13 view .LVU501
 1715 006c 0E94 0000 		call suspend_power_down
 1716               	.LVL104:
1036:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1717               		.loc 1 1036 13 view .LVU502
1036:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1718               		.loc 1 1036 16 is_stmt 0 view .LVU503
 1719 0070 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1720 0074 8823      		tst r24
 1721 0076 01F0      		breq .L116
1036:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1722               		.loc 1 1036 51 discriminator 1 view .LVU504
 1723 0078 0E94 0000 		call suspend_wakeup_condition
 1724               	.LVL105:
1036:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1725               		.loc 1 1036 48 discriminator 1 view .LVU505
 1726 007c 8823      		tst r24
 1727 007e 01F0      		breq .L116
1037:./tmk_core/protocol/lufa/lufa.c ****             }
 1728               		.loc 1 1037 21 is_stmt 1 view .LVU506
 1729 0080 0E94 0000 		call USB_Device_SendRemoteWakeup
 1730               	.LVL106:
 1731 0084 00C0      		rjmp .L116
 1732               		.cfi_endproc
 1733               	.LFE127:
 1735               	.global	cdc_device
 1736               		.section	.data.cdc_device,"aw",@progbits
 1739               	cdc_device:
 1740 0000 03        		.byte	3
 1741 0001 85        		.byte	-123
 1742 0002 1000      		.word	16
 1743 0004 00        		.zero	1
 1744 0005 01        		.byte	1
 1745 0006 06        		.byte	6
 1746 0007 1000      		.word	16
 1747 0009 00        		.zero	1
 1748 000a 01        		.byte	1
 1749 000b 84        		.byte	-124
 1750 000c 0800      		.word	8
 1751 000e 00        		.zero	1
 1752 000f 01        		.byte	1
 1753 0010 0000 0000 		.zero	11
 1753      0000 0000 
 1753      0000 00
 1754               	.global	lufa_driver
 1755               		.section	.data.lufa_driver,"aw",@progbits
 1758               	lufa_driver:
 1759 0000 0000      		.word	gs(keyboard_leds)
 1760 0002 0000      		.word	gs(send_keyboard)
 1761 0004 0000      		.word	gs(send_mouse)
 1762 0006 0000      		.word	gs(send_system)
 1763 0008 0000      		.word	gs(send_consumer)
 1764               		.section	.bss.keyboard_report_sent,"aw",@nobits
 1767               	keyboard_report_sent:
 1768 0000 0000 0000 		.zero	32
 1768      0000 0000 
 1768      0000 0000 
 1768      0000 0000 
 1768      0000 0000 
 1769               		.section	.bss.keyboard_led_stats,"aw",@nobits
 1772               	keyboard_led_stats:
 1773 0000 00        		.zero	1
 1774               	.global	keyboard_protocol
 1775               		.section	.data.keyboard_protocol,"aw",@progbits
 1778               	keyboard_protocol:
 1779 0000 01        		.byte	1
 1780               	.global	keyboard_idle
 1781               		.section	.bss.keyboard_idle,"aw",@nobits
 1784               	keyboard_idle:
 1785 0000 00        		.zero	1
 1786               		.text
 1787               	.Letext0:
 1788               		.file 7 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 1789               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Endpoint.h"
 1790               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1791               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1792               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1793               		.file 12 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 1794               		.file 13 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1795               		.file 14 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/CDCClassCommon
 1796               		.file 15 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 1797               		.file 16 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/CDCClassDevice.h"
 1798               		.file 17 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon
 1799               		.file 18 "./tmk_core/common/report.h"
 1800               		.file 19 "./tmk_core/common/host_driver.h"
 1801               		.file 20 "./tmk_core/common/host.h"
 1802               		.file 21 "./tmk_core/common/keyboard.h"
 1803               		.file 22 "./tmk_core/common/action.h"
 1804               		.file 23 "./tmk_core/common/debug.h"
 1805               		.file 24 "./tmk_core/protocol/lufa/lufa.h"
 1806               		.file 25 "./quantum/keycode_config.h"
 1807               		.file 26 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 1808               		.file 27 "./tmk_core/common/suspend.h"
 1809               		.file 28 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lufa.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:12     .text.keyboard_leds:0000000000000000 keyboard_leds
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1772   .bss.keyboard_led_stats:0000000000000000 keyboard_led_stats
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:31     .text.send_mouse:0000000000000000 send_mouse
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:48     .text.send_consumer:0000000000000000 send_consumer
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:200    .text.send_system:0000000000000000 send_system
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:349    .text.send_keyboard:0000000000000000 send_keyboard
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1778   .data.keyboard_protocol:0000000000000000 keyboard_protocol
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1767   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:584    .text.EVENT_USB_Device_Connect:0000000000000000 EVENT_USB_Device_Connect
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:640    .text.EVENT_USB_Device_Disconnect:0000000000000000 EVENT_USB_Device_Disconnect
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:661    .text.EVENT_USB_Device_Reset:0000000000000000 EVENT_USB_Device_Reset
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:676    .text.EVENT_USB_Device_Suspend:0000000000000000 EVENT_USB_Device_Suspend
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:694    .text.EVENT_USB_Device_WakeUp:0000000000000000 EVENT_USB_Device_WakeUp
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:712    .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:879    .text.EVENT_USB_Device_ControlRequest:0000000000000000 EVENT_USB_Device_ControlRequest
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1739   .data.cdc_device:0000000000000000 cdc_device
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1784   .bss.keyboard_idle:0000000000000000 keyboard_idle
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1240   .text.sendchar:0000000000000000 sendchar
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1262   .text.virtser_init:0000000000000000 virtser_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1287   .text.virtser_recv:0000000000000000 virtser_recv
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1305   .text.virtser_task:0000000000000000 virtser_task
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1345   .text.virtser_send:0000000000000000 virtser_send
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1572   .text.startup.main:0000000000000000 main
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//cc1jlfJ5.s:1758   .data.lufa_driver:0000000000000000 lufa_driver

UNDEFINED SYMBOLS
USB_DeviceState
Endpoint_Write_Stream_LE
keymap_config
USB_IsInitialized
USB_Disable
USB_Init
suspend_wakeup_init
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
CDC_Device_ProcessControlRequest
Endpoint_ClearStatusStage
Endpoint_Write_Control_Stream_LE
clear_keyboard
CDC_Device_SendControlLineStateChange
CDC_Device_BytesReceived
CDC_Device_ReceiveByte
CDC_Device_Flush
keyboard_setup
USB_USBTask
keyboard_init
host_set_driver
keyboard_task
CDC_Device_USBTask
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
__do_copy_data
__do_clear_bss
