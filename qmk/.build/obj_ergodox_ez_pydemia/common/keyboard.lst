   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 80 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 81 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE103:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 83 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 84 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE104:
  45               		.section	.text.keyboard_init,"ax",@progbits
  46               	.global	keyboard_init
  48               	keyboard_init:
  49               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  50               		.loc 1 87 26 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  56               		.loc 1 88 5 view .LVU5
  57 0000 0E94 0000 		call timer_init
  58               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  59               		.loc 1 89 5 view .LVU6
  60 0004 0E94 0000 		call matrix_init
  61               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
  62               		.loc 1 102 5 view .LVU7
  63 0008 0C94 0000 		jmp magic
  64               	.LVL3:
  65               		.cfi_endproc
  66               	.LFE105:
  68               		.section	.text.keyboard_task,"ax",@progbits
  69               	.global	keyboard_task
  71               	keyboard_task:
  72               	.LFB106:
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  73               		.loc 1 120 1 view -0
  74               		.cfi_startproc
  75 0000 BF92      		push r11
  76               	.LCFI0:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 11, -2
  79 0002 CF92      		push r12
  80               	.LCFI1:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 12, -3
  83 0004 DF92      		push r13
  84               	.LCFI2:
  85               		.cfi_def_cfa_offset 5
  86               		.cfi_offset 13, -4
  87 0006 EF92      		push r14
  88               	.LCFI3:
  89               		.cfi_def_cfa_offset 6
  90               		.cfi_offset 14, -5
  91 0008 FF92      		push r15
  92               	.LCFI4:
  93               		.cfi_def_cfa_offset 7
  94               		.cfi_offset 15, -6
  95 000a 0F93      		push r16
  96               	.LCFI5:
  97               		.cfi_def_cfa_offset 8
  98               		.cfi_offset 16, -7
  99 000c 1F93      		push r17
 100               	.LCFI6:
 101               		.cfi_def_cfa_offset 9
 102               		.cfi_offset 17, -8
 103 000e CF93      		push r28
 104               	.LCFI7:
 105               		.cfi_def_cfa_offset 10
 106               		.cfi_offset 28, -9
 107 0010 DF93      		push r29
 108               	.LCFI8:
 109               		.cfi_def_cfa_offset 11
 110               		.cfi_offset 29, -10
 111 0012 CDB7      		in r28,__SP_L__
 112 0014 DEB7      		in r29,__SP_H__
 113               	.LCFI9:
 114               		.cfi_def_cfa_register 28
 115 0016 2A97      		sbiw r28,10
 116               	.LCFI10:
 117               		.cfi_def_cfa_offset 21
 118 0018 0FB6      		in __tmp_reg__,__SREG__
 119 001a F894      		cli
 120 001c DEBF      		out __SP_H__,r29
 121 001e 0FBE      		out __SREG__,__tmp_reg__
 122 0020 CDBF      		out __SP_L__,r28
 123               	/* prologue: function */
 124               	/* frame size = 10 */
 125               	/* stack size = 19 */
 126               	.L__stack_usage = 19
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 127               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 128               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 129               		.loc 1 126 5 view .LVU11
 130               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 131               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 132               		.loc 1 129 5 view .LVU13
 133 0022 0E94 0000 		call matrix_scan
 134               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 135               		.loc 1 130 5 view .LVU14
 136               	.LBB6:
 137               		.loc 1 130 10 view .LVU15
 138               		.loc 1 130 10 is_stmt 0 view .LVU16
 139 0026 80E0      		ldi r24,lo8(matrix_prev.5003)
 140 0028 C82E      		mov r12,r24
 141 002a 80E0      		ldi r24,hi8(matrix_prev.5003)
 142 002c D82E      		mov r13,r24
 143               	.LBE6:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 144               		.loc 1 129 5 view .LVU17
 145 002e 10E0      		ldi r17,0
 146 0030 00E0      		ldi r16,0
 147               	.LVL6:
 148               	.L11:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 149               		.loc 1 129 5 view .LVU18
 150 0032 B02E      		mov r11,r16
 151               	.LVL7:
 152               	.LBB10:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 153               		.loc 1 131 9 is_stmt 1 view .LVU19
 154               		.loc 1 131 22 is_stmt 0 view .LVU20
 155 0034 802F      		mov r24,r16
 156 0036 0E94 0000 		call matrix_get_row
 157               	.LVL8:
 158 003a E82E      		mov r14,r24
 159               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 160               		.loc 1 132 9 is_stmt 1 view .LVU21
 161               		.loc 1 132 49 is_stmt 0 view .LVU22
 162 003c F601      		movw r30,r12
 163 003e F190      		ld r15,Z+
 164 0040 6F01      		movw r12,r30
 165               	.LVL10:
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 166               		.loc 1 133 9 is_stmt 1 view .LVU23
 167               		.loc 1 133 12 is_stmt 0 view .LVU24
 168 0042 F816      		cp r15,r24
 169 0044 01F4      		brne .+2
 170 0046 00C0      		rjmp .L5
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 171               		.loc 1 148 13 is_stmt 1 view .LVU25
 172               		.loc 1 148 17 is_stmt 0 view .LVU26
 173 0048 8091 0000 		lds r24,debug_config
 174               		.loc 1 148 16 view .LVU27
 175 004c 81FD      		sbrc r24,1
 176               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU28
 177 004e 0E94 0000 		call matrix_print
 178               	.LVL11:
 179               	.L6:
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 180               		.loc 1 149 13 view .LVU29
 181               	.LBB7:
 182               		.loc 1 149 18 view .LVU30
 183               		.loc 1 149 18 is_stmt 0 view .LVU31
 184               	.LBE7:
 185               	.LBE10:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 186               		.loc 1 129 5 view .LVU32
 187 0052 90E0      		ldi r25,0
 188 0054 80E0      		ldi r24,0
 189               	.LBB11:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 190               		.loc 1 132 23 view .LVU33
 191 0056 FE24      		eor r15,r14
 192               	.LVL12:
 193               	.LBB8:
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 194               		.loc 1 150 21 view .LVU34
 195 0058 2F2D      		mov r18,r15
 196 005a 30E0      		ldi r19,0
 197               	.LVL13:
 198               	.L10:
 199               		.loc 1 150 21 view .LVU35
 200 005c 482F      		mov r20,r24
 201               	.LVL14:
 202               		.loc 1 150 17 is_stmt 1 view .LVU36
 203               		.loc 1 150 21 is_stmt 0 view .LVU37
 204 005e B901      		movw r22,r18
 205 0060 082E      		mov r0,r24
 206 0062 00C0      		rjmp 2f
 207               		1:
 208 0064 7595      		asr r23
 209 0066 6795      		ror r22
 210               		2:
 211 0068 0A94      		dec r0
 212 006a 02F4      		brpl 1b
 213               		.loc 1 150 20 view .LVU38
 214 006c 60FF      		sbrs r22,0
 215 006e 00C0      		rjmp .L7
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 216               		.loc 1 151 21 is_stmt 1 view .LVU39
 217               		.loc 1 151 45 is_stmt 0 view .LVU40
 218 0070 8E83      		std Y+6,r24
 219 0072 BF82      		std Y+7,r11
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 220               		.loc 1 153 66 view .LVU41
 221 0074 81E0      		ldi r24,lo8(1)
 222 0076 90E0      		ldi r25,0
 223               	.LVL15:
 224               		.loc 1 153 66 view .LVU42
 225 0078 6C01      		movw r12,r24
 226 007a 00C0      		rjmp 2f
 227               		1:
 228 007c CC0C      		lsl r12
 229 007e DD1C      		rol r13
 230               		2:
 231 0080 4A95      		dec r20
 232 0082 02F4      		brpl 1b
 233               		.loc 1 153 48 view .LVU43
 234 0084 2E2D      		mov r18,r14
 235 0086 30E0      		ldi r19,0
 236 0088 2C21      		and r18,r12
 237 008a 3D21      		and r19,r13
 238 008c 232B      		or r18,r19
 239 008e 01F4      		brne .L8
 240 0090 80E0      		ldi r24,0
 241               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 242               		.loc 1 151 45 view .LVU44
 243 0092 8887      		std Y+8,r24
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 244               		.loc 1 154 34 view .LVU45
 245 0094 0E94 0000 		call timer_read
 246               	.LVL16:
 247               		.loc 1 154 47 view .LVU46
 248 0098 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 249               		.loc 1 151 45 view .LVU47
 250 009a 782F      		mov r23,r24
 251 009c 9A87      		std Y+10,r25
 252 009e 8987      		std Y+9,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 253               		.loc 1 151 21 view .LVU48
 254 00a0 4E81      		ldd r20,Y+6
 255 00a2 5F81      		ldd r21,Y+7
 256 00a4 6885      		ldd r22,Y+8
 257 00a6 8A85      		ldd r24,Y+10
 258 00a8 0E94 0000 		call action_exec
 259               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 260               		.loc 1 157 21 is_stmt 1 view .LVU49
 261               		.loc 1 157 36 is_stmt 0 view .LVU50
 262 00ac F801      		movw r30,r16
 263 00ae E050      		subi r30,lo8(-(matrix_prev.5003))
 264 00b0 F040      		sbci r31,hi8(-(matrix_prev.5003))
 265 00b2 8081      		ld r24,Z
 266 00b4 8C25      		eor r24,r12
 267 00b6 8083      		st Z,r24
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 268               		.loc 1 159 21 is_stmt 1 view .LVU51
 269               	.LVL18:
 270               	.L9:
 271               		.loc 1 159 21 is_stmt 0 view .LVU52
 272               	.LBE8:
 273               	.LBE11:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 274               		.loc 1 171 5 is_stmt 1 view .LVU53
 275 00b8 0E94 0000 		call mousekey_task
 276               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 277               		.loc 1 195 5 view .LVU54
 278               		.loc 1 195 23 is_stmt 0 view .LVU55
 279 00bc 0E94 0000 		call host_keyboard_leds
 280               	.LVL20:
 281               		.loc 1 195 8 view .LVU56
 282 00c0 9091 0000 		lds r25,led_status.5004
 283 00c4 8917      		cp r24,r25
 284 00c6 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 285               		.loc 1 196 9 is_stmt 1 view .LVU57
 286               		.loc 1 196 22 is_stmt 0 view .LVU58
 287 00c8 0E94 0000 		call host_keyboard_leds
 288               	.LVL21:
 289               		.loc 1 196 20 view .LVU59
 290 00cc 8093 0000 		sts led_status.5004,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 291               		.loc 1 197 9 is_stmt 1 view .LVU60
 292               	.LVL22:
 293               	.LBB12:
 294               	.LBI12:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 295               		.loc 1 201 6 view .LVU61
 296               	.LBB13:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 297               		.loc 1 203 5 view .LVU62
 298               		.loc 1 203 54 view .LVU63
 299               		.loc 1 203 72 view .LVU64
 300               		.loc 1 203 85 view .LVU65
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 301               		.loc 1 204 5 view .LVU66
 302               	/* epilogue start */
 303               	.LBE13:
 304               	.LBE12:
 199:./tmk_core/common/keyboard.c **** 
 305               		.loc 1 199 1 is_stmt 0 view .LVU67
 306 00d0 2A96      		adiw r28,10
 307 00d2 0FB6      		in __tmp_reg__,__SREG__
 308 00d4 F894      		cli
 309 00d6 DEBF      		out __SP_H__,r29
 310 00d8 0FBE      		out __SREG__,__tmp_reg__
 311 00da CDBF      		out __SP_L__,r28
 312 00dc DF91      		pop r29
 313 00de CF91      		pop r28
 314 00e0 1F91      		pop r17
 315 00e2 0F91      		pop r16
 316 00e4 FF90      		pop r15
 317 00e6 EF90      		pop r14
 318               	.LVL23:
 199:./tmk_core/common/keyboard.c **** 
 319               		.loc 1 199 1 view .LVU68
 320 00e8 DF90      		pop r13
 321 00ea CF90      		pop r12
 322 00ec BF90      		pop r11
 323               	.LBB15:
 324               	.LBB14:
 325               		.loc 1 204 5 view .LVU69
 326 00ee 0C94 0000 		jmp led_set
 327               	.LVL24:
 328               	.L7:
 329               		.loc 1 204 5 view .LVU70
 330 00f2 0196      		adiw r24,1
 331               	.LVL25:
 332               		.loc 1 204 5 view .LVU71
 333               	.LBE14:
 334               	.LBE15:
 335               	.LBB16:
 336               	.LBB9:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 337               		.loc 1 149 13 discriminator 2 view .LVU72
 338 00f4 8630      		cpi r24,6
 339 00f6 9105      		cpc r25,__zero_reg__
 340 00f8 01F0      		breq .+2
 341 00fa 00C0      		rjmp .L10
 342               	.LVL26:
 343               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 344               		.loc 1 149 13 discriminator 2 view .LVU73
 345 00fc 0F5F      		subi r16,-1
 346 00fe 1F4F      		sbci r17,-1
 347               	.LVL27:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 348               		.loc 1 149 13 discriminator 2 view .LVU74
 349               	.LBE9:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 350               		.loc 1 130 5 view .LVU75
 351 0100 0E30      		cpi r16,14
 352 0102 1105      		cpc r17,__zero_reg__
 353 0104 01F0      		breq .+2
 354 0106 00C0      		rjmp .L11
 355               	.LBE16:
 165:./tmk_core/common/keyboard.c **** 
 356               		.loc 1 165 5 is_stmt 1 view .LVU76
 165:./tmk_core/common/keyboard.c **** 
 357               		.loc 1 165 17 is_stmt 0 view .LVU77
 358 0108 8FEF      		ldi r24,lo8(-1)
 359 010a 8983      		std Y+1,r24
 360 010c 8A83      		std Y+2,r24
 361 010e 1B82      		std Y+3,__zero_reg__
 362 0110 0E94 0000 		call timer_read
 363               	.LVL28:
 364 0114 8160      		ori r24,1
 365 0116 782F      		mov r23,r24
 366 0118 9D83      		std Y+5,r25
 367 011a 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 368               		.loc 1 165 5 view .LVU78
 369 011c 4981      		ldd r20,Y+1
 370 011e 5A81      		ldd r21,Y+2
 371 0120 6B81      		ldd r22,Y+3
 372 0122 8D81      		ldd r24,Y+5
 373 0124 0E94 0000 		call action_exec
 374               	.LVL29:
 375 0128 00C0      		rjmp .L9
 376               	.LVL30:
 377               	.L4:
 378               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 379               		.loc 1 199 1 view .LVU79
 380 012a 2A96      		adiw r28,10
 381 012c 0FB6      		in __tmp_reg__,__SREG__
 382 012e F894      		cli
 383 0130 DEBF      		out __SP_H__,r29
 384 0132 0FBE      		out __SREG__,__tmp_reg__
 385 0134 CDBF      		out __SP_L__,r28
 386 0136 DF91      		pop r29
 387 0138 CF91      		pop r28
 388 013a 1F91      		pop r17
 389 013c 0F91      		pop r16
 390 013e FF90      		pop r15
 391 0140 EF90      		pop r14
 392               	.LVL31:
 199:./tmk_core/common/keyboard.c **** 
 393               		.loc 1 199 1 view .LVU80
 394 0142 DF90      		pop r13
 395 0144 CF90      		pop r12
 396 0146 BF90      		pop r11
 397 0148 0895      		ret
 398               		.cfi_endproc
 399               	.LFE106:
 401               		.section	.text.keyboard_set_leds,"ax",@progbits
 402               	.global	keyboard_set_leds
 404               	keyboard_set_leds:
 405               	.LVL32:
 406               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 407               		.loc 1 202 1 is_stmt 1 view -0
 408               		.cfi_startproc
 409               	/* prologue: function */
 410               	/* frame size = 0 */
 411               	/* stack size = 0 */
 412               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 413               		.loc 1 203 5 view .LVU82
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 414               		.loc 1 203 54 view .LVU83
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 415               		.loc 1 203 72 view .LVU84
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 416               		.loc 1 203 85 view .LVU85
 417               		.loc 1 204 5 view .LVU86
 418 0000 0C94 0000 		jmp led_set
 419               	.LVL33:
 420               		.loc 1 204 5 is_stmt 0 view .LVU87
 421               		.cfi_endproc
 422               	.LFE107:
 424               		.section	.bss.led_status.5004,"aw",@nobits
 427               	led_status.5004:
 428 0000 00        		.zero	1
 429               		.section	.bss.matrix_prev.5003,"aw",@nobits
 432               	matrix_prev.5003:
 433 0000 0000 0000 		.zero	14
 433      0000 0000 
 433      0000 0000 
 433      0000 
 434               		.text
 435               	.Letext0:
 436               		.file 2 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdint.h"
 437               		.file 3 "./tmk_core/common/keyboard.h"
 438               		.file 4 "./tmk_core/common/matrix.h"
 439               		.file 5 "./tmk_core/common/action.h"
 440               		.file 6 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 441               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 442               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 443               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 444               		.file 10 "/usr/local/Cellar/avr-gcc/8.1.0/avr/include/stdio.h"
 445               		.file 11 "./tmk_core/common/host.h"
 446               		.file 12 "./tmk_core/common/debug.h"
 447               		.file 13 "./quantum/keycode_config.h"
 448               		.file 14 "./quantum/keymap.h"
 449               		.file 15 "./tmk_core/common/timer.h"
 450               		.file 16 "./tmk_core/common/command.h"
 451               		.file 17 "./tmk_core/common/action_layer.h"
 452               		.file 18 "./tmk_core/common/mousekey.h"
 453               		.file 19 "./tmk_core/common/led.h"
 454               		.file 20 "./tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:13     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:31     .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:48     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:71     .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:432    .bss.matrix_prev.5003:0000000000000000 matrix_prev.5003
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:427    .bss.led_status.5004:0000000000000000 led_status.5004
/var/folders/_c/44sm70yj4mq2k0mvzts6tsbc0000gn/T//ccGHBynY.s:404    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
